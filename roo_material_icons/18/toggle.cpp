#include "toggle.h"

using namespace roo_display;

// Image file ic_18_toggle_star_half 18x18, 4-bit Alpha,  RLE, 80 bytes 
static const uint8_t ic_18_toggle_star_half_data[] PROGMEM = {
  0x80, 0xD0, 0x00, 0x06, 0x77, 0x20, 0x0D, 0x77, 0x18, 0x24, 0xFE, 0x47, 0x78, 0x2A, 0xF9, 0xA7,
  0x28, 0x32, 0x35, 0x67, 0xA8, 0x52, 0xF7, 0x65, 0x32, 0x30, 0x10, 0xBE, 0x18, 0x58, 0xBC, 0xEF,
  0xB1, 0x40, 0xAD, 0x38, 0x13, 0xEA, 0x70, 0x8C, 0x28, 0x15, 0xF8, 0x72, 0x08, 0xB2, 0x0C, 0x08,
  0x73, 0x0A, 0xB8, 0x22, 0x09, 0x97, 0x30, 0xDC, 0x81, 0x86, 0xD7, 0x20, 0x1A, 0x85, 0xC3, 0x3D,
  0xEF, 0x17, 0x18, 0x15, 0xE7, 0x48, 0x17, 0xE5, 0x71, 0x04, 0x01, 0x60, 0x10, 0x48, 0x0C, 0x40,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_18_toggle_star_half() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      18, 18, ic_18_toggle_star_half_data, Alpha4(color::Black));
  return value;
}

// Image file ic_18_toggle_star_border 18x18, 4-bit Alpha,  RLE, 87 bytes 
static const uint8_t ic_18_toggle_star_border_data[] PROGMEM = {
  0x80, 0xD0, 0x00, 0x06, 0x77, 0x20, 0x0D, 0x77, 0x18, 0x24, 0xEE, 0x47, 0x78, 0x2A, 0x99, 0xA7,
  0x28, 0x94, 0x23, 0x56, 0x7F, 0x22, 0xF8, 0x65, 0x32, 0x38, 0x51, 0xBF, 0xEC, 0xA8, 0x28, 0x58,
  0xAC, 0xEF, 0xB1, 0x48, 0x1A, 0xE3, 0x68, 0x13, 0xEA, 0x78, 0x18, 0xF5, 0x48, 0x15, 0xF8, 0x72,
  0x08, 0x0C, 0x40, 0xC0, 0x87, 0x38, 0x6A, 0x90, 0x22, 0x09, 0x97, 0x38, 0x1D, 0x68, 0xA8, 0x18,
  0x6D, 0x72, 0x89, 0x01, 0xFE, 0xC3, 0x3C, 0xEF, 0x17, 0x18, 0x15, 0xE7, 0x48, 0x17, 0xE5, 0x71,
  0x04, 0x01, 0x60, 0x10, 0x48, 0x0C, 0x40,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_18_toggle_star_border() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      18, 18, ic_18_toggle_star_border_data, Alpha4(color::Black));
  return value;
}

// Image file ic_18_toggle_star 18x18, 4-bit Alpha,  RLE, 68 bytes 
static const uint8_t ic_18_toggle_star_data[] PROGMEM = {
  0x80, 0xD0, 0x00, 0x06, 0x77, 0x20, 0x0D, 0x77, 0x10, 0x4A, 0x04, 0x77, 0x0A, 0xA0, 0xA7, 0x28,
  0x32, 0x35, 0x67, 0xC8, 0x37, 0x65, 0x32, 0x30, 0x10, 0xBF, 0xD0, 0xB0, 0x14, 0x0A, 0xFB, 0x09,
  0x70, 0x8F, 0x90, 0x77, 0x20, 0x8E, 0x08, 0x73, 0x0A, 0xE0, 0x97, 0x30, 0xDE, 0x0D, 0x72, 0x01,
  0xA8, 0x2C, 0x33, 0xCA, 0x01, 0x71, 0x81, 0x5E, 0x74, 0x81, 0x7E, 0x57, 0x10, 0x40, 0x16, 0x01,
  0x04, 0x80, 0xC4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_18_toggle_star() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      18, 18, ic_18_toggle_star_data, Alpha4(color::Black));
  return value;
}

