#include "hardware.h"

using namespace roo_display;

// Image file ic_outlined_18_hardware_adf_scanner 18x18, 4-bit Alpha,  RLE, 71 bytes.
static const uint8_t ic_outlined_18_hardware_adf_scanner_data[] PROGMEM = {
  0x80, 0xE6, 0x00, 0x28, 0x04, 0x50, 0x27, 0x10, 0x7F, 0x90, 0x77, 0x10, 0x70, 0xD6, 0x0D, 0x07,
  0x71, 0x07, 0x0D, 0x60, 0xD0, 0x77, 0x10, 0x70, 0xD6, 0x0D, 0x07, 0x68, 0x21, 0x6B, 0xE8, 0x02,
  0x78, 0x2E, 0xB6, 0x14, 0x80, 0x92, 0xD3, 0x81, 0x2F, 0x27, 0x28, 0x21, 0x2F, 0x22, 0x81, 0x3F,
  0x27, 0x18, 0x34, 0xD2, 0xF3, 0x28, 0x13, 0xF2, 0x73, 0x81, 0x2F, 0x32, 0x03, 0xFF, 0x03, 0x20,
  0x18, 0x09, 0x25, 0x01, 0x80, 0xE3, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_adf_scanner() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_adf_scanner_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_browser_not_supported 18x18, 4-bit Alpha,  RLE, 84 bytes.
static const uint8_t ic_outlined_18_hardware_browser_not_supported_data[] PROGMEM = {
  0x80, 0xE4, 0x00, 0x10, 0x61, 0x80, 0x55, 0x78, 0x1B, 0x73, 0x80, 0x37, 0x0B, 0x05, 0x68, 0x16,
  0xF7, 0x70, 0x70, 0x66, 0x82, 0x68, 0xB7, 0x60, 0x70, 0x66, 0x83, 0x67, 0x0B, 0x75, 0x07, 0x06,
  0x60, 0x60, 0x72, 0x0B, 0x07, 0x40, 0x70, 0x66, 0x06, 0x07, 0x30, 0xB0, 0x73, 0x07, 0x06, 0x60,
  0x60, 0x74, 0x0B, 0x07, 0x20, 0x70, 0x66, 0x06, 0x07, 0x58, 0x3B, 0x70, 0x76, 0x60, 0x60, 0x76,
  0x82, 0xB7, 0x35, 0x60, 0x50, 0xB8, 0x02, 0x78, 0x18, 0xF7, 0x71, 0x80, 0x55, 0x0B, 0x06, 0x77,
  0x30, 0x18, 0x0C, 0x30,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_browser_not_supported() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_browser_not_supported_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_browser_updated 18x18, 4-bit Alpha,  RLE, 97 bytes.
static const uint8_t ic_outlined_18_hardware_browser_updated_data[] PROGMEM = {
  0x80, 0xC2, 0x00, 0x18, 0x02, 0x31, 0x01, 0x03, 0x70, 0x10, 0xEE, 0x81, 0x36, 0xE7, 0x81, 0x3F,
  0x26, 0x06, 0x0E, 0x78, 0x13, 0xF2, 0x60, 0x60, 0xE7, 0x81, 0x3F, 0x26, 0x06, 0x0E, 0x78, 0x13,
  0xF2, 0x48, 0x59, 0x16, 0xE0, 0x64, 0x48, 0x13, 0xF2, 0x38, 0x61, 0xDD, 0x8E, 0x7F, 0x64, 0x81,
  0x3F, 0x24, 0x01, 0x0D, 0xB8, 0x26, 0x17, 0x12, 0x81, 0x3F, 0x25, 0x86, 0x1D, 0xF6, 0x02, 0xF3,
  0x28, 0x13, 0xF2, 0x60, 0x10, 0x52, 0x81, 0x2F, 0x32, 0x01, 0x98, 0x09, 0x0D, 0x90, 0x13, 0x83,
  0x47, 0x78, 0xEC, 0x83, 0xE8, 0x77, 0x47, 0x08, 0xE0, 0x87, 0x30, 0x28, 0x02, 0x30, 0x28, 0x0C,
  0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_browser_updated() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_browser_updated_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_cast_connected 18x18, 4-bit Alpha,  RLE, 114 bytes.
static const uint8_t ic_outlined_18_hardware_cast_connected_data[] PROGMEM = {
  0x80, 0xC1, 0x00, 0x78, 0x09, 0x2B, 0x83, 0x70, 0x2F, 0xC8, 0x09, 0x0B, 0x84, 0xCF, 0x23, 0xF3,
  0x75, 0x85, 0x3F, 0x33, 0xF3, 0x28, 0x06, 0xB8, 0x22, 0x3F, 0x33, 0x02, 0x80, 0x4B, 0x87, 0xCF,
  0x33, 0xF3, 0x16, 0x47, 0x28, 0x53, 0xF3, 0x3F, 0x33, 0xA8, 0x1E, 0x81, 0x68, 0x93, 0x3F, 0x33,
  0xF3, 0x01, 0x39, 0xFD, 0x25, 0x89, 0x43, 0xF3, 0x3F, 0x31, 0x62, 0x02, 0xDE, 0x24, 0x85, 0x3F,
  0x33, 0xF3, 0x3A, 0x83, 0xA1, 0x1E, 0xC2, 0x8C, 0x15, 0xBC, 0xF3, 0x3F, 0x30, 0x27, 0xFC, 0x05,
  0xF4, 0x05, 0xBB, 0xB2, 0x3F, 0x31, 0x40, 0x5F, 0x70, 0xEA, 0x68, 0xB6, 0x3F, 0x33, 0xF8, 0x0B,
  0xC0, 0x9D, 0x05, 0xBB, 0xBB, 0xCF, 0x22, 0xBA, 0x06, 0xB0, 0x6B, 0x05, 0x80, 0x1B, 0x07, 0x80,
  0xC1, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_cast_connected() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_cast_connected_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_cast_for_education 18x18, 4-bit Alpha,  RLE, 118 bytes.
static const uint8_t ic_outlined_18_hardware_cast_for_education_data[] PROGMEM = {
  0x80, 0xC1, 0x00, 0x78, 0x09, 0x2B, 0x83, 0x70, 0x2F, 0xC8, 0x09, 0x0B, 0x84, 0xCF, 0x23, 0xF3,
  0x70, 0x40, 0x23, 0x84, 0x3F, 0x33, 0xF3, 0x50, 0x30, 0xBA, 0x84, 0x91, 0x03, 0xF3, 0x70, 0x9D,
  0x86, 0xE7, 0x3F, 0x31, 0x64, 0x40, 0x20, 0xAC, 0x84, 0x81, 0x3F, 0x33, 0xA8, 0x1E, 0x81, 0x28,
  0xC7, 0x54, 0xCA, 0x44, 0x03, 0xF3, 0x01, 0x39, 0xFD, 0x20, 0xBE, 0x79, 0xF7, 0x03, 0xF3, 0x16,
  0x20, 0x2D, 0xE2, 0x07, 0xED, 0x52, 0x82, 0x3F, 0x33, 0xA8, 0x3A, 0x11, 0xEC, 0x20, 0x14, 0x89,
  0x23, 0xF3, 0x02, 0x7F, 0xC0, 0x5F, 0x46, 0x89, 0x23, 0xF3, 0x14, 0x05, 0xF7, 0x0E, 0xA6, 0x8B,
  0x63, 0xF3, 0x3F, 0x80, 0xBC, 0x09, 0xD0, 0x5B, 0xBB, 0xBC, 0xF2, 0x2B, 0xA0, 0x6B, 0x06, 0xB0,
  0x58, 0x01, 0xB0, 0x78, 0x0C, 0x10,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_cast_for_education() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_cast_for_education_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_cast 18x18, 4-bit Alpha,  RLE, 100 bytes.
static const uint8_t ic_outlined_18_hardware_cast_data[] PROGMEM = {
  0x80, 0xC1, 0x00, 0x78, 0x09, 0x2B, 0x83, 0x70, 0x2F, 0xC8, 0x09, 0x0B, 0x84, 0xCF, 0x23, 0xF3,
  0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x81, 0x3F, 0x37, 0x71, 0x84, 0x3F, 0x31, 0x64, 0x75, 0x82,
  0x3F, 0x33, 0xA8, 0x1E, 0x81, 0x72, 0x89, 0x03, 0xF3, 0x01, 0x39, 0xFD, 0x27, 0x18, 0x91, 0x3F,
  0x31, 0x62, 0x02, 0xDE, 0x27, 0x82, 0x3F, 0x33, 0xA8, 0x3A, 0x11, 0xEC, 0x78, 0x92, 0x3F, 0x30,
  0x27, 0xFC, 0x05, 0xF4, 0x68, 0x92, 0x3F, 0x31, 0x40, 0x5F, 0x70, 0xEA, 0x68, 0xB6, 0x3F, 0x33,
  0xF8, 0x0B, 0xC0, 0x9D, 0x05, 0xBB, 0xBB, 0xCF, 0x22, 0xBA, 0x06, 0xB0, 0x6B, 0x05, 0x80, 0x1B,
  0x07, 0x80, 0xC1, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_cast() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_cast_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_computer 18x18, 4-bit Alpha,  RLE, 59 bytes.
static const uint8_t ic_outlined_18_hardware_computer_data[] PROGMEM = {
  0x80, 0xE3, 0x00, 0x20, 0xDF, 0xD0, 0xD0, 0x22, 0x07, 0x98, 0x09, 0x07, 0x90, 0x72, 0x07, 0x97,
  0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72,
  0x07, 0x97, 0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20, 0x5F, 0xF8,
  0x35, 0x07, 0x7D, 0xFD, 0x81, 0xD7, 0x7F, 0xFC, 0x80, 0xE2, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_computer() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_computer_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_connected_tv 18x18, 4-bit Alpha,  RLE, 100 bytes.
static const uint8_t ic_outlined_18_hardware_connected_tv_data[] PROGMEM = {
  0x80, 0xC2, 0x00, 0x18, 0x09, 0x03, 0x01, 0x30, 0x10, 0xEF, 0xD0, 0xE0, 0x12, 0x81, 0x3F, 0x27,
  0x38, 0x12, 0xF3, 0x28, 0x13, 0xF2, 0x73, 0x81, 0x2F, 0x32, 0x83, 0x3F, 0x59, 0x57, 0x18, 0x12,
  0xF3, 0x28, 0x53, 0xF3, 0x5A, 0xC1, 0x68, 0x12, 0xF3, 0x28, 0x53, 0xF6, 0xB4, 0x5D, 0x68, 0x12,
  0xF3, 0x28, 0x63, 0xF2, 0x3C, 0x58, 0x75, 0x81, 0x2F, 0x32, 0x86, 0x3F, 0x7C, 0x2D, 0x2D, 0x58,
  0x12, 0xF3, 0x28, 0x63, 0xF6, 0xB3, 0x81, 0xA5, 0x81, 0x2F, 0x32, 0x01, 0x98, 0x09, 0x0D, 0x90,
  0x13, 0x83, 0x47, 0x77, 0xDC, 0x83, 0xD7, 0x77, 0x47, 0x10, 0xAC, 0x0A, 0x75, 0x84, 0x23, 0x33,
  0x32, 0x80, 0xC6, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_connected_tv() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_connected_tv_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_desktop_mac 18x18, 4-bit Alpha,  RLE, 79 bytes.
static const uint8_t ic_outlined_18_hardware_desktop_mac_data[] PROGMEM = {
  0x77, 0x50, 0x38, 0x09, 0x27, 0x81, 0x30, 0x1F, 0xFA, 0x82, 0x13, 0xF3, 0x75, 0x84, 0x3F, 0x33,
  0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3,
  0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF9, 0x80,
  0x90, 0x78, 0x29, 0xF3, 0x3F, 0xFA, 0x03, 0x01, 0xFF, 0xA8, 0x11, 0x03, 0x80, 0x17, 0x0C, 0xA0,
  0xC8, 0x01, 0x70, 0x37, 0x02, 0xC0, 0x27, 0x50, 0xCC, 0x0C, 0x75, 0x80, 0x27, 0x77, 0x73,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_desktop_mac() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_desktop_mac_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_desktop_windows 18x18, 4-bit Alpha,  RLE, 78 bytes.
static const uint8_t ic_outlined_18_hardware_desktop_windows_data[] PROGMEM = {
  0x77, 0x50, 0x38, 0x09, 0x27, 0x81, 0x30, 0x1F, 0xFA, 0x82, 0x13, 0xF3, 0x75, 0x84, 0x3F, 0x33,
  0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3,
  0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75,
  0x84, 0x3F, 0x33, 0xF3, 0x75, 0x82, 0x3F, 0x31, 0xFF, 0xA8, 0x11, 0x03, 0x80, 0x17, 0x0B, 0xA0,
  0xB8, 0x01, 0x70, 0x37, 0x10, 0x7A, 0x07, 0x76, 0xE7, 0x58, 0x02, 0x77, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_desktop_windows() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_desktop_windows_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_developer_board_off 18x18, 4-bit Alpha,  RLE, 118 bytes.
static const uint8_t ic_outlined_18_hardware_developer_board_off_data[] PROGMEM = {
  0x80, 0xC1, 0x00, 0x07, 0x28, 0x04, 0x30, 0x25, 0x83, 0x6F, 0x70, 0x9F, 0x90, 0x34, 0x03, 0xA0,
  0x77, 0x10, 0xE0, 0x64, 0x89, 0x63, 0xF8, 0xF7, 0x03, 0x19, 0x96, 0x0E, 0xB9, 0x12, 0x84, 0x3F,
  0x29, 0xF7, 0x2A, 0x84, 0xA0, 0xED, 0xB2, 0x28, 0x23, 0xF2, 0x7A, 0x86, 0x70, 0x33, 0x20, 0xE6,
  0x48, 0x23, 0xF2, 0x7B, 0x87, 0x70, 0x79, 0x0E, 0xB9, 0x12, 0x89, 0x63, 0xF2, 0x11, 0x18, 0xF7,
  0x04, 0x0E, 0xB9, 0x12, 0x82, 0x3F, 0x27, 0xB8, 0x17, 0xF7, 0x20, 0xE0, 0x64, 0x82, 0x3F, 0x27,
  0xB0, 0x1A, 0x84, 0x70, 0x9D, 0xB2, 0x28, 0x96, 0x3F, 0x24, 0x99, 0x91, 0x9A, 0xF7, 0x07, 0x91,
  0x28, 0x13, 0xF2, 0x78, 0x16, 0xF7, 0x50, 0x10, 0xEF, 0xC0, 0x75, 0x01, 0x80, 0x63, 0x81, 0x7F,
  0x77, 0x72, 0x06, 0x07, 0x77, 0x60,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_developer_board_off() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_developer_board_off_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_developer_board 18x18, 4-bit Alpha,  RLE, 108 bytes.
static const uint8_t ic_outlined_18_hardware_developer_board_data[] PROGMEM = {
  0x80, 0xC2, 0x00, 0x98, 0x07, 0xB0, 0x44, 0x06, 0x98, 0x06, 0xB0, 0xD0, 0xE4, 0x07, 0x97, 0x30,
  0x79, 0x48, 0x96, 0x7F, 0x05, 0xBB, 0xB2, 0xBB, 0xB0, 0x7F, 0xB5, 0x28, 0x27, 0xF0, 0x7B, 0x03,
  0xB1, 0x82, 0x7F, 0xB5, 0x28, 0x27, 0xF0, 0x7B, 0x84, 0x37, 0x77, 0x07, 0x94, 0x82, 0x7F, 0x07,
  0xB8, 0x73, 0xBB, 0xB0, 0x7F, 0xB5, 0x28, 0x67, 0xF0, 0x13, 0x33, 0x1B, 0x18, 0x27, 0xFB, 0x52,
  0x82, 0x7F, 0x07, 0xB0, 0x3B, 0x10, 0x79, 0x48, 0x27, 0xF0, 0x7B, 0x03, 0xB1, 0x82, 0x7F, 0xB5,
  0x28, 0x96, 0x7F, 0x05, 0xBB, 0xB2, 0xBB, 0xB0, 0x7F, 0xB5, 0x20, 0x79, 0x73, 0x07, 0x94, 0x06,
  0x98, 0x06, 0xB0, 0xD0, 0xE5, 0x09, 0x80, 0x7B, 0x04, 0x80, 0xC3, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_developer_board() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_developer_board_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_device_hub 18x18, 4-bit Alpha,  RLE, 68 bytes.
static const uint8_t ic_outlined_18_hardware_device_hub_data[] PROGMEM = {
  0x80, 0xC7, 0x08, 0x22, 0xAA, 0x27, 0x70, 0xEA, 0x0E, 0x76, 0x03, 0xC0, 0x37, 0x60, 0xEA, 0x0E,
  0x77, 0x82, 0x2D, 0xD2, 0x77, 0x10, 0x0B, 0x77, 0x20, 0x0B, 0x77, 0x10, 0x4A, 0x04, 0x76, 0x84,
  0x4F, 0xCC, 0xF4, 0x74, 0x86, 0x4F, 0xC1, 0x1C, 0xF4, 0x70, 0xBB, 0x0C, 0x01, 0x20, 0x10, 0xCB,
  0x0B, 0x40, 0xBB, 0x01, 0x40, 0x1B, 0x0B, 0x40, 0xBB, 0x6B, 0x0B, 0x40, 0x80, 0xFB, 0x60, 0xFB,
  0x08, 0x80, 0xC2, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_device_hub() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_device_hub_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_devices_other 18x18, 4-bit Alpha,  RLE, 97 bytes.
static const uint8_t ic_outlined_18_hardware_devices_other_data[] PROGMEM = {
  0x80, 0xE3, 0x00, 0xBF, 0xE0, 0xB2, 0x81, 0x3F, 0x98, 0x09, 0x07, 0x05, 0x28, 0x13, 0xF3, 0x77,
  0x18, 0x13, 0xF3, 0x71, 0x08, 0xC8, 0x3E, 0x23, 0xF3, 0x71, 0x89, 0x0B, 0xD7, 0x79, 0xF3, 0x3F,
  0x37, 0x10, 0x0B, 0x28, 0x43, 0xF3, 0x3F, 0x33, 0x03, 0xA8, 0x2B, 0x0B, 0xB2, 0x84, 0x3F, 0x33,
  0xF3, 0x38, 0x56, 0xFE, 0xD0, 0xBB, 0x28, 0x43, 0xF3, 0x3F, 0x33, 0x85, 0xD4, 0x0C, 0x6B, 0xB2,
  0x84, 0x3F, 0x33, 0xF3, 0x38, 0x5D, 0x40, 0xC6, 0xBB, 0x28, 0xA5, 0x3F, 0x33, 0xF9, 0x77, 0x16,
  0xFE, 0xD0, 0xBD, 0x77, 0x9F, 0x30, 0xBB, 0x00, 0x3A, 0x81, 0xB0, 0x8C, 0x0E, 0x02, 0x80, 0xE2,
  0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_devices_other() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_devices_other_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_device_unknown 18x18, 4-bit Alpha,  RLE, 116 bytes.
static const uint8_t ic_outlined_18_hardware_device_unknown_data[] PROGMEM = {
  0x58, 0x04, 0x37, 0x10, 0x10, 0xEF, 0x90, 0xE0, 0x16, 0x03, 0xFB, 0x03, 0x68, 0x13, 0xFC, 0x80,
  0x2B, 0x81, 0xCF, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x89, 0x23, 0xF3, 0x06, 0xDD, 0x60,
  0x3F, 0x36, 0x89, 0x23, 0xF3, 0x4F, 0x77, 0xF4, 0x3F, 0x36, 0x83, 0x3F, 0x35, 0x72, 0x83, 0xB8,
  0x3F, 0x36, 0x81, 0x3F, 0x33, 0x84, 0x3E, 0x53, 0xF3, 0x68, 0x13, 0xF3, 0x28, 0x52, 0xE8, 0x03,
  0xF3, 0x68, 0x13, 0xF3, 0x20, 0x90, 0xC2, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36,
  0x81, 0x3F, 0x32, 0x00, 0xB2, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x32, 0x00, 0x52, 0x81, 0x3F, 0x36,
  0x81, 0x3F, 0xC8, 0x02, 0xB8, 0x1C, 0xF3, 0x60, 0x3F, 0xB0, 0x36, 0x01, 0x0E, 0xF9, 0x0E, 0x01,
  0x71, 0x80, 0x43, 0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_device_unknown() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_device_unknown_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_dock 18x18, 4-bit Alpha,  RLE, 77 bytes.
static const uint8_t ic_outlined_18_hardware_dock_data[] PROGMEM = {
  0x50, 0x18, 0x02, 0x30, 0x17, 0x20, 0x3F, 0x90, 0x37, 0x10, 0x7F, 0x90, 0x77, 0x10, 0x79, 0x80,
  0x2B, 0x90, 0x77, 0x10, 0x79, 0x69, 0x07, 0x71, 0x07, 0x96, 0x90, 0x77, 0x10, 0x79, 0x69, 0x07,
  0x71, 0x07, 0x96, 0x90, 0x77, 0x10, 0x79, 0x69, 0x07, 0x71, 0x07, 0x96, 0x90, 0x77, 0x10, 0x79,
  0x69, 0x07, 0x71, 0x07, 0x98, 0x02, 0xB9, 0x07, 0x71, 0x07, 0xF9, 0x07, 0x71, 0x03, 0xF9, 0x03,
  0x72, 0x01, 0x80, 0x23, 0x01, 0x74, 0x80, 0x23, 0x75, 0xE7, 0x58, 0x02, 0x36,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_dock() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_dock_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_earbuds_battery 18x18, 4-bit Alpha,  RLE, 101 bytes.
static const uint8_t ic_outlined_18_hardware_earbuds_battery_data[] PROGMEM = {
  0x80, 0x98, 0x60, 0x04, 0x06, 0x38, 0x15, 0x62, 0x30, 0x70, 0x64, 0x01, 0xA8, 0x92, 0x60, 0xBF,
  0xEE, 0x30, 0x8F, 0xE7, 0x30, 0x3A, 0x89, 0x34, 0x3F, 0x30, 0xBA, 0x4F, 0xBC, 0xF2, 0x28, 0x33,
  0xF3, 0x05, 0x92, 0x86, 0x8C, 0x4F, 0x02, 0xF3, 0x28, 0x33, 0xF2, 0x05, 0x92, 0x86, 0x8C, 0x4F,
  0x02, 0xF3, 0x28, 0x33, 0xF2, 0x05, 0x92, 0x86, 0x8C, 0x4F, 0x02, 0xF3, 0x28, 0x33, 0xF2, 0x05,
  0x92, 0x86, 0x9C, 0x4F, 0x02, 0xF3, 0x28, 0x96, 0x1F, 0x50, 0x9D, 0x0A, 0xFC, 0x4F, 0x02, 0xF3,
  0x38, 0x95, 0x8F, 0xDF, 0x50, 0xCF, 0xA4, 0xFD, 0xDF, 0x24, 0x81, 0x47, 0x32, 0x86, 0x27, 0x10,
  0x67, 0x76, 0x80, 0x98, 0x60,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_earbuds_battery() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_earbuds_battery_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_earbuds 18x18, 4-bit Alpha,  RLE, 107 bytes.
static const uint8_t ic_outlined_18_hardware_earbuds_data[] PROGMEM = {
  0x80, 0xC4, 0x00, 0x30, 0x25, 0x03, 0x02, 0x71, 0x09, 0xA0, 0x82, 0x05, 0x0E, 0xA0, 0xC0, 0x25,
  0x89, 0x32, 0xF5, 0x6F, 0x13, 0xF9, 0x13, 0xCC, 0x58, 0x64, 0xF2, 0x7F, 0x18, 0xD3, 0x81, 0x3F,
  0x24, 0x04, 0xB8, 0x27, 0x0A, 0xA4, 0x90, 0x44, 0x82, 0x4F, 0x41, 0x20, 0x0A, 0x49, 0x04, 0x40,
  0x49, 0x40, 0x0A, 0x49, 0x04, 0x40, 0x49, 0x40, 0x0A, 0x49, 0x04, 0x40, 0x49, 0x40, 0x0A, 0x28,
  0x21, 0x4F, 0x44, 0x04, 0x94, 0x82, 0xAA, 0x07, 0xB0, 0x44, 0x81, 0x2F, 0x33, 0x86, 0xD8, 0x1F,
  0x72, 0xF4, 0x58, 0x93, 0xCC, 0x31, 0x8F, 0x31, 0xF6, 0x5F, 0x35, 0x02, 0x0C, 0xA0, 0xE0, 0x52,
  0x08, 0xA0, 0xA7, 0x10, 0x20, 0x35, 0x02, 0x03, 0x80, 0xC4, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_earbuds() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_earbuds_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_gamepad 18x18, 4-bit Alpha,  RLE, 105 bytes.
static const uint8_t ic_outlined_18_hardware_gamepad_data[] PROGMEM = {
  0x77, 0x73, 0x84, 0x17, 0x77, 0x71, 0x75, 0x03, 0xC0, 0x37, 0x58, 0x43, 0xF3, 0x3F, 0x37, 0x58,
  0x43, 0xF3, 0x3F, 0x37, 0x58, 0x42, 0xFB, 0xBF, 0x27, 0x85, 0x13, 0x33, 0x20, 0x5A, 0x85, 0x50,
  0x23, 0x33, 0x12, 0x07, 0xC8, 0x45, 0x05, 0x50, 0x5C, 0x07, 0x28, 0x57, 0xF3, 0x3B, 0xF5, 0x28,
  0x55, 0xFB, 0x33, 0xF7, 0x28, 0x57, 0xF3, 0x3B, 0xF5, 0x28, 0x55, 0xFB, 0x33, 0xF7, 0x20, 0x7C,
  0x84, 0x50, 0x55, 0x05, 0xC0, 0x72, 0x85, 0x13, 0x33, 0x20, 0x5A, 0x85, 0x50, 0x23, 0x33, 0x17,
  0x84, 0x2F, 0xBB, 0xF2, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x03,
  0xC0, 0x37, 0x58, 0x41, 0x77, 0x77, 0x17, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_gamepad() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_gamepad_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_headphones_battery 18x18, 4-bit Alpha,  RLE, 94 bytes.
static const uint8_t ic_outlined_18_hardware_headphones_battery_data[] PROGMEM = {
  0x80, 0x99, 0x00, 0x82, 0x25, 0x62, 0x50, 0x50, 0x46, 0x84, 0x8F, 0xEE, 0xFA, 0x38, 0x28, 0xDD,
  0x74, 0x81, 0x7F, 0x52, 0x89, 0x04, 0xE9, 0x04, 0xFB, 0xCF, 0x23, 0x0E, 0x07, 0x48, 0x75, 0xF1,
  0x4F, 0x02, 0xF3, 0x28, 0x12, 0xF3, 0x59, 0x85, 0x44, 0xF0, 0x2F, 0x32, 0x82, 0x3F, 0x31, 0x38,
  0x71, 0xF5, 0x4F, 0x02, 0xF3, 0x20, 0x3A, 0x07, 0x20, 0x5A, 0x85, 0x54, 0xF0, 0x2F, 0x32, 0x03,
  0xA0, 0x72, 0x05, 0xA8, 0x55, 0x4F, 0x02, 0xF3, 0x20, 0x1A, 0x07, 0x20, 0x5A, 0x85, 0x34, 0xFD,
  0xDF, 0x23, 0x81, 0x47, 0x32, 0x81, 0x27, 0x52, 0x82, 0x67, 0x76, 0x80, 0x98, 0x60,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_headphones_battery() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_headphones_battery_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_headphones 18x18, 4-bit Alpha,  RLE, 98 bytes.
static const uint8_t ic_outlined_18_hardware_headphones_data[] PROGMEM = {
  0x80, 0xC7, 0x08, 0x21, 0x33, 0x17, 0x50, 0x30, 0xBC, 0x0B, 0x03, 0x72, 0x89, 0x05, 0xFB, 0x41,
  0x14, 0xBF, 0x57, 0x81, 0x3F, 0x86, 0x81, 0x8F, 0x36, 0x00, 0xB7, 0x10, 0x0B, 0x58, 0x11, 0xF4,
  0x71, 0x81, 0x4F, 0x14, 0x81, 0x3F, 0x17, 0x18, 0x11, 0xF3, 0x48, 0x34, 0xF2, 0x11, 0x48, 0x31,
  0x12, 0xF4, 0x40, 0x4C, 0x03, 0x20, 0x3C, 0x04, 0x48, 0x44, 0xF4, 0x5F, 0x32, 0x84, 0x3F, 0x54,
  0xF4, 0x48, 0x44, 0xF0, 0x2F, 0x32, 0x84, 0x3F, 0x20, 0xF4, 0x48, 0x44, 0xF0, 0x2F, 0x32, 0x84,
  0x3F, 0x20, 0xF4, 0x40, 0x2C, 0x03, 0x20, 0x3C, 0x02, 0x50, 0x20, 0xF3, 0x40, 0xF3, 0x02, 0x80,
  0xC3, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_headphones() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_headphones_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_headset_mic 18x18, 4-bit Alpha,  RLE, 107 bytes.
static const uint8_t ic_outlined_18_hardware_headset_mic_data[] PROGMEM = {
  0x78, 0x21, 0x33, 0x17, 0x50, 0x30, 0xBC, 0x0B, 0x03, 0x72, 0x89, 0x07, 0xFD, 0x74, 0x47, 0xDF,
  0x77, 0x81, 0x6F, 0x96, 0x81, 0x9F, 0x65, 0x81, 0x1E, 0xB7, 0x18, 0x1B, 0xE1, 0x48, 0x16, 0xF2,
  0x71, 0x81, 0x2F, 0x64, 0x0A, 0x0D, 0x73, 0x0D, 0x0A, 0x40, 0x0B, 0x73, 0x00, 0xB4, 0x00, 0xB7,
  0x30, 0x0B, 0x40, 0xBB, 0x0B, 0x40, 0xBB, 0x0B, 0x48, 0x3B, 0xD7, 0xDB, 0x48, 0x3B, 0xD7, 0xDB,
  0x48, 0x3B, 0xB0, 0xBB, 0x48, 0x3B, 0xB0, 0xBB, 0x48, 0x3B, 0xB0, 0xBB, 0x48, 0x3B, 0xB0, 0xBB,
  0x48, 0x38, 0xF8, 0xDB, 0x48, 0x3B, 0xD7, 0xDB, 0x40, 0x10, 0xBA, 0x0B, 0x40, 0xBB, 0x0B, 0x74,
  0x80, 0x13, 0x0C, 0x09, 0x74, 0xD0, 0xE0, 0x27, 0x48, 0x01, 0x34,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_headset_mic() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_headset_mic_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_headset_off 18x18, 4-bit Alpha,  RLE, 114 bytes.
static const uint8_t ic_outlined_18_hardware_headset_off_data[] PROGMEM = {
  0x77, 0x75, 0x00, 0x27, 0x20, 0x07, 0x28, 0x12, 0xAE, 0xA8, 0x1E, 0xA2, 0x68, 0x93, 0x6F, 0x70,
  0x8D, 0x63, 0x36, 0xDE, 0x46, 0x81, 0x6F, 0x77, 0x81, 0x9E, 0x26, 0x81, 0xBF, 0x77, 0x0C, 0x0B,
  0x58, 0x31, 0xFA, 0xF7, 0x68, 0x15, 0xF1, 0x48, 0x43, 0xF1, 0x6F, 0x75, 0x81, 0x1F, 0x34, 0x04,
  0x92, 0x81, 0x6F, 0x75, 0x90, 0x44, 0x04, 0xC8, 0x39, 0xF7, 0x09, 0xB0, 0x44, 0x89, 0x44, 0xF6,
  0x7F, 0x36, 0xF7, 0x05, 0x6F, 0x44, 0x89, 0x04, 0xF0, 0x2F, 0x30, 0x6F, 0x72, 0x90, 0x44, 0x84,
  0x4F, 0x02, 0xF3, 0x28, 0x46, 0xF7, 0x09, 0x44, 0x02, 0xC0, 0x32, 0x03, 0xA8, 0x17, 0x01, 0x58,
  0x33, 0x55, 0x51, 0x28, 0x31, 0x57, 0xF7, 0x75, 0x80, 0x0B, 0x81, 0xEF, 0x77, 0x48, 0x02, 0x90,
  0x77, 0x76,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_headset_off() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_headset_off_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_headset 18x18, 4-bit Alpha,  RLE, 99 bytes.
static const uint8_t ic_outlined_18_hardware_headset_data[] PROGMEM = {
  0x78, 0x21, 0x33, 0x17, 0x50, 0x30, 0xBC, 0x0B, 0x03, 0x72, 0x89, 0x07, 0xFD, 0x74, 0x47, 0xDF,
  0x77, 0x81, 0x6F, 0x96, 0x81, 0x9F, 0x65, 0x81, 0x1E, 0xB7, 0x18, 0x1B, 0xE1, 0x48, 0x16, 0xF2,
  0x71, 0x81, 0x2F, 0x64, 0x0A, 0x0D, 0x73, 0x0D, 0x0A, 0x40, 0x0B, 0x73, 0x00, 0xB4, 0x00, 0xB7,
  0x30, 0x0B, 0x40, 0xBB, 0x0B, 0x40, 0xBB, 0x0B, 0x48, 0x3B, 0xD7, 0xDB, 0x48, 0x3B, 0xD7, 0xDB,
  0x48, 0x3B, 0xB0, 0xBB, 0x48, 0x3B, 0xB0, 0xBB, 0x48, 0x3B, 0xB0, 0xBB, 0x48, 0x3B, 0xB0, 0xBB,
  0x48, 0x38, 0xF8, 0xDB, 0x48, 0x3B, 0xD8, 0xF8, 0x40, 0x10, 0xBA, 0x0B, 0x40, 0xBA, 0x0B, 0x01,
  0x80, 0xE4, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_headset() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_headset_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_home_max 18x18, 4-bit Alpha,  RLE, 66 bytes.
static const uint8_t ic_outlined_18_hardware_home_max_data[] PROGMEM = {
  0x80, 0xE4, 0x00, 0x28, 0x09, 0x05, 0x02, 0x30, 0x5F, 0xF0, 0x52, 0x0E, 0x09, 0x75, 0x84, 0x9E,
  0x01, 0xF4, 0x75, 0x84, 0x4F, 0x11, 0xF3, 0x75, 0x84, 0x3F, 0x11, 0xF3, 0x75, 0x84, 0x3F, 0x11,
  0xF3, 0x75, 0x84, 0x3F, 0x11, 0xF3, 0x75, 0x84, 0x3F, 0x10, 0xE8, 0x75, 0x08, 0x0E, 0x20, 0x69,
  0x80, 0x90, 0xD9, 0x06, 0x38, 0x23, 0x77, 0xCE, 0x82, 0xC7, 0x73, 0x70, 0x38, 0x02, 0x50, 0x38,
  0x0E, 0x70,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_home_max() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_home_max_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_home_mini 18x18, 4-bit Alpha,  RLE, 74 bytes.
static const uint8_t ic_outlined_18_hardware_home_mini_data[] PROGMEM = {
  0x80, 0xF0, 0x08, 0x41, 0x45, 0x54, 0x17, 0x30, 0x40, 0xCE, 0x0C, 0x05, 0x78, 0x39, 0xFA, 0x41,
  0x28, 0x31, 0x4A, 0xF8, 0x58, 0x16, 0xF5, 0x71, 0x81, 0x5F, 0x64, 0x0D, 0x09, 0x73, 0x08, 0x0D,
  0x38, 0x12, 0xF4, 0x73, 0x81, 0x3F, 0x22, 0x02, 0xFF, 0x02, 0x30, 0xE0, 0xB8, 0x06, 0x50, 0xA9,
  0x48, 0x19, 0xE1, 0x72, 0x0D, 0x09, 0x48, 0x21, 0xDD, 0x46, 0x82, 0x4D, 0xD1, 0x50, 0x10, 0xBF,
  0x90, 0xB0, 0x17, 0x10, 0x28, 0x02, 0x50, 0x28, 0x0E, 0x70,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_home_mini() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_home_mini_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_alt 18x18, 4-bit Alpha,  RLE, 100 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_alt_data[] PROGMEM = {
  0x80, 0xC1, 0x00, 0x18, 0x09, 0x23, 0x01, 0x20, 0xDF, 0xF8, 0x3D, 0x01, 0xF3, 0x75, 0x89, 0x13,
  0xF1, 0x1F, 0x30, 0x11, 0x01, 0x28, 0x9A, 0x11, 0x01, 0x10, 0x3F, 0x11, 0xF3, 0x0B, 0x90, 0xF5,
  0x5F, 0x09, 0xB0, 0x3F, 0x11, 0xF3, 0x02, 0x20, 0x31, 0x13, 0x02, 0x20, 0x3F, 0x11, 0xF3, 0x05,
  0x40, 0x72, 0x27, 0x04, 0x50, 0x3F, 0x11, 0xF3, 0x09, 0x80, 0xD4, 0x4D, 0x08, 0x90, 0x3F, 0x11,
  0xF3, 0x75, 0x84, 0x3F, 0x11, 0xF3, 0x38, 0x48, 0xBB, 0xBB, 0x83, 0x84, 0x3F, 0x11, 0xF3, 0x38,
  0x02, 0x13, 0x84, 0x3F, 0x11, 0xF3, 0x75, 0x83, 0x3F, 0x10, 0xDF, 0xF0, 0xD2, 0x01, 0x80, 0x92,
  0x30, 0x18, 0x0C, 0x10,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_alt() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_alt_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_arrow_down 18x18, 4-bit Alpha,  RLE, 33 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_arrow_down_data[] PROGMEM = {
  0x80, 0x9D, 0x50, 0x04, 0x60, 0x47, 0x28, 0x13, 0xF9, 0x48, 0x19, 0xF3, 0x72, 0x81, 0x7F, 0x92,
  0x81, 0x9F, 0x77, 0x48, 0x47, 0xF9, 0x9F, 0x77, 0x60, 0x7A, 0x07, 0x77, 0x10, 0x07, 0x80, 0x9E,
  0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_arrow_down() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_arrow_down_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_arrow_left 18x18, 4-bit Alpha,  RLE, 40 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_arrow_left_data[] PROGMEM = {
  0x80, 0x99, 0x60, 0x03, 0x77, 0x28, 0x17, 0xF4, 0x77, 0x81, 0x7F, 0x97, 0x78, 0x17, 0xF9, 0x77,
  0x81, 0x7F, 0x97, 0x71, 0x81, 0x7F, 0x97, 0x72, 0x81, 0x7F, 0x97, 0x72, 0x81, 0x7F, 0x97, 0x72,
  0x81, 0x7F, 0x47, 0x72, 0x03, 0x80, 0x99, 0x30,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_arrow_left() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_arrow_left_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_arrow_right 18x18, 4-bit Alpha,  RLE, 40 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_arrow_right_data[] PROGMEM = {
  0x80, 0x99, 0x30, 0x03, 0x77, 0x28, 0x14, 0xF7, 0x77, 0x28, 0x19, 0xF7, 0x77, 0x28, 0x19, 0xF7,
  0x77, 0x28, 0x19, 0xF7, 0x77, 0x18, 0x19, 0xF7, 0x77, 0x81, 0x9F, 0x77, 0x78, 0x19, 0xF7, 0x77,
  0x81, 0x4F, 0x77, 0x72, 0x03, 0x80, 0x99, 0x60,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_arrow_right() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_arrow_right_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_arrow_up 18x18, 4-bit Alpha,  RLE, 33 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_arrow_up_data[] PROGMEM = {
  0x80, 0x9E, 0x00, 0x00, 0x77, 0x71, 0x07, 0xA0, 0x77, 0x68, 0x47, 0xF9, 0x9F, 0x77, 0x48, 0x17,
  0xF9, 0x28, 0x19, 0xF7, 0x72, 0x81, 0x3F, 0x94, 0x81, 0x9F, 0x37, 0x20, 0x46, 0x04, 0x80, 0x9D,
  0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_arrow_up() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_arrow_up_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_backspace 18x18, 4-bit Alpha,  RLE, 46 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_backspace_data[] PROGMEM = {
  0x80, 0x99, 0x20, 0x03, 0x77, 0x28, 0x14, 0xF8, 0x77, 0x82, 0x4F, 0xC1, 0x76, 0x82, 0x4F, 0xC1,
  0x76, 0x04, 0xA0, 0xC8, 0x05, 0xB0, 0x84, 0x04, 0xA0, 0xC8, 0x05, 0xB0, 0x85, 0x82, 0x4F, 0xC1,
  0x77, 0x18, 0x24, 0xFC, 0x17, 0x71, 0x81, 0x4F, 0x87, 0x72, 0x03, 0x80, 0x99, 0x70,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_backspace() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_backspace_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_capslock 18x18, 4-bit Alpha,  RLE, 44 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_capslock_data[] PROGMEM = {
  0x80, 0x99, 0x40, 0x00, 0x57, 0x71, 0x05, 0xA0, 0x57, 0x68, 0x45, 0xFB, 0xBF, 0x57, 0x48, 0x15,
  0xFB, 0x28, 0x1B, 0xF5, 0x72, 0x81, 0x3F, 0xB4, 0x81, 0xBF, 0x37, 0x20, 0x76, 0x07, 0x80, 0xD1,
  0x00, 0x7F, 0x90, 0x77, 0x10, 0x38, 0x04, 0x70, 0x38, 0x09, 0x90, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_capslock() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_capslock_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_command_key 18x18, 4-bit Alpha,  RLE, 108 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_command_key_data[] PROGMEM = {
  0x80, 0xC4, 0x00, 0x20, 0x36, 0x03, 0x02, 0x70, 0x8A, 0x0C, 0x01, 0x20, 0x10, 0xCA, 0x08, 0x58,
  0x42, 0xF6, 0x2D, 0x72, 0x84, 0x7D, 0x26, 0xF2, 0x48, 0x43, 0xF2, 0x0A, 0x92, 0x84, 0x9A, 0x02,
  0xF3, 0x58, 0x92, 0xCD, 0xBE, 0xEB, 0xBE, 0xEB, 0xDC, 0x68, 0x92, 0x17, 0x9D, 0xD9, 0x9D, 0xD9,
  0x71, 0x72, 0x00, 0xA2, 0x00, 0xA7, 0x50, 0x0A, 0x20, 0x0A, 0x72, 0x89, 0x21, 0x79, 0xDD, 0x99,
  0xDD, 0x97, 0x16, 0x89, 0x2C, 0xDB, 0xEE, 0xBB, 0xEE, 0xBD, 0xC5, 0x84, 0x3F, 0x20, 0xA9, 0x28,
  0x49, 0xA0, 0x2F, 0x34, 0x84, 0x2F, 0x62, 0xD7, 0x28, 0x47, 0xD2, 0x6F, 0x25, 0x08, 0xA0, 0xC0,
  0x12, 0x01, 0x0C, 0xA0, 0x87, 0x02, 0x03, 0x60, 0x30, 0x28, 0x0C, 0x40,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_command_key() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_command_key_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_control_key 18x18, 4-bit Alpha,  RLE, 37 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_control_key_data[] PROGMEM = {
  0x80, 0x99, 0x40, 0x00, 0x17, 0x71, 0x82, 0x1D, 0xD1, 0x76, 0x84, 0x1D, 0xCC, 0xD1, 0x74, 0x86,
  0x1D, 0xC1, 0x1C, 0xD1, 0x72, 0x82, 0x1D, 0xC1, 0x28, 0x21, 0xCD, 0x17, 0x18, 0x11, 0xA1, 0x48,
  0x11, 0xA1, 0x80, 0xAA, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_control_key() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_control_key_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_double_arrow_down 18x18, 4-bit Alpha,  RLE, 64 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_double_arrow_down_data[] PROGMEM = {
  0x80, 0xE7, 0x00, 0x26, 0x02, 0x72, 0x81, 0x3F, 0x54, 0x81, 0x5F, 0x37, 0x28, 0x18, 0xF5, 0x28,
  0x15, 0xF8, 0x74, 0x84, 0x8F, 0x55, 0xF8, 0x76, 0x08, 0xA0, 0x87, 0x71, 0x00, 0x87, 0x58, 0x12,
  0xC2, 0x48, 0x12, 0xC2, 0x71, 0x82, 0x1C, 0xD2, 0x28, 0x22, 0xDC, 0x17, 0x28, 0x61, 0xCD, 0x22,
  0xDC, 0x17, 0x48, 0x41, 0xCD, 0xDC, 0x17, 0x68, 0x21, 0xCC, 0x17, 0x71, 0x00, 0x18, 0x0F, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_double_arrow_down() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_double_arrow_down_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_double_arrow_left 18x18, 4-bit Alpha,  RLE, 69 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_double_arrow_left_data[] PROGMEM = {
  0x80, 0x99, 0x30, 0x01, 0x02, 0x40, 0x37, 0x38, 0x11, 0xCC, 0x38, 0x18, 0xF2, 0x71, 0x82, 0x1C,
  0xD2, 0x28, 0x18, 0xF5, 0x71, 0x82, 0x1C, 0xD2, 0x28, 0x18, 0xF5, 0x71, 0x82, 0x1C, 0xD2, 0x28,
  0x18, 0xF5, 0x72, 0x82, 0x1C, 0xD2, 0x28, 0x18, 0xF5, 0x73, 0x82, 0x1C, 0xD2, 0x28, 0x18, 0xF5,
  0x73, 0x82, 0x1C, 0xD2, 0x28, 0x18, 0xF5, 0x73, 0x81, 0x1C, 0xC3, 0x81, 0x8F, 0x27, 0x30, 0x10,
  0x24, 0x03, 0x80, 0x99, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_double_arrow_left() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_double_arrow_left_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_double_arrow_right 18x18, 4-bit Alpha,  RLE, 69 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_double_arrow_right_data[] PROGMEM = {
  0x80, 0x99, 0x00, 0x03, 0x40, 0x20, 0x17, 0x38, 0x12, 0xF8, 0x38, 0x1C, 0xC1, 0x73, 0x81, 0x5F,
  0x82, 0x82, 0x2D, 0xC1, 0x73, 0x81, 0x5F, 0x82, 0x82, 0x2D, 0xC1, 0x73, 0x81, 0x5F, 0x82, 0x82,
  0x2D, 0xC1, 0x72, 0x81, 0x5F, 0x82, 0x82, 0x2D, 0xC1, 0x71, 0x81, 0x5F, 0x82, 0x82, 0x2D, 0xC1,
  0x71, 0x81, 0x5F, 0x82, 0x82, 0x2D, 0xC1, 0x71, 0x81, 0x2F, 0x83, 0x81, 0xCC, 0x17, 0x30, 0x34,
  0x02, 0x01, 0x80, 0x99, 0x30,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_double_arrow_right() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_double_arrow_right_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_double_arrow_up 18x18, 4-bit Alpha,  RLE, 64 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_double_arrow_up_data[] PROGMEM = {
  0x80, 0xF2, 0x00, 0x01, 0x77, 0x18, 0x21, 0xCC, 0x17, 0x68, 0x41, 0xCD, 0xDC, 0x17, 0x48, 0x61,
  0xCD, 0x22, 0xDC, 0x17, 0x28, 0x21, 0xCD, 0x22, 0x82, 0x2D, 0xC1, 0x71, 0x81, 0x2C, 0x24, 0x81,
  0x2C, 0x27, 0x50, 0x08, 0x77, 0x10, 0x8A, 0x08, 0x76, 0x84, 0x8F, 0x55, 0xF8, 0x74, 0x81, 0x8F,
  0x52, 0x81, 0x5F, 0x87, 0x28, 0x13, 0xF5, 0x48, 0x15, 0xF3, 0x72, 0x02, 0x60, 0x28, 0x0E, 0x70,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_double_arrow_up() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_double_arrow_up_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_hide 18x18, 4-bit Alpha,  RLE, 100 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_hide_data[] PROGMEM = {
  0x80, 0xC2, 0x00, 0x98, 0x09, 0x0B, 0x09, 0x30, 0x69, 0x80, 0x90, 0xB9, 0x06, 0x28, 0x96, 0x7F,
  0x17, 0x17, 0x35, 0x53, 0x71, 0x71, 0xF7, 0x28, 0x96, 0x7F, 0x3F, 0x3F, 0x7B, 0xB7, 0xF3, 0xF3,
  0xF7, 0x28, 0x96, 0x7F, 0x13, 0x13, 0x12, 0x21, 0x31, 0x31, 0xF7, 0x28, 0x96, 0x7F, 0x3F, 0x3F,
  0x7B, 0xB7, 0xF3, 0xF3, 0xF7, 0x28, 0x96, 0x7F, 0x13, 0x13, 0x12, 0x21, 0x31, 0x31, 0xF7, 0x20,
  0x79, 0x3E, 0x39, 0x07, 0x20, 0x79, 0x38, 0x02, 0x73, 0x90, 0x72, 0x06, 0x98, 0x09, 0x0B, 0x90,
  0x63, 0x09, 0x80, 0x90, 0xB0, 0x97, 0x77, 0x58, 0x47, 0xBB, 0xBB, 0x77, 0x60, 0xBA, 0x0B, 0x77,
  0x10, 0x0B, 0x77, 0x75,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_hide() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_hide_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_option_key 18x18, 4-bit Alpha,  RLE, 57 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_option_key_data[] PROGMEM = {
  0x80, 0x98, 0x60, 0x84, 0x27, 0x77, 0x72, 0x28, 0x41, 0x77, 0x77, 0x24, 0x84, 0x4D, 0xDD, 0xEB,
  0x28, 0x42, 0xDD, 0xDD, 0x37, 0x18, 0x13, 0xF5, 0x77, 0x20, 0x90, 0xD7, 0x72, 0x81, 0x1E, 0x77,
  0x72, 0x81, 0x7E, 0x17, 0x72, 0x0D, 0x0A, 0x77, 0x28, 0x14, 0xF3, 0x77, 0x28, 0x4B, 0xED, 0xDD,
  0x47, 0x58, 0x42, 0x77, 0x77, 0x28, 0x09, 0x86, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_option_key() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_option_key_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard 18x18, 4-bit Alpha,  RLE, 85 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_data[] PROGMEM = {
  0x80, 0xE4, 0x00, 0x18, 0x09, 0x03, 0x01, 0x30, 0x3F, 0xF0, 0x32, 0x07, 0x98, 0x09, 0x03, 0x90,
  0x72, 0x89, 0x67, 0xF3, 0xF3, 0xF7, 0xBB, 0x7F, 0x3F, 0x3F, 0x72, 0x89, 0x67, 0xF1, 0x71, 0x73,
  0x55, 0x37, 0x17, 0x1F, 0x72, 0x89, 0x67, 0xF2, 0xB2, 0xB5, 0x88, 0x5B, 0x2B, 0x2F, 0x72, 0x89,
  0x67, 0xF2, 0xB2, 0xB5, 0x88, 0x5B, 0x2B, 0x2F, 0x72, 0x07, 0x93, 0x80, 0x27, 0x39, 0x07, 0x20,
  0x79, 0x3E, 0x39, 0x07, 0x20, 0x79, 0x80, 0x90, 0x39, 0x07, 0x20, 0x3F, 0xF0, 0x33, 0x01, 0x80,
  0x90, 0x30, 0x18, 0x0E, 0x40,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_return 18x18, 4-bit Alpha,  RLE, 54 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_return_data[] PROGMEM = {
  0x80, 0x99, 0x10, 0x00, 0x17, 0x71, 0x81, 0x1D, 0xC7, 0x00, 0x85, 0x82, 0x1D, 0xE2, 0x70, 0x0B,
  0x48, 0x21, 0xDE, 0x37, 0x10, 0x0B, 0x38, 0x21, 0xDF, 0xD8, 0x05, 0xB0, 0xE0, 0xB3, 0x82, 0x1D,
  0xFD, 0x80, 0x6B, 0x08, 0x48, 0x21, 0xDE, 0x37, 0x71, 0x82, 0x1D, 0xE2, 0x77, 0x18, 0x11, 0xDC,
  0x77, 0x20, 0x01, 0x80, 0x99, 0x70,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_return() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_return_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_tab 18x18, 4-bit Alpha,  RLE, 62 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_tab_data[] PROGMEM = {
  0x80, 0x99, 0x50, 0x03, 0x50, 0x70, 0x37, 0x28, 0x11, 0xEB, 0x49, 0x07, 0x73, 0x81, 0x5F, 0xB3,
  0x90, 0x77, 0x48, 0x15, 0xFB, 0x29, 0x81, 0x70, 0x28, 0x06, 0xB8, 0x6E, 0xFB, 0x0F, 0x70, 0x28,
  0x06, 0xB8, 0x4E, 0xFB, 0x0F, 0x77, 0x48, 0x15, 0xFB, 0x29, 0x07, 0x73, 0x81, 0x5F, 0xB3, 0x90,
  0x77, 0x28, 0x11, 0xEB, 0x49, 0x07, 0x73, 0x03, 0x50, 0x70, 0x38, 0x09, 0x85, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_tab() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_tab_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_keyboard_voice 18x18, 4-bit Alpha,  RLE, 80 bytes.
static const uint8_t ic_outlined_18_hardware_keyboard_voice_data[] PROGMEM = {
  0x80, 0xC7, 0x08, 0x22, 0xAA, 0x27, 0x78, 0x2E, 0xBB, 0xE7, 0x68, 0x43, 0xF2, 0x2F, 0x37, 0x58,
  0x43, 0xF1, 0x1F, 0x37, 0x58, 0x43, 0xF1, 0x1F, 0x37, 0x58, 0x43, 0xF1, 0x1F, 0x37, 0x58, 0x43,
  0xF1, 0x1F, 0x37, 0x28, 0x92, 0x2F, 0x22, 0xF5, 0x5F, 0x22, 0xF2, 0x78, 0x2E, 0x60, 0x9A, 0x82,
  0x90, 0x6E, 0x71, 0x89, 0x07, 0xE2, 0x02, 0x20, 0x2E, 0x77, 0x28, 0x6A, 0xE7, 0x44, 0x7E, 0xA7,
  0x40, 0x60, 0xCA, 0x0C, 0x06, 0x77, 0x00, 0xB7, 0x72, 0x00, 0xB7, 0x72, 0x00, 0x57, 0x77, 0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_keyboard_voice() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_keyboard_voice_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_laptop_chromebook 18x18, 4-bit Alpha,  RLE, 69 bytes.
static const uint8_t ic_outlined_18_hardware_laptop_chromebook_data[] PROGMEM = {
  0x80, 0xC1, 0x00, 0x58, 0x09, 0x2B, 0x05, 0x20, 0x79, 0x80, 0x90, 0xB9, 0x07, 0x20, 0x79, 0x75,
  0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20,
  0x79, 0x75, 0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72, 0x07, 0x98, 0x09,
  0x0B, 0x90, 0x72, 0x07, 0xD8, 0x2D, 0xBB, 0xDD, 0x82, 0x70, 0x7B, 0xD8, 0x2B, 0x77, 0xBD, 0x0B,
  0x07, 0xFF, 0xC8, 0x0E, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_laptop_chromebook() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_laptop_chromebook_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_laptop_mac 18x18, 4-bit Alpha,  RLE, 68 bytes.
static const uint8_t ic_outlined_18_hardware_laptop_mac_data[] PROGMEM = {
  0x80, 0xC2, 0x00, 0x98, 0x09, 0x0B, 0x09, 0x30, 0x69, 0x80, 0x90, 0xB9, 0x06, 0x20, 0x79, 0x75,
  0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20,
  0x79, 0x75, 0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72, 0x07, 0x97, 0x59,
  0x07, 0x20, 0x5E, 0x00, 0xEE, 0x83, 0x50, 0x77, 0xDD, 0x00, 0x5D, 0x82, 0xD7, 0x78, 0xF0, 0x0E,
  0xF0, 0x88, 0x0E, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_laptop_mac() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_laptop_mac_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_laptop 18x18, 4-bit Alpha,  RLE, 59 bytes.
static const uint8_t ic_outlined_18_hardware_laptop_data[] PROGMEM = {
  0x80, 0xE3, 0x00, 0x20, 0xDF, 0xD0, 0xD0, 0x22, 0x07, 0x98, 0x09, 0x07, 0x90, 0x72, 0x07, 0x97,
  0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72,
  0x07, 0x97, 0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20, 0x5F, 0xF8,
  0x35, 0x07, 0x7D, 0xFD, 0x81, 0xD7, 0x7F, 0xFC, 0x80, 0xE2, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_laptop() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_laptop_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_laptop_windows 18x18, 4-bit Alpha,  RLE, 63 bytes.
static const uint8_t ic_outlined_18_hardware_laptop_windows_data[] PROGMEM = {
  0x80, 0xC2, 0x00, 0x98, 0x09, 0x0B, 0x09, 0x30, 0x69, 0x80, 0x90, 0xB9, 0x06, 0x20, 0x79, 0x75,
  0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20,
  0x79, 0x75, 0x90, 0x72, 0x07, 0x97, 0x59, 0x07, 0x20, 0x79, 0x75, 0x90, 0x72, 0x06, 0x98, 0x09,
  0x0B, 0x90, 0x63, 0x09, 0xFD, 0x09, 0x20, 0xF7, 0xFD, 0x0F, 0x7F, 0xFC, 0x80, 0xE2, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_laptop_windows() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_laptop_windows_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_memory 18x18, 4-bit Alpha,  RLE, 103 bytes.
static const uint8_t ic_outlined_18_hardware_memory_data[] PROGMEM = {
  0x80, 0xC6, 0x08, 0x42, 0xB2, 0x2B, 0x27, 0x48, 0x63, 0x6F, 0x66, 0xF6, 0x37, 0x10, 0x10, 0xEF,
  0x90, 0xE0, 0x16, 0x81, 0x3F, 0x68, 0x02, 0x38, 0x16, 0xF3, 0x58, 0x94, 0x26, 0xF3, 0x13, 0x33,
  0x31, 0x3F, 0x62, 0x40, 0xBA, 0x00, 0x3C, 0x00, 0x3A, 0x0B, 0x48, 0x94, 0x26, 0xF3, 0x3F, 0x66,
  0xF3, 0x3F, 0x62, 0x48, 0x94, 0x26, 0xF3, 0x3F, 0x66, 0xF3, 0x3F, 0x62, 0x40, 0xBA, 0x00, 0x3C,
  0x00, 0x3A, 0x0B, 0x48, 0x94, 0x26, 0xF3, 0x13, 0x33, 0x31, 0x3F, 0x62, 0x58, 0x13, 0xF6, 0x80,
  0x23, 0x81, 0x6F, 0x36, 0x01, 0x0E, 0xF9, 0x0E, 0x01, 0x71, 0x86, 0x36, 0xF6, 0x6F, 0x63, 0x74,
  0x84, 0x2B, 0x22, 0xB2, 0x80, 0xC6, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_memory() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_memory_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_monitor 18x18, 4-bit Alpha,  RLE, 89 bytes.
static const uint8_t ic_outlined_18_hardware_monitor_data[] PROGMEM = {
  0x80, 0xC2, 0x00, 0x18, 0x09, 0x03, 0x01, 0x30, 0x10, 0xEF, 0xD0, 0xE0, 0x12, 0x81, 0x3F, 0x27,
  0x38, 0x12, 0xF3, 0x28, 0x13, 0xF2, 0x73, 0x81, 0x2F, 0x32, 0x81, 0x3F, 0x27, 0x38, 0x12, 0xF3,
  0x28, 0x13, 0xF2, 0x73, 0x81, 0x2F, 0x32, 0x81, 0x3F, 0x27, 0x38, 0x12, 0xF3, 0x28, 0x13, 0xF2,
  0x73, 0x81, 0x2F, 0x32, 0x81, 0x3F, 0x27, 0x38, 0x12, 0xF3, 0x28, 0x13, 0xF2, 0x73, 0x81, 0x2F,
  0x32, 0x01, 0x98, 0x09, 0x0D, 0x90, 0x13, 0x83, 0x47, 0x78, 0xEC, 0x83, 0xE8, 0x77, 0x47, 0x08,
  0xE0, 0x87, 0x30, 0x28, 0x02, 0x30, 0x28, 0x0C, 0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_monitor() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_monitor_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_mouse 18x18, 4-bit Alpha,  RLE, 103 bytes.
static const uint8_t ic_outlined_18_hardware_mouse_data[] PROGMEM = {
  0x71, 0x00, 0x27, 0x68, 0x11, 0x9E, 0xA8, 0x1E, 0x91, 0x72, 0x89, 0x03, 0xEE, 0x9D, 0xD9, 0xEE,
  0x37, 0x89, 0x21, 0xED, 0x20, 0xBB, 0x02, 0xDE, 0x16, 0x81, 0x7F, 0x32, 0x00, 0xB2, 0x81, 0x3F,
  0x76, 0x0C, 0x0B, 0x30, 0x0B, 0x30, 0xB0, 0xC6, 0x98, 0x90, 0xA3, 0x33, 0xCC, 0x33, 0x3A, 0x96,
  0xFD, 0x69, 0x09, 0x80, 0x43, 0x09, 0x96, 0x90, 0x77, 0x10, 0x79, 0x69, 0x07, 0x71, 0x07, 0x96,
  0x90, 0x87, 0x10, 0x89, 0x60, 0xD0, 0xB7, 0x10, 0xB0, 0xD6, 0x81, 0x8F, 0x36, 0x81, 0x3F, 0x86,
  0x82, 0x1E, 0xD2, 0x48, 0x22, 0xDE, 0x17, 0x89, 0x03, 0xEE, 0x85, 0x58, 0xEE, 0x37, 0x20, 0x20,
  0xAC, 0x0A, 0x02, 0x76, 0x00, 0x37, 0x10,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_mouse() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_mouse_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_phone_android 18x18, 4-bit Alpha,  RLE, 99 bytes.
static const uint8_t ic_outlined_18_hardware_phone_android_data[] PROGMEM = {
  0x50, 0x28, 0x02, 0x30, 0x27, 0x20, 0x9F, 0x90, 0x97, 0x02, 0xFB, 0x02, 0x68, 0x13, 0xF3, 0x68,
  0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13,
  0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3,
  0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68,
  0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF3, 0x68, 0x13, 0xF9, 0x80, 0x27, 0x81, 0x9F, 0x36,
  0x03, 0xFB, 0x03, 0x60, 0x2B, 0x82, 0x93, 0x39, 0xB0, 0x27, 0x09, 0xF9, 0x09, 0x72, 0x02, 0x80,
  0x23, 0x02, 0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_phone_android() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_phone_android_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_phone_iphone 18x18, 4-bit Alpha,  RLE, 90 bytes.
static const uint8_t ic_outlined_18_hardware_phone_iphone_data[] PROGMEM = {
  0x58, 0x03, 0x37, 0x30, 0xCF, 0x0E, 0x02, 0x70, 0x3F, 0xA0, 0x77, 0x81, 0x3F, 0x36, 0x90, 0x77,
  0x81, 0x3F, 0x36, 0x90, 0x77, 0x81, 0x3F, 0x36, 0x90, 0x77, 0x81, 0x3F, 0x36, 0x90, 0x77, 0x81,
  0x3F, 0x36, 0x90, 0x77, 0x81, 0x3F, 0x36, 0x90, 0x77, 0x81, 0x3F, 0x36, 0x90, 0x77, 0x81, 0x3F,
  0x36, 0x90, 0x77, 0x81, 0x3F, 0x36, 0x90, 0x77, 0x81, 0x3F, 0x36, 0x90, 0x77, 0x81, 0x3F, 0x98,
  0x02, 0x79, 0x07, 0x70, 0x3B, 0x81, 0xD4, 0xAB, 0x07, 0x70, 0x3B, 0x81, 0x80, 0x4B, 0x07, 0x71,
  0x0C, 0xA8, 0x1E, 0x8D, 0xA0, 0xE0, 0x27, 0x28, 0x03, 0x36,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_phone_iphone() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_phone_iphone_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_phonelink_off 18x18, 4-bit Alpha,  RLE, 106 bytes.
static const uint8_t ic_outlined_18_hardware_phonelink_off_data[] PROGMEM = {
  0x77, 0x50, 0x90, 0x17, 0x71, 0x82, 0x3E, 0xC1, 0x77, 0x18, 0x45, 0xFC, 0x11, 0xDF, 0xA0, 0x72,
  0x84, 0x7F, 0xEC, 0x11, 0x80, 0x57, 0x03, 0x28, 0x47, 0xF3, 0xEC, 0x17, 0x58, 0x57, 0xF0, 0x3E,
  0xC1, 0x40, 0xCC, 0x81, 0xC0, 0x79, 0x28, 0x23, 0xEC, 0x13, 0x98, 0x5B, 0x77, 0xBF, 0x07, 0x93,
  0x82, 0x3E, 0xC1, 0x29, 0x07, 0x28, 0x27, 0xF0, 0x79, 0x48, 0x53, 0xEC, 0x10, 0xD7, 0x28, 0x27,
  0xF0, 0x79, 0x58, 0x43, 0xEC, 0x11, 0x52, 0x82, 0x7F, 0x07, 0x96, 0x82, 0x3E, 0xC1, 0x38, 0x27,
  0xF3, 0x99, 0x80, 0x33, 0x85, 0x7F, 0xC1, 0x02, 0x9F, 0xF8, 0x2C, 0x11, 0xDF, 0xF9, 0x82, 0xC1,
  0x1B, 0x76, 0x81, 0x3E, 0xC7, 0x72, 0x03, 0x05, 0x77, 0x60,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_phonelink_off() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_phonelink_off_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_phonelink 18x18, 4-bit Alpha,  RLE, 72 bytes.
static const uint8_t ic_outlined_18_hardware_phonelink_data[] PROGMEM = {
  0x80, 0xE3, 0x00, 0x20, 0xDF, 0xE0, 0x72, 0x07, 0x98, 0x09, 0x17, 0x03, 0x20, 0x79, 0x77, 0x20,
  0x79, 0x72, 0x0C, 0xC8, 0x1C, 0x07, 0x97, 0x29, 0x85, 0xB7, 0x7B, 0xF0, 0x79, 0x72, 0x90, 0x72,
  0x82, 0x7F, 0x07, 0x97, 0x29, 0x07, 0x28, 0x27, 0xF0, 0x79, 0x72, 0x90, 0x72, 0x82, 0x7F, 0x07,
  0x97, 0x29, 0x07, 0x28, 0x27, 0xF3, 0x99, 0x80, 0x33, 0x85, 0x10, 0xF9, 0x33, 0x9F, 0xC0, 0x71,
  0xFF, 0xA8, 0x17, 0x0C, 0xC0, 0xC8, 0x0E, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_phonelink() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_phonelink_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_point_of_sale 18x18, 4-bit Alpha,  RLE, 83 bytes.
static const uint8_t ic_outlined_18_hardware_point_of_sale_data[] PROGMEM = {
  0x80, 0xC5, 0x08, 0x04, 0x37, 0x20, 0x60, 0xB8, 0x02, 0x90, 0xB0, 0x67, 0x10, 0x60, 0xA8, 0x02,
  0x70, 0xA0, 0x67, 0x28, 0x04, 0x57, 0x30, 0x68, 0x02, 0xB0, 0x67, 0x28, 0x90, 0x1F, 0x5B, 0x88,
  0xB5, 0xF1, 0x71, 0x89, 0x08, 0xFE, 0xFE, 0xEF, 0xEF, 0x87, 0x18, 0x90, 0xEF, 0x4B, 0x77, 0xB4,
  0xFE, 0x70, 0x6A, 0x84, 0xCE, 0xDD, 0xEC, 0xA0, 0x66, 0x0C, 0xA8, 0x46, 0xC9, 0x9C, 0x6A, 0x0C,
  0x50, 0x18, 0x09, 0x09, 0x01, 0x40, 0x28, 0x09, 0x07, 0x02, 0x40, 0x3F, 0xD0, 0x35, 0x80, 0x90,
  0x38, 0x0C, 0x30,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_point_of_sale() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_point_of_sale_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_power_input 18x18, 4-bit Alpha,  RLE, 45 bytes.
static const uint8_t ic_outlined_18_hardware_power_input_data[] PROGMEM = {
  0x80, 0x9D, 0x10, 0x01, 0x80, 0x91, 0x30, 0x23, 0x07, 0xFE, 0x0B, 0x30, 0x18, 0x09, 0x13, 0x02,
  0x38, 0x95, 0x13, 0x33, 0x11, 0x33, 0x31, 0x03, 0x33, 0x23, 0x07, 0xB0, 0x03, 0xB0, 0x71, 0xB0,
  0xB3, 0x89, 0x51, 0x33, 0x31, 0x13, 0x33, 0x10, 0x33, 0x32, 0x80, 0x9D, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_power_input() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_power_input_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_router 18x18, 4-bit Alpha,  RLE, 83 bytes.
static const uint8_t ic_outlined_18_hardware_router_data[] PROGMEM = {
  0x80, 0xD1, 0x08, 0x41, 0x7A, 0xA7, 0x17, 0x48, 0x65, 0xD7, 0x33, 0x7D, 0x57, 0x38, 0x62, 0x19,
  0xDD, 0x92, 0x27, 0x40, 0x10, 0x52, 0x05, 0x01, 0x77, 0x00, 0x27, 0x72, 0x00, 0xB7, 0x72, 0x00,
  0xB7, 0x10, 0x28, 0x03, 0x38, 0x2C, 0xC3, 0x25, 0x07, 0xFD, 0x07, 0x40, 0xB0, 0xC8, 0x06, 0x30,
  0xC0, 0xB4, 0x89, 0x0B, 0xB7, 0xF0, 0xD9, 0x3F, 0x32, 0x00, 0xB4, 0x89, 0x0B, 0xB3, 0x70, 0x64,
  0x17, 0x12, 0x00, 0xB4, 0x0A, 0x0E, 0x80, 0x6B, 0x0E, 0x0A, 0x40, 0x20, 0xA8, 0x06, 0xB0, 0xA0,
  0x28, 0x0C, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_router() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_router_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_scanner 18x18, 4-bit Alpha,  RLE, 73 bytes.
static const uint8_t ic_outlined_18_hardware_scanner_data[] PROGMEM = {
  0x80, 0xE5, 0x00, 0x17, 0x72, 0x82, 0x2F, 0xB6, 0x77, 0x81, 0x17, 0xDA, 0x0A, 0x04, 0x77, 0x85,
  0x38, 0xEF, 0xE8, 0x37, 0x78, 0x54, 0xAE, 0xFC, 0x71, 0x77, 0x05, 0x0B, 0xA0, 0x54, 0x04, 0x0E,
  0xFC, 0x0B, 0x40, 0xB0, 0xD8, 0x06, 0x70, 0xD0, 0xB4, 0x84, 0xBB, 0x5B, 0x05, 0x80, 0x1B, 0x81,
  0x5B, 0xB4, 0x84, 0xBB, 0x5B, 0x05, 0x80, 0x1B, 0x81, 0x5B, 0xB4, 0x0B, 0x0D, 0x80, 0x67, 0x0D,
  0x0B, 0x40, 0x40, 0xEF, 0xB0, 0xE0, 0x48, 0x0E, 0x40,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_scanner() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_scanner_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_security 18x18, 4-bit Alpha,  RLE, 88 bytes.
static const uint8_t ic_outlined_18_hardware_security_data[] PROGMEM = {
  0x71, 0x00, 0x17, 0x78, 0x42, 0x9E, 0xE9, 0x27, 0x30, 0x30, 0xAA, 0x09, 0xB0, 0xA0, 0x36, 0x84,
  0x4C, 0xFE, 0x71, 0x1D, 0x0C, 0x04, 0x48, 0x1B, 0xE6, 0x4E, 0x0B, 0x40, 0x0B, 0x5E, 0x0B, 0x40,
  0x0B, 0x5E, 0x0B, 0x40, 0x0B, 0x5E, 0x0B, 0x40, 0x0B, 0x5E, 0x0B, 0x40, 0x9E, 0x50, 0xD0, 0x94,
  0x06, 0xE4, 0x81, 0x2F, 0x64, 0x02, 0xE4, 0x81, 0x7F, 0x25, 0x0A, 0xD3, 0x81, 0x1E, 0xA6, 0x02,
  0xD3, 0x81, 0xBF, 0x27, 0x05, 0xC1, 0x82, 0x1B, 0xF5, 0x72, 0x05, 0xB8, 0x28, 0xEF, 0x57, 0x40,
  0x20, 0xAA, 0x0A, 0x02, 0x77, 0x00, 0x17, 0x10,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_security() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_security_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_sim_card 18x18, 4-bit Alpha,  RLE, 99 bytes.
static const uint8_t ic_outlined_18_hardware_sim_card_data[] PROGMEM = {
  0x77, 0x74, 0x05, 0x80, 0x27, 0x02, 0x72, 0x07, 0xF0, 0xD7, 0x18, 0x17, 0xF9, 0x50, 0x79, 0x78,
  0x17, 0xF9, 0x60, 0x79, 0x68, 0x17, 0xF9, 0x70, 0x79, 0x69, 0x0A, 0x71, 0x07, 0x96, 0x90, 0x77,
  0x10, 0x79, 0x69, 0x89, 0x07, 0x88, 0x08, 0x80, 0x88, 0x79, 0x69, 0x89, 0x07, 0xBB, 0x08, 0x80,
  0xBB, 0x79, 0x69, 0x81, 0x7B, 0xB4, 0x81, 0xBB, 0x79, 0x69, 0x89, 0x07, 0x22, 0x08, 0x80, 0x22,
  0x79, 0x69, 0x89, 0x07, 0x22, 0x0B, 0xB0, 0x22, 0x79, 0x69, 0x89, 0x07, 0xBB, 0x0B, 0xB0, 0xBB,
  0x79, 0x69, 0x89, 0x07, 0x22, 0x02, 0x20, 0x22, 0x79, 0x60, 0xDF, 0xB0, 0xD6, 0x02, 0x80, 0x67,
  0x02, 0x77, 0x70,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_sim_card() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_sim_card_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_smart_display 18x18, 4-bit Alpha,  RLE, 91 bytes.
static const uint8_t ic_outlined_18_hardware_smart_display_data[] PROGMEM = {
  0x80, 0xE4, 0x00, 0x38, 0x09, 0x05, 0x03, 0x30, 0x1F, 0xF0, 0x12, 0x81, 0x3F, 0x27, 0x38, 0x12,
  0xF3, 0x28, 0x13, 0xF2, 0x30, 0xA0, 0x55, 0x81, 0x2F, 0x32, 0x81, 0x3F, 0x23, 0x82, 0xCF, 0xA1,
  0x38, 0x12, 0xF3, 0x28, 0x13, 0xF2, 0x30, 0xCA, 0x0E, 0x06, 0x28, 0x12, 0xF3, 0x28, 0x13, 0xF2,
  0x30, 0xCA, 0x0E, 0x06, 0x28, 0x12, 0xF3, 0x28, 0x13, 0xF2, 0x38, 0x2C, 0xFA, 0x13, 0x81, 0x2F,
  0x32, 0x81, 0x3F, 0x23, 0x0A, 0x05, 0x58, 0x12, 0xF3, 0x28, 0x13, 0xF2, 0x73, 0x81, 0x2F, 0x32,
  0x01, 0xFF, 0x01, 0x30, 0x38, 0x09, 0x05, 0x03, 0x80, 0xE4, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_smart_display() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_smart_display_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_smartphone 18x18, 4-bit Alpha,  RLE, 100 bytes.
static const uint8_t ic_outlined_18_hardware_smartphone_data[] PROGMEM = {
  0x58, 0x04, 0x37, 0x10, 0x10, 0xEF, 0x90, 0xE0, 0x16, 0x03, 0xFB, 0x03, 0x68, 0x13, 0xFC, 0x80,
  0x2B, 0x81, 0xCF, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36,
  0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81,
  0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F,
  0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36,
  0x81, 0x3F, 0xC8, 0x02, 0xB8, 0x1C, 0xF3, 0x60, 0x3F, 0xB0, 0x36, 0x01, 0x0E, 0xF9, 0x0E, 0x01,
  0x71, 0x80, 0x43, 0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_smartphone() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_smartphone_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_smart_screen 18x18, 4-bit Alpha,  RLE, 85 bytes.
static const uint8_t ic_outlined_18_hardware_smart_screen_data[] PROGMEM = {
  0x80, 0xE3, 0x00, 0x28, 0x09, 0x25, 0x02, 0x20, 0xEF, 0xF8, 0x5E, 0x01, 0xF3, 0xD7, 0x71, 0x89,
  0x07, 0xD3, 0xF1, 0x1F, 0x3D, 0x77, 0x18, 0x90, 0x7D, 0x3F, 0x11, 0xF3, 0xD7, 0x71, 0x8D, 0x47,
  0xD3, 0xF1, 0x1F, 0x3D, 0x74, 0x24, 0x14, 0x15, 0x17, 0xD3, 0xF1, 0x1F, 0x3D, 0x74, 0x24, 0x14,
  0x15, 0x17, 0xD3, 0xF1, 0x1F, 0x3D, 0x77, 0x18, 0x90, 0x7D, 0x3F, 0x11, 0xF3, 0xD7, 0x71, 0x89,
  0x07, 0xD3, 0xF1, 0x1F, 0x3D, 0x77, 0x18, 0x57, 0xD3, 0xF1, 0x0E, 0xFF, 0x0E, 0x20, 0x28, 0x09,
  0x25, 0x02, 0x80, 0xE3, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_smart_screen() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_smart_screen_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_smart_toy 18x18, 4-bit Alpha,  RLE, 96 bytes.
static const uint8_t ic_outlined_18_hardware_smart_toy_data[] PROGMEM = {
  0x80, 0xD0, 0x00, 0x02, 0x77, 0x10, 0x6A, 0x06, 0x74, 0x82, 0x57, 0x7D, 0xA8, 0x2D, 0x77, 0x57,
  0x04, 0x98, 0x04, 0xD9, 0x04, 0x60, 0x60, 0xE7, 0x10, 0xE0, 0x65, 0x84, 0x5D, 0xE0, 0x31, 0x28,
  0x42, 0x20, 0xED, 0x53, 0x01, 0xA8, 0x2E, 0x0F, 0x82, 0x82, 0xBC, 0x0E, 0xA0, 0x12, 0x01, 0xA8,
  0x2E, 0x04, 0x12, 0x82, 0x33, 0x0E, 0xA0, 0x13, 0x89, 0x45, 0xDE, 0x02, 0x33, 0x33, 0x20, 0xED,
  0x55, 0x82, 0x6E, 0x0A, 0xC8, 0x2A, 0x0E, 0x66, 0x89, 0x26, 0xE0, 0x12, 0x22, 0x21, 0x0E, 0x66,
  0x06, 0x0E, 0x71, 0x0E, 0x06, 0x60, 0x3F, 0xB0, 0x37, 0x02, 0x80, 0x43, 0x02, 0x80, 0xC4, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_smart_toy() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_smart_toy_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_speaker_group 18x18, 4-bit Alpha,  RLE, 111 bytes.
static const uint8_t ic_outlined_18_hardware_speaker_group_data[] PROGMEM = {
  0x78, 0x03, 0x37, 0x30, 0xCF, 0x0C, 0x72, 0x90, 0x98, 0x01, 0x30, 0x99, 0x68, 0x91, 0x31, 0x0F,
  0x70, 0x8E, 0x80, 0x79, 0x69, 0x89, 0x07, 0x0F, 0x70, 0xEF, 0xE0, 0x79, 0x69, 0x89, 0x07, 0x0F,
  0x70, 0x8E, 0x80, 0x79, 0x69, 0x82, 0x70, 0xF7, 0x20, 0x32, 0x07, 0x96, 0x98, 0x90, 0x70, 0xF7,
  0x4E, 0xFE, 0x47, 0x96, 0x98, 0x90, 0x70, 0xF7, 0xEC, 0x4C, 0xE7, 0x96, 0x98, 0x90, 0x70, 0xF8,
  0xF6, 0x06, 0xF8, 0x96, 0x98, 0x90, 0x70, 0xF7, 0xCE, 0x8E, 0xC7, 0x96, 0x98, 0x90, 0x70, 0xF7,
  0x2B, 0xEB, 0x27, 0x96, 0x98, 0x27, 0x0F, 0x98, 0x01, 0x30, 0x99, 0x69, 0x81, 0x70, 0xCF, 0x0C,
  0x69, 0x07, 0x28, 0x03, 0x37, 0x90, 0x98, 0x03, 0x37, 0x20, 0xBF, 0x97, 0x38, 0x04, 0x36,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_speaker_group() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_speaker_group_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_speaker 18x18, 4-bit Alpha,  RLE, 114 bytes.
static const uint8_t ic_outlined_18_hardware_speaker_data[] PROGMEM = {
  0x77, 0x71, 0x03, 0x80, 0x47, 0x03, 0x70, 0x1F, 0xB0, 0x16, 0x81, 0x3F, 0x32, 0x00, 0x12, 0x81,
  0x3F, 0x36, 0x83, 0x3F, 0x30, 0x3A, 0x83, 0x30, 0x3F, 0x36, 0x83, 0x3F, 0x30, 0x6A, 0x83, 0x60,
  0x3F, 0x36, 0x81, 0x3F, 0x32, 0x00, 0x92, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36, 0x81, 0x3F, 0x36,
  0x89, 0x23, 0xF3, 0x04, 0xAA, 0x40, 0x3F, 0x36, 0x89, 0x23, 0xF3, 0x5F, 0xDD, 0xF5, 0x3F, 0x36,
  0x83, 0x3F, 0x3D, 0xB2, 0x83, 0xBD, 0x3F, 0x36, 0x83, 0x3F, 0x3E, 0x82, 0x83, 0x8E, 0x3F, 0x36,
  0x89, 0x23, 0xF3, 0xAE, 0x66, 0xEA, 0x3F, 0x36, 0x83, 0x3F, 0x31, 0xCA, 0x83, 0xC1, 0x3F, 0x36,
  0x81, 0x3F, 0x32, 0x00, 0x22, 0x81, 0x3F, 0x36, 0x01, 0xFB, 0x01, 0x70, 0x38, 0x04, 0x70, 0x37,
  0x77, 0x10,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_speaker() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_speaker_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_start 18x18, 4-bit Alpha,  RLE, 58 bytes.
static const uint8_t ic_outlined_18_hardware_start_data[] PROGMEM = {
  0x80, 0x98, 0x60, 0x05, 0x04, 0x77, 0x20, 0xB0, 0x97, 0x01, 0x04, 0x70, 0xB0, 0x97, 0x81, 0x8F,
  0x46, 0x0B, 0x09, 0x71, 0x81, 0x9F, 0x45, 0x0B, 0x09, 0x18, 0x04, 0x9A, 0x04, 0x40, 0xB0, 0x91,
  0x80, 0x49, 0xA0, 0x44, 0x0B, 0x09, 0x71, 0x81, 0x9F, 0x45, 0x0B, 0x09, 0x78, 0x18, 0xF4, 0x60,
  0xB0, 0x97, 0x01, 0x04, 0x70, 0x50, 0x48, 0x09, 0xA2, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_start() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_start_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_tablet_android 18x18, 4-bit Alpha,  RLE, 102 bytes.
static const uint8_t ic_outlined_18_hardware_tablet_android_data[] PROGMEM = {
  0x20, 0x10, 0xBF, 0xB0, 0xB0, 0x14, 0x08, 0xFD, 0x08, 0x40, 0xB0, 0xA8, 0x06, 0x30, 0xA0, 0xB4,
  0x0B, 0x08, 0x73, 0x08, 0x0B, 0x40, 0xB0, 0x87, 0x30, 0x80, 0xB4, 0x0B, 0x08, 0x73, 0x08, 0x0B,
  0x40, 0xB0, 0x87, 0x30, 0x80, 0xB4, 0x0B, 0x08, 0x73, 0x08, 0x0B, 0x40, 0xB0, 0x87, 0x30, 0x80,
  0xB4, 0x0B, 0x08, 0x73, 0x08, 0x0B, 0x40, 0xB0, 0x87, 0x30, 0x80, 0xB4, 0x0B, 0x08, 0x73, 0x08,
  0x0B, 0x40, 0xB0, 0x87, 0x30, 0x80, 0xB4, 0x0B, 0x08, 0x73, 0x08, 0x0B, 0x40, 0xB0, 0xD8, 0x06,
  0xB0, 0xD0, 0xB4, 0x0B, 0xC8, 0x2D, 0xBB, 0xDC, 0x0B, 0x40, 0x8C, 0x82, 0xB7, 0x7B, 0xC0, 0x84,
  0x01, 0x0B, 0xFB, 0x0B, 0x01, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_tablet_android() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_tablet_android_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_tablet_mac 18x18, 4-bit Alpha,  RLE, 88 bytes.
static const uint8_t ic_outlined_18_hardware_tablet_mac_data[] PROGMEM = {
  0x20, 0xBF, 0xC0, 0xC0, 0x23, 0x06, 0xFE, 0x0A, 0x30, 0x79, 0x80, 0x73, 0x0C, 0x0B, 0x30, 0x79,
  0x74, 0x00, 0xB3, 0x07, 0x97, 0x40, 0x0B, 0x30, 0x79, 0x74, 0x00, 0xB3, 0x07, 0x97, 0x40, 0x0B,
  0x30, 0x79, 0x74, 0x00, 0xB3, 0x07, 0x97, 0x40, 0x0B, 0x30, 0x79, 0x74, 0x00, 0xB3, 0x07, 0x97,
  0x40, 0x0B, 0x30, 0x79, 0x74, 0x00, 0xB3, 0x07, 0x97, 0x40, 0x0B, 0x30, 0x79, 0x74, 0x00, 0xB3,
  0x07, 0x98, 0x07, 0xB0, 0xE0, 0xB3, 0x07, 0xD8, 0x1B, 0x08, 0xD0, 0xB3, 0x06, 0xD8, 0x19, 0x05,
  0xD0, 0xA4, 0x0B, 0xD0, 0xCD, 0x0C, 0x02, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_tablet_mac() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_tablet_mac_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_tablet 18x18, 4-bit Alpha,  RLE, 70 bytes.
static const uint8_t ic_outlined_18_hardware_tablet_data[] PROGMEM = {
  0x80, 0xE3, 0x00, 0xBF, 0xF8, 0x1B, 0x03, 0xA0, 0xD8, 0x06, 0x70, 0xDA, 0x00, 0x3A, 0x0B, 0x73,
  0x0B, 0xA0, 0x03, 0xA0, 0xB7, 0x30, 0xBA, 0x00, 0x3A, 0x0B, 0x73, 0x0B, 0xA0, 0x03, 0xA0, 0xB7,
  0x30, 0xBA, 0x00, 0x3A, 0x0B, 0x73, 0x0B, 0xA0, 0x03, 0xA0, 0xB7, 0x30, 0xBA, 0x00, 0x3A, 0x0B,
  0x73, 0x0B, 0xA0, 0x03, 0xA0, 0xB7, 0x30, 0xBA, 0x00, 0x3A, 0x0D, 0x80, 0x67, 0x0D, 0xA8, 0x13,
  0x0B, 0xFF, 0x0B, 0x80, 0xE3, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_tablet() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_tablet_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_toys 18x18, 4-bit Alpha,  RLE, 78 bytes.
static const uint8_t ic_outlined_18_hardware_toys_data[] PROGMEM = {
  0x80, 0x98, 0x70, 0x83, 0x11, 0x09, 0xEA, 0x0E, 0x09, 0x71, 0x89, 0x13, 0xE7, 0x5F, 0x7C, 0xC7,
  0xF5, 0x78, 0x91, 0xDF, 0xBB, 0xB0, 0xAA, 0x0B, 0xA7, 0x02, 0x03, 0xA8, 0x6A, 0x5C, 0xC5, 0xAF,
  0x37, 0x09, 0xFB, 0x09, 0x58, 0x12, 0xF5, 0x71, 0x81, 0x5F, 0x24, 0x84, 0x3F, 0x9F, 0xE4, 0x28,
  0x44, 0xEF, 0x9F, 0x35, 0x89, 0x2C, 0xF7, 0xBE, 0xBB, 0xEB, 0x7F, 0xC6, 0x89, 0x21, 0xF9, 0xCD,
  0x99, 0xDC, 0x9F, 0x17, 0x82, 0x5D, 0xC2, 0x28, 0x22, 0xCD, 0x58, 0x09, 0x90, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_toys() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_toys_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_tv 18x18, 4-bit Alpha,  RLE, 76 bytes.
static const uint8_t ic_outlined_18_hardware_tv_data[] PROGMEM = {
  0x80, 0xC1, 0x00, 0x78, 0x09, 0x2B, 0x83, 0x70, 0x2F, 0xC8, 0x09, 0x0B, 0x84, 0xCF, 0x23, 0xF3,
  0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75,
  0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF3, 0x75, 0x84,
  0x3F, 0x33, 0xF3, 0x75, 0x84, 0x3F, 0x33, 0xF6, 0x80, 0x90, 0x38, 0x36, 0xF3, 0x1E, 0xFF, 0x0E,
  0x01, 0x28, 0x00, 0x3E, 0x80, 0x03, 0x71, 0x80, 0x2B, 0x80, 0xC6, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_tv() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_tv_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_videogame_asset_off 18x18, 4-bit Alpha,  RLE, 107 bytes.
static const uint8_t ic_outlined_18_hardware_videogame_asset_off_data[] PROGMEM = {
  0x80, 0xC2, 0x00, 0x27, 0x72, 0x81, 0x1E, 0x77, 0x72, 0x83, 0x9F, 0x70, 0x28, 0x04, 0x70, 0x43,
  0x85, 0x1F, 0xDF, 0x70, 0x88, 0x03, 0xD9, 0x01, 0x28, 0x43, 0xF2, 0x6F, 0x77, 0x81, 0x2F, 0x32,
  0x85, 0x3F, 0x20, 0x9F, 0x74, 0x83, 0xCD, 0x3F, 0x32, 0x83, 0x3F, 0x39, 0xCA, 0x07, 0x38, 0x3E,
  0xE3, 0xF3, 0x28, 0x73, 0xF3, 0x9C, 0xEA, 0xF7, 0x28, 0x31, 0x12, 0xF3, 0x28, 0x90, 0x3F, 0x20,
  0x8C, 0x06, 0xF7, 0x38, 0x12, 0xF3, 0x28, 0x43, 0xF2, 0x02, 0x32, 0x81, 0x6F, 0x72, 0x81, 0x2F,
  0x32, 0x01, 0x98, 0x03, 0xDA, 0x83, 0x70, 0x7F, 0x13, 0x04, 0x80, 0x47, 0x83, 0x9F, 0x70, 0x27,
  0x78, 0x16, 0xF7, 0x77, 0x28, 0x16, 0xE2, 0x77, 0x20, 0x17, 0x77,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_videogame_asset_off() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_videogame_asset_off_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_videogame_asset 18x18, 4-bit Alpha,  RLE, 74 bytes.
static const uint8_t ic_outlined_18_hardware_videogame_asset_data[] PROGMEM = {
  0x80, 0x98, 0x50, 0x03, 0x80, 0x92, 0x78, 0x13, 0x01, 0xFF, 0xA8, 0x51, 0x3F, 0x30, 0x13, 0x78,
  0x90, 0x21, 0x3F, 0x33, 0xF3, 0x07, 0x96, 0x89, 0x42, 0xFD, 0x3F, 0x33, 0xF3, 0xBD, 0xFB, 0x54,
  0x8A, 0x01, 0xDA, 0x3F, 0x33, 0xF3, 0xBD, 0xFB, 0x50, 0x1D, 0xA3, 0x86, 0x3F, 0x33, 0xF3, 0x07,
  0x93, 0x81, 0x2F, 0xD3, 0x87, 0x3F, 0x33, 0xF3, 0x01, 0x34, 0x02, 0x01, 0x38, 0x23, 0xF3, 0x1F,
  0xFA, 0x81, 0x10, 0x38, 0x09, 0x27, 0x03, 0x80, 0x98, 0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_videogame_asset() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_videogame_asset_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_watch_off 18x18, 4-bit Alpha,  RLE, 102 bytes.
static const uint8_t ic_outlined_18_hardware_watch_off_data[] PROGMEM = {
  0x77, 0x74, 0x80, 0x03, 0x72, 0x02, 0x40, 0xEA, 0x0E, 0x71, 0x81, 0x1E, 0x72, 0x84, 0x3F, 0x44,
  0xF3, 0x71, 0x89, 0x06, 0xF7, 0x05, 0xF6, 0x6F, 0x67, 0x28, 0x76, 0xF7, 0x09, 0xEE, 0xFC, 0x73,
  0x81, 0x6F, 0x73, 0x81, 0x4E, 0xA7, 0x20, 0x3A, 0x07, 0x38, 0x14, 0xF3, 0x71, 0x83, 0x6E, 0x6F,
  0x73, 0x0E, 0x06, 0x71, 0x84, 0x6E, 0x06, 0xF7, 0x20, 0xE0, 0x67, 0x18, 0x90, 0x3F, 0x40, 0x6F,
  0x70, 0x93, 0x72, 0x85, 0xAE, 0x40, 0x6F, 0x77, 0x58, 0x2C, 0xFE, 0xEA, 0x07, 0x74, 0x86, 0x7F,
  0x66, 0xFC, 0xF7, 0x73, 0x87, 0x3F, 0x33, 0xF3, 0x6F, 0x77, 0x30, 0xEA, 0x0E, 0x28, 0x16, 0xE2,
  0x72, 0x80, 0x03, 0x30, 0x17, 0x77,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_watch_off() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_watch_off_data, Alpha4(color::Black));
  return value;
}
// Image file ic_outlined_18_hardware_watch 18x18, 4-bit Alpha,  RLE, 104 bytes.
static const uint8_t ic_outlined_18_hardware_watch_data[] PROGMEM = {
  0x50, 0x1E, 0x01, 0x73, 0x86, 0x3F, 0x97, 0x79, 0xF3, 0x73, 0x81, 0x6F, 0x12, 0x81, 0x1F, 0x67,
  0x38, 0x69, 0xFC, 0xEE, 0xCF, 0x97, 0x28, 0x90, 0x1D, 0xFC, 0x99, 0xCF, 0xD1, 0x71, 0x81, 0xCE,
  0x54, 0x81, 0x5E, 0xC7, 0x81, 0x6F, 0x56, 0x81, 0x5F, 0x66, 0x00, 0xC7, 0x10, 0x0C, 0x60, 0xE0,
  0x97, 0x10, 0x90, 0xE6, 0x0E, 0x09, 0x71, 0x09, 0x0E, 0x60, 0x0C, 0x71, 0x00, 0xC6, 0x81, 0x6F,
  0x56, 0x81, 0x5F, 0x67, 0x81, 0xCE, 0x54, 0x81, 0x5E, 0xC7, 0x18, 0x90, 0x1D, 0xFC, 0x99, 0xCF,
  0xD1, 0x72, 0x86, 0x9F, 0xCE, 0xEC, 0xF9, 0x73, 0x81, 0x6F, 0x12, 0x81, 0x1F, 0x67, 0x38, 0x63,
  0xF9, 0x77, 0x9F, 0x37, 0x30, 0x1E, 0x01, 0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_outlined_18_hardware_watch() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_outlined_18_hardware_watch_data, Alpha4(color::Black));
  return value;
}
