#include "hardware.h"

using namespace roo_display;

// Image file ic_48_hardware_dock 48x48, 4-bit Alpha,  RLE, 199 bytes 
static const uint8_t ic_48_hardware_dock_data[] PROGMEM = {
  0x80, 0x9D, 0x10, 0x81, 0x2A, 0xEF, 0xFA, 0x81, 0xEA, 0x27, 0x77, 0x40, 0x20, 0xEF, 0xFE, 0x0E,
  0x02, 0x77, 0x73, 0x0A, 0xFF, 0xF9, 0x0A, 0x77, 0x73, 0x0E, 0xFF, 0xF9, 0x0E, 0x77, 0x73, 0xFF,
  0xFB, 0x77, 0x73, 0xFF, 0xFB, 0x77, 0x73, 0xFF, 0xFB, 0x77, 0x73, 0xFF, 0xFB, 0x77, 0x73, 0xC7,
  0x72, 0xC7, 0x77, 0x3C, 0x77, 0x2C, 0x77, 0x73, 0xC7, 0x72, 0xC7, 0x77, 0x3C, 0x77, 0x2C, 0x77,
  0x73, 0xC7, 0x72, 0xC7, 0x77, 0x3C, 0x77, 0x2C, 0x77, 0x73, 0xC7, 0x72, 0xC7, 0x77, 0x3C, 0x77,
  0x2C, 0x77, 0x73, 0xC7, 0x72, 0xC7, 0x77, 0x3C, 0x77, 0x2C, 0x77, 0x73, 0xC7, 0x72, 0xC7, 0x77,
  0x3C, 0x77, 0x2C, 0x77, 0x73, 0xC7, 0x72, 0xC7, 0x77, 0x3C, 0x77, 0x2C, 0x77, 0x73, 0xC7, 0x72,
  0xC7, 0x77, 0x3C, 0x77, 0x2C, 0x77, 0x73, 0xC7, 0x72, 0xC7, 0x77, 0x3C, 0x77, 0x2C, 0x77, 0x73,
  0xC7, 0x72, 0xC7, 0x77, 0x3C, 0x77, 0x2C, 0x77, 0x73, 0xFF, 0xFB, 0x77, 0x73, 0xFF, 0xFB, 0x77,
  0x73, 0xFF, 0xFB, 0x77, 0x73, 0xFF, 0xFB, 0x77, 0x73, 0x0E, 0xFF, 0xF9, 0x0E, 0x77, 0x73, 0x0A,
  0xFF, 0xF9, 0x0A, 0x77, 0x73, 0x02, 0x0E, 0xFF, 0xE0, 0xE0, 0x27, 0x77, 0x48, 0x12, 0xAE, 0xFF,
  0xA8, 0x1E, 0xA2, 0x80, 0xBB, 0x10, 0xFF, 0xA7, 0x77, 0x74, 0xFF, 0xA7, 0x77, 0x74, 0xFF, 0xA7,
  0x77, 0x74, 0xFF, 0xA8, 0x09, 0xD4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_dock() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_dock_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_smartphone 48x48, 4-bit Alpha,  RLE, 198 bytes 
static const uint8_t ic_48_hardware_smartphone_data[] PROGMEM = {
  0x80, 0x9C, 0x70, 0x81, 0x2A, 0xEF, 0xFE, 0x81, 0xEA, 0x27, 0x77, 0x02, 0x0E, 0xFF, 0xFB, 0x0E,
  0x02, 0x77, 0x60, 0xAF, 0xFF, 0xD0, 0xA7, 0x76, 0x0E, 0xFF, 0xFD, 0x0E, 0x77, 0x6F, 0xFF, 0xF7,
  0x76, 0xFF, 0xFF, 0x77, 0x6F, 0xFF, 0xF7, 0x76, 0xFF, 0xFF, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C,
  0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C,
  0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C,
  0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C,
  0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C,
  0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C,
  0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C,
  0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6F, 0xFF, 0xF7, 0x76, 0xFF,
  0xFF, 0x77, 0x6F, 0xFF, 0xF7, 0x76, 0xFF, 0xFF, 0x77, 0x60, 0xEF, 0xFF, 0xD0, 0xE7, 0x76, 0x0A,
  0xFF, 0xFD, 0x0A, 0x77, 0x60, 0x20, 0xEF, 0xFF, 0xB0, 0xE0, 0x27, 0x77, 0x81, 0x2A, 0xEF, 0xFE,
  0x81, 0xEA, 0x28, 0x09, 0xC7, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_smartphone() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_smartphone_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_laptop_chromebook 48x48, 4-bit Alpha,  RLE, 137 bytes 
static const uint8_t ic_48_hardware_laptop_chromebook_data[] PROGMEM = {
  0x80, 0xCC, 0x00, 0x80, 0xC4, 0xF7, 0x18, 0x0C, 0x4F, 0x71, 0x80, 0xC4, 0xF7, 0x18, 0x0C, 0x4F,
  0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77,
  0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7,
  0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77,
  0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71,
  0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77,
  0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0x80, 0xC4, 0xF7, 0x18, 0x0C,
  0x4F, 0x71, 0x80, 0xC4, 0xF7, 0x18, 0x0C, 0x4F, 0x71, 0xFF, 0xA7, 0x1F, 0xFA, 0x71, 0xFF, 0xA7,
  0x1F, 0xFA, 0x48, 0x0A, 0xF4, 0xF8, 0x0D, 0xF4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_laptop_chromebook() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_laptop_chromebook_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_keyboard_arrow_down 48x48, 4-bit Alpha,  RLE, 121 bytes 
static const uint8_t ic_48_hardware_keyboard_arrow_down_data[] PROGMEM = {
  0x80, 0x9C, 0x92, 0x00, 0x40, 0x17, 0x72, 0x01, 0x04, 0x77, 0x76, 0x82, 0x4F, 0xD1, 0x77, 0x82,
  0x1D, 0xF4, 0x77, 0x74, 0x04, 0xB0, 0xD0, 0x17, 0x50, 0x10, 0xDB, 0x04, 0x77, 0x73, 0x0A, 0xC0,
  0xD0, 0x17, 0x30, 0x10, 0xDC, 0x0A, 0x77, 0x74, 0x0B, 0xC0, 0xD0, 0x17, 0x10, 0x10, 0xDC, 0x0B,
  0x77, 0x76, 0x0B, 0xC0, 0xD0, 0x16, 0x01, 0x0D, 0xC0, 0xB7, 0x77, 0x71, 0x0B, 0xC0, 0xD0, 0x14,
  0x01, 0x0D, 0xC0, 0xB7, 0x77, 0x73, 0x0B, 0xC0, 0xD0, 0x12, 0x01, 0x0D, 0xC0, 0xB7, 0x77, 0x75,
  0x0B, 0xC8, 0x2D, 0x11, 0xDC, 0x0B, 0x77, 0x77, 0x70, 0xBC, 0x00, 0xDC, 0x0B, 0x80, 0xC1, 0x00,
  0xBF, 0x90, 0xB8, 0x0C, 0x30, 0x0B, 0xE0, 0xB8, 0x0C, 0x50, 0x0B, 0xC0, 0xB8, 0x0C, 0x70, 0x0B,
  0xA0, 0xB8, 0x0D, 0x10, 0x00, 0xB8, 0x09, 0xD8, 0x30,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_keyboard_arrow_down() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_keyboard_arrow_down_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_keyboard_hide 48x48, 4-bit Alpha,  RLE, 199 bytes 
static const uint8_t ic_48_hardware_keyboard_hide_data[] PROGMEM = {
  0x80, 0xCC, 0x10, 0x81, 0x2A, 0xEF, 0xFF, 0xFC, 0x81, 0xEA, 0x27, 0x20, 0x20, 0xE8, 0x0C, 0x0F,
  0x0E, 0x02, 0x71, 0x0A, 0x80, 0xC2, 0xF0, 0xA7, 0x10, 0xE8, 0x0C, 0x2F, 0x0E, 0x71, 0x80, 0xC4,
  0xF7, 0x18, 0x0C, 0x4F, 0x71, 0xE4, 0xA4, 0xA4, 0xA4, 0xA4, 0xE7, 0x1E, 0x4A, 0x4A, 0x4A, 0x4A,
  0x4E, 0x71, 0xE4, 0xA4, 0xA4, 0xA4, 0xA4, 0xE7, 0x1E, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x71, 0x80,
  0xC4, 0xF7, 0x18, 0x0C, 0x4F, 0x71, 0xE4, 0xA4, 0xA4, 0xA4, 0xA4, 0xE7, 0x1E, 0x4A, 0x4A, 0x4A,
  0x4A, 0x4E, 0x71, 0xE4, 0xA4, 0xA4, 0xA4, 0xA4, 0xE7, 0x1E, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x71,
  0x80, 0xC4, 0xF7, 0x18, 0x0C, 0x4F, 0x71, 0x80, 0xC4, 0xF7, 0x18, 0x0C, 0x4F, 0x71, 0xFD, 0x77,
  0x2F, 0xD7, 0x1F, 0xD7, 0x72, 0xFD, 0x71, 0xFD, 0x77, 0x2F, 0xD7, 0x1F, 0xD7, 0x72, 0xFD, 0x71,
  0x0E, 0x80, 0xC2, 0xF0, 0xE7, 0x10, 0xA8, 0x0C, 0x2F, 0x0A, 0x71, 0x02, 0x0E, 0x80, 0xC0, 0xF0,
  0xE0, 0x27, 0x28, 0x12, 0xAE, 0xFF, 0xFF, 0xC8, 0x1E, 0xA2, 0x80, 0xBA, 0x10, 0x07, 0xFF, 0x07,
  0x77, 0x77, 0x50, 0x7F, 0xD0, 0x77, 0x77, 0x77, 0x07, 0xFB, 0x07, 0x80, 0xC1, 0x00, 0x7F, 0x90,
  0x78, 0x0C, 0x30, 0x07, 0xE0, 0x78, 0x0C, 0x50, 0x07, 0xC0, 0x78, 0x0C, 0x70, 0x07, 0xA0, 0x78,
  0x0D, 0x10, 0x00, 0x78, 0x09, 0xE3, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_keyboard_hide() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_keyboard_hide_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_cast 48x48, 4-bit Alpha,  RLE, 260 bytes 
static const uint8_t ic_48_hardware_cast_data[] PROGMEM = {
  0x80, 0xCB, 0x70, 0x81, 0x2A, 0xE8, 0x0C, 0x0F, 0x81, 0xEA, 0x25, 0x02, 0x0E, 0x80, 0xC4, 0xF0,
  0xE0, 0x24, 0x0A, 0x80, 0xC6, 0xF0, 0xA4, 0x0E, 0x80, 0xC6, 0xF0, 0xE4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC8, 0x0D, 0x00, 0xC8, 0x0D, 0x00, 0xC8, 0x0D, 0x00, 0xC8, 0x0D, 0x00, 0xC4,
  0x98, 0x3E, 0xDA, 0x84, 0x77, 0x77, 0x6C, 0x4F, 0x0A, 0x04, 0x77, 0x77, 0x3C, 0x4F, 0xA0, 0xC0,
  0x57, 0x77, 0x71, 0xC4, 0xFC, 0x0B, 0x02, 0x77, 0x76, 0xC5, 0x83, 0x12, 0x59, 0xDE, 0x0E, 0x05,
  0x77, 0x75, 0xC7, 0x30, 0x30, 0xAE, 0x07, 0x77, 0x74, 0xC7, 0x50, 0x20, 0xBD, 0x09, 0x77, 0x73,
  0xC7, 0x70, 0x60, 0xEC, 0x07, 0x77, 0x72, 0xC4, 0x98, 0x2E, 0xB8, 0x36, 0x03, 0x0E, 0xC0, 0x57,
  0x77, 0x1C, 0x4D, 0x0D, 0x06, 0x50, 0x20, 0xEB, 0x0E, 0x02, 0x77, 0x7C, 0x4F, 0x0C, 0x02, 0x40,
  0x3C, 0x0B, 0x77, 0x7C, 0x4F, 0x90, 0xE0, 0x44, 0x06, 0xC0, 0x47, 0x76, 0xC5, 0x81, 0x15, 0x9E,
  0x04, 0x40, 0xBB, 0x0C, 0x77, 0x6C, 0x71, 0x01, 0x0A, 0xC0, 0xE0, 0x23, 0x02, 0xC0, 0x47, 0x75,
  0xC7, 0x30, 0x6C, 0x0C, 0x40, 0xAB, 0x0A, 0x77, 0x5C, 0x74, 0x06, 0xC0, 0x53, 0x03, 0xC7, 0x75,
  0xC4, 0x90, 0xC0, 0x65, 0x0A, 0xB0, 0xD4, 0x0D, 0xB0, 0x47, 0x74, 0xC4, 0xB0, 0xC0, 0x13, 0x01,
  0xC0, 0x33, 0x09, 0xB0, 0x87, 0x74, 0xC4, 0xC0, 0xC4, 0x09, 0xB0, 0x83, 0x05, 0xB0, 0xA4, 0xFF,
  0xB0, 0xE4, 0xD0, 0x63, 0x05, 0xB0, 0xB3, 0x03, 0xB0, 0xD4, 0xFF, 0xB0, 0xA4, 0xD0, 0xC3, 0x01,
  0xB0, 0xE3, 0x01, 0xB0, 0xE4, 0xFF, 0xA0, 0xE0, 0x24, 0xD0, 0xE4, 0xC4, 0xC4, 0xFF, 0x81, 0xEA,
  0x28, 0x0C, 0xB7, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_cast() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_cast_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_tablet_android 48x48, 4-bit Alpha,  RLE, 283 bytes 
static const uint8_t ic_48_hardware_tablet_android_data[] PROGMEM = {
  0x72, 0x81, 0x6C, 0xEF, 0xFF, 0xC0, 0xC0, 0x67, 0x72, 0x01, 0x0C, 0xFF, 0xFF, 0xA0, 0xC0, 0x17,
  0x70, 0xCF, 0xFF, 0xFC, 0x0C, 0x76, 0x06, 0xFF, 0xFF, 0xE0, 0x67, 0x50, 0xCF, 0xFF, 0xFE, 0x0C,
  0x75, 0x0E, 0xFF, 0xFF, 0xE0, 0xE7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77,
  0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07,
  0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7,
  0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77,
  0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07,
  0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7,
  0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77,
  0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07,
  0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7,
  0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77,
  0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07,
  0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7,
  0x5B, 0x07, 0x77, 0x77, 0x07, 0xB7, 0x58, 0x0C, 0x0F, 0x75, 0x80, 0xC0, 0xF7, 0x58, 0x0C, 0x0F,
  0x75, 0x80, 0xC0, 0xF7, 0x5F, 0xF7, 0x1F, 0xE0, 0xE7, 0x50, 0xCF, 0xE7, 0x1F, 0xE0, 0xC7, 0x50,
  0x6F, 0xFF, 0xFE, 0x06, 0x76, 0x0C, 0xFF, 0xFF, 0xC0, 0xC7, 0x70, 0x10, 0xCF, 0xFF, 0xFA, 0x0C,
  0x01, 0x77, 0x28, 0x16, 0xCE, 0xFF, 0xFB, 0x81, 0xEC, 0x67, 0x20,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_tablet_android() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_tablet_android_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_router 48x48, 4-bit Alpha,  RLE, 206 bytes 
static const uint8_t ic_48_hardware_router_data[] PROGMEM = {
  0x80, 0xCE, 0x70, 0x82, 0x48, 0xCE, 0xA8, 0x2E, 0xC8, 0x48, 0x0C, 0x00, 0x06, 0x0D, 0xFB, 0x0D,
  0x06, 0x77, 0x77, 0x40, 0x30, 0xDB, 0x86, 0xD9, 0x65, 0x56, 0x9D, 0xB0, 0xC0, 0x37, 0x77, 0x71,
  0x05, 0xB0, 0xA0, 0x37, 0x10, 0x30, 0xBB, 0x05, 0x77, 0x77, 0x82, 0x9F, 0xE4, 0x38, 0x41, 0x46,
  0x64, 0x13, 0x82, 0x4E, 0xF9, 0x77, 0x77, 0x10, 0x70, 0x12, 0x04, 0x0B, 0xE0, 0xB0, 0x42, 0x02,
  0x08, 0x77, 0x77, 0x50, 0xAC, 0x00, 0xEC, 0x0A, 0x77, 0x77, 0x70, 0x6A, 0x81, 0xC5, 0x12, 0x81,
  0x15, 0xDA, 0x05, 0x77, 0x77, 0x70, 0x70, 0x87, 0x10, 0x80, 0x78, 0x0A, 0xE4, 0x0C, 0x80, 0xD0,
  0x0C, 0x80, 0xD0, 0x0C, 0x80, 0xD0, 0x0C, 0x80, 0xD0, 0x0C, 0x80, 0xD0, 0x0C, 0x80, 0xD0, 0x0C,
  0x80, 0xD0, 0x0C, 0x77, 0x78, 0x12, 0xAE, 0xFF, 0xFF, 0x81, 0xEA, 0x27, 0x60, 0x20, 0xEF, 0xFF,
  0xFC, 0x0E, 0x02, 0x75, 0x0A, 0xFF, 0xFF, 0xE0, 0xA7, 0x50, 0xEF, 0xFF, 0xFE, 0x0E, 0x75, 0x80,
  0xC0, 0xF7, 0x58, 0x0C, 0x0F, 0x75, 0xE4, 0xB4, 0xB4, 0xFD, 0x75, 0xE4, 0xB4, 0xB4, 0xFD, 0x75,
  0xE4, 0xB4, 0xB4, 0xFD, 0x75, 0xE4, 0xB4, 0xB4, 0xFD, 0x75, 0x80, 0xC0, 0xF7, 0x58, 0x0C, 0x0F,
  0x75, 0x0E, 0xFF, 0xFF, 0xE0, 0xE7, 0x50, 0xAF, 0xFF, 0xFE, 0x0A, 0x75, 0x02, 0x0E, 0xFF, 0xFF,
  0xC0, 0xE0, 0x27, 0x68, 0x12, 0xAE, 0xFF, 0xFF, 0x81, 0xEA, 0x28, 0x0C, 0xC3, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_router() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_router_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_scanner 48x48, 4-bit Alpha,  RLE, 188 bytes 
static const uint8_t ic_48_hardware_scanner_data[] PROGMEM = {
  0x80, 0xEE, 0x40, 0x81, 0xB9, 0x38, 0x0D, 0x00, 0x02, 0xB8, 0x1D, 0x72, 0x80, 0xC5, 0x00, 0x8E,
  0x81, 0xC6, 0x18, 0x0C, 0x20, 0x0C, 0xFA, 0x0A, 0x05, 0x80, 0xC1, 0x08, 0x14, 0xAE, 0xF9, 0x81,
  0xE9, 0x38, 0x0C, 0x10, 0x05, 0x0B, 0xFA, 0x81, 0xD7, 0x28, 0x0C, 0x00, 0x81, 0x17, 0xCF, 0xA8,
  0x1C, 0x61, 0x80, 0xC0, 0x08, 0x13, 0x8E, 0xFA, 0x0A, 0x05, 0x80, 0xC1, 0x08, 0x14, 0xAE, 0xF9,
  0x81, 0xE9, 0x38, 0x0C, 0x10, 0x05, 0x0B, 0xFA, 0x81, 0xD8, 0x28, 0x0C, 0x00, 0x81, 0x17, 0xCF,
  0xA8, 0x1C, 0x61, 0x80, 0xC0, 0x08, 0x12, 0x8D, 0xFA, 0x0A, 0x02, 0x80, 0xC1, 0x08, 0x14, 0x9E,
  0xF0, 0xE0, 0x28, 0x0C, 0x30, 0x05, 0x0B, 0xE0, 0xA7, 0x68, 0x12, 0xAE, 0xFF, 0xFF, 0xB0, 0xE7,
  0x50, 0x20, 0xEF, 0xFF, 0xFE, 0x75, 0x0A, 0xFF, 0xFF, 0xF7, 0x50, 0xEF, 0xFF, 0xFF, 0x75, 0x80,
  0xC0, 0xF7, 0x58, 0x0C, 0x0F, 0x75, 0xC4, 0xC7, 0x76, 0xC7, 0x5C, 0x4C, 0x77, 0x6C, 0x75, 0xC4,
  0xC7, 0x76, 0xC7, 0x5C, 0x4C, 0x77, 0x6C, 0x75, 0x80, 0xC0, 0xF7, 0x58, 0x0C, 0x0F, 0x75, 0x0E,
  0xFF, 0xFF, 0xE0, 0xE7, 0x50, 0xAF, 0xFF, 0xFE, 0x0A, 0x75, 0x02, 0x0E, 0xFF, 0xFF, 0xC0, 0xE0,
  0x27, 0x68, 0x12, 0xAE, 0xFF, 0xFF, 0x81, 0xEA, 0x28, 0x0E, 0xE3, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_scanner() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_scanner_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_laptop_mac 48x48, 4-bit Alpha,  RLE, 193 bytes 
static const uint8_t ic_48_hardware_laptop_mac_data[] PROGMEM = {
  0x80, 0xCC, 0x10, 0x81, 0x2A, 0xEF, 0xFF, 0xFC, 0x81, 0xEA, 0x27, 0x20, 0x20, 0xE8, 0x0C, 0x0F,
  0x0E, 0x02, 0x71, 0x0A, 0x80, 0xC2, 0xF0, 0xA7, 0x10, 0xE8, 0x0C, 0x2F, 0x0E, 0x71, 0xC7, 0x77,
  0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71,
  0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77,
  0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C,
  0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74,
  0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7,
  0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C,
  0x71, 0x0E, 0x80, 0xC2, 0xF0, 0xE7, 0x10, 0xA8, 0x0C, 0x2F, 0x0A, 0x71, 0x02, 0x0E, 0xFF, 0xA8,
  0x2A, 0x11, 0xAF, 0xFA, 0x0E, 0x02, 0x72, 0x81, 0x2A, 0xEF, 0xF0, 0x12, 0x01, 0xFF, 0x81, 0xEA,
  0x25, 0x0E, 0xFF, 0xF0, 0x12, 0x01, 0xFF, 0xF0, 0xE0, 0xAF, 0xFF, 0x82, 0xA1, 0x1A, 0xFF, 0xF8,
  0x1A, 0x2E, 0x80, 0xD0, 0xF8, 0x4E, 0x20, 0x2A, 0xE8, 0x0C, 0x4F, 0x81, 0xEA, 0x28, 0x0D, 0xF5,
  0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_laptop_mac() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_laptop_mac_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_phone_iphone 48x48, 4-bit Alpha,  RLE, 230 bytes 
static const uint8_t ic_48_hardware_phone_iphone_data[] PROGMEM = {
  0x80, 0x9D, 0x00, 0x81, 0x4B, 0xEF, 0xFB, 0x0B, 0x04, 0x77, 0x74, 0x08, 0xFF, 0xF9, 0x08, 0x77,
  0x72, 0x04, 0xFF, 0xFB, 0x04, 0x77, 0x71, 0x0B, 0xFF, 0xFB, 0x0B, 0x77, 0x71, 0x0E, 0xFF, 0xFB,
  0x0E, 0x77, 0x71, 0xFF, 0xFD, 0x77, 0x71, 0xC7, 0x74, 0xC7, 0x77, 0x1C, 0x77, 0x4C, 0x77, 0x71,
  0xC7, 0x74, 0xC7, 0x77, 0x1C, 0x77, 0x4C, 0x77, 0x71, 0xC7, 0x74, 0xC7, 0x77, 0x1C, 0x77, 0x4C,
  0x77, 0x71, 0xC7, 0x74, 0xC7, 0x77, 0x1C, 0x77, 0x4C, 0x77, 0x71, 0xC7, 0x74, 0xC7, 0x77, 0x1C,
  0x77, 0x4C, 0x77, 0x71, 0xC7, 0x74, 0xC7, 0x77, 0x1C, 0x77, 0x4C, 0x77, 0x71, 0xC7, 0x74, 0xC7,
  0x77, 0x1C, 0x77, 0x4C, 0x77, 0x71, 0xC7, 0x74, 0xC7, 0x77, 0x1C, 0x77, 0x4C, 0x77, 0x71, 0xC7,
  0x74, 0xC7, 0x77, 0x1C, 0x77, 0x4C, 0x77, 0x71, 0xC7, 0x74, 0xC7, 0x77, 0x1C, 0x77, 0x4C, 0x77,
  0x71, 0xC7, 0x74, 0xC7, 0x77, 0x1C, 0x77, 0x4C, 0x77, 0x71, 0xC7, 0x74, 0xC7, 0x77, 0x1C, 0x77,
  0x4C, 0x77, 0x71, 0xC7, 0x74, 0xC7, 0x77, 0x1C, 0x77, 0x4C, 0x77, 0x71, 0xC7, 0x74, 0xC7, 0x77,
  0x1C, 0x77, 0x4C, 0x77, 0x71, 0xFF, 0xFD, 0x77, 0x71, 0xFF, 0xFD, 0x77, 0x71, 0xFC, 0x06, 0x20,
  0x6F, 0xC7, 0x77, 0x1F, 0xB0, 0x64, 0x06, 0xFB, 0x77, 0x71, 0xFB, 0x6F, 0xB7, 0x77, 0x1F, 0xB5,
  0x01, 0xFA, 0x0E, 0x77, 0x71, 0x0B, 0xFA, 0x06, 0x40, 0x6F, 0xA0, 0xB7, 0x77, 0x10, 0x4F, 0xB8,
  0x26, 0x01, 0x6F, 0xB0, 0x47, 0x77, 0x20, 0x8F, 0xFF, 0x90, 0x87, 0x77, 0x48, 0x14, 0xBE, 0xFF,
  0xA8, 0x1E, 0xB4, 0x80, 0x9D, 0x20,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_phone_iphone() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_phone_iphone_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_computer 48x48, 4-bit Alpha,  RLE, 153 bytes 
static const uint8_t ic_48_hardware_computer_data[] PROGMEM = {
  0x80, 0xE8, 0x10, 0x81, 0x2A, 0xEF, 0xFF, 0xFC, 0x81, 0xEA, 0x27, 0x20, 0x20, 0xE8, 0x0C, 0x0F,
  0x0E, 0x02, 0x71, 0x0A, 0x80, 0xC2, 0xF0, 0xA7, 0x10, 0xE8, 0x0C, 0x2F, 0x0E, 0x71, 0xC7, 0x77,
  0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71,
  0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77,
  0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C,
  0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74,
  0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7,
  0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0x0E, 0x80, 0xC2, 0xF0, 0xE7, 0x10, 0xA8, 0x0C,
  0x2F, 0x0A, 0x71, 0x02, 0x0E, 0x80, 0xC0, 0xF0, 0xE0, 0x27, 0x28, 0x12, 0xAE, 0xFF, 0xFF, 0xC8,
  0x1E, 0xA2, 0x58, 0x0A, 0xF4, 0xF8, 0x0D, 0xF4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_computer() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_computer_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_phonelink 48x48, 4-bit Alpha,  RLE, 156 bytes 
static const uint8_t ic_48_hardware_phonelink_data[] PROGMEM = {
  0x80, 0xE8, 0x10, 0x81, 0x2A, 0xE8, 0x0C, 0x0F, 0x71, 0x02, 0x0E, 0x80, 0xC2, 0xF7, 0x10, 0xA8,
  0x0C, 0x3F, 0x71, 0x0E, 0x80, 0xC3, 0xF7, 0x1C, 0x80, 0xD0, 0x0C, 0x80, 0xD0, 0x0C, 0x80, 0xD0,
  0x0C, 0x80, 0xD0, 0x0C, 0x77, 0x73, 0x05, 0x0E, 0xFD, 0x0E, 0x04, 0x4C, 0x77, 0x73, 0x0E, 0xFF,
  0x0E, 0x4C, 0x77, 0x73, 0xFF, 0xA4, 0xC7, 0x77, 0x3F, 0xFA, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C,
  0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x77,
  0x73, 0xC7, 0x1C, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x77, 0x73,
  0xC7, 0x1C, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x77, 0x73, 0xC7,
  0x1C, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x77, 0x73, 0xC7, 0x1F,
  0xFF, 0xFC, 0x48, 0x0D, 0x0F, 0x48, 0x0D, 0x0F, 0x48, 0x0D, 0x0F, 0x48, 0x0D, 0x0F, 0x40, 0xEF,
  0xF0, 0xEF, 0xFF, 0xF4, 0x04, 0x0E, 0xFD, 0x0E, 0x04, 0x80, 0xDF, 0x40,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_phonelink() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_phonelink_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_phonelink_off 48x48, 4-bit Alpha,  RLE, 350 bytes 
static const uint8_t ic_48_hardware_phonelink_off_data[] PROGMEM = {
  0x80, 0xA9, 0x70, 0x05, 0x02, 0x80, 0xD1, 0x08, 0x26, 0xFD, 0x28, 0x0C, 0x70, 0x05, 0xB0, 0xD0,
  0x28, 0x0C, 0x60, 0x02, 0x0D, 0xB0, 0xD0, 0x28, 0x0C, 0x60, 0x02, 0x0D, 0xB0, 0xD0, 0x28, 0x0C,
  0x60, 0x02, 0x0E, 0xB0, 0xD0, 0x23, 0x01, 0x0C, 0xFF, 0xFF, 0x97, 0x10, 0x4C, 0x0D, 0x02, 0x30,
  0x10, 0xCF, 0xFF, 0xF7, 0x10, 0xAD, 0x0D, 0x02, 0x30, 0x10, 0xCF, 0xFF, 0xE7, 0x10, 0xEE, 0x0D,
  0x02, 0x30, 0x10, 0xCF, 0xFF, 0xD7, 0x1C, 0x0D, 0xB0, 0xD0, 0x28, 0x0C, 0x20, 0xC0, 0x20, 0xDB,
  0x0D, 0x02, 0x80, 0xC1, 0x0C, 0x10, 0x20, 0xDB, 0x0D, 0x02, 0x80, 0xC0, 0x0C, 0x20, 0x20, 0xDB,
  0x0D, 0x02, 0x77, 0x77, 0x7C, 0x30, 0x20, 0xDB, 0x0D, 0x02, 0x77, 0x05, 0x0E, 0xFD, 0x0E, 0x04,
  0x4C, 0x40, 0x20, 0xDB, 0x0D, 0x02, 0x76, 0x0E, 0xFF, 0x0E, 0x4C, 0x50, 0x20, 0xDB, 0x0D, 0x02,
  0x75, 0xFF, 0xA4, 0xC6, 0x02, 0x0D, 0xB0, 0xD0, 0x27, 0x4F, 0xFA, 0x4C, 0x70, 0x20, 0xDB, 0x0D,
  0x02, 0x73, 0xC7, 0x1C, 0x4C, 0x71, 0x02, 0x0D, 0xB0, 0xD0, 0x27, 0x2C, 0x71, 0xC4, 0xC7, 0x20,
  0x20, 0xDB, 0x0D, 0x02, 0x71, 0xC7, 0x1C, 0x4C, 0x73, 0x02, 0x0D, 0xB0, 0xD0, 0x27, 0xC7, 0x1C,
  0x4C, 0x74, 0x02, 0x0D, 0xB0, 0xD0, 0x26, 0xC7, 0x1C, 0x4C, 0x75, 0x02, 0x0D, 0xB0, 0xD0, 0x25,
  0xC7, 0x1C, 0x4C, 0x76, 0x02, 0x0D, 0xB0, 0xD0, 0x24, 0x0C, 0xB7, 0x1C, 0x4C, 0x77, 0x02, 0x0D,
  0xB0, 0xD0, 0x23, 0x01, 0x0C, 0xA7, 0x1C, 0x4C, 0x77, 0x10, 0x20, 0xDB, 0x0D, 0x02, 0x30, 0x10,
  0xC9, 0x71, 0xC4, 0xC7, 0x72, 0x02, 0x0D, 0xB0, 0xD0, 0x23, 0x01, 0x0C, 0x71, 0xC4, 0xC7, 0x73,
  0x02, 0x0D, 0xB0, 0xD0, 0x23, 0x01, 0x71, 0xC4, 0xC7, 0x74, 0x02, 0x0D, 0xB0, 0xD0, 0x27, 0x4C,
  0x4C, 0x77, 0x50, 0x20, 0xDB, 0x0D, 0x02, 0x73, 0xC4, 0xC7, 0x76, 0x02, 0x0D, 0xB0, 0xD0, 0x27,
  0x28, 0x0C, 0x2F, 0x0D, 0x02, 0x30, 0x10, 0xC8, 0x0C, 0x6F, 0x0D, 0x02, 0x30, 0x10, 0xC8, 0x0C,
  0x6F, 0x0D, 0x02, 0x30, 0x10, 0xC8, 0x0C, 0x6F, 0x0D, 0x02, 0x30, 0x10, 0xC8, 0x0C, 0x6F, 0x0D,
  0x02, 0x30, 0x10, 0xCA, 0x0E, 0x80, 0xC3, 0xF0, 0xD0, 0x23, 0x82, 0x1C, 0xE4, 0x77, 0x77, 0x70,
  0x20, 0xDB, 0x0D, 0x02, 0x80, 0xC6, 0x00, 0x20, 0xDB, 0x0D, 0x02, 0x80, 0xC6, 0x00, 0x20, 0xDB,
  0x05, 0x80, 0xC7, 0x08, 0x22, 0xDF, 0x58, 0x0D, 0x10, 0x02, 0x05, 0x80, 0xAA, 0x30,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_phonelink_off() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_phonelink_off_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_keyboard_voice 48x48, 4-bit Alpha,  RLE, 235 bytes 
static const uint8_t ic_48_hardware_keyboard_voice_data[] PROGMEM = {
  0x80, 0xCE, 0x10, 0x07, 0x0C, 0xA0, 0xC0, 0x68, 0x0C, 0x40, 0x01, 0x0C, 0xE0, 0xC0, 0x18, 0x0C,
  0x20, 0x0C, 0xF9, 0x0C, 0x80, 0xC1, 0x00, 0x7F, 0xB0, 0x68, 0x0C, 0x00, 0x0C, 0xFB, 0x0C, 0x80,
  0xC0, 0x0F, 0xC0, 0xE8, 0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x0F, 0xD8, 0x0C, 0x00, 0xFD, 0x80, 0xC0,
  0x0F, 0xD8, 0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x0F, 0xD8, 0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x0F, 0xD8,
  0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x0F, 0xD8, 0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x0F, 0xD7, 0x77, 0x7B,
  0x06, 0x4F, 0xC0, 0xE4, 0x06, 0xB7, 0x76, 0x0E, 0xA0, 0x74, 0x0C, 0xFB, 0x0B, 0x40, 0x8A, 0x0D,
  0x77, 0x60, 0xBA, 0x0B, 0x40, 0x6F, 0xB0, 0x64, 0x0B, 0xA0, 0xB7, 0x76, 0x07, 0xA0, 0xE5, 0x0C,
  0xF9, 0x0C, 0x40, 0x1B, 0x07, 0x77, 0x60, 0x2B, 0x07, 0x40, 0x10, 0xCE, 0x0C, 0x01, 0x40, 0x7B,
  0x02, 0x77, 0x70, 0xBA, 0x0E, 0x01, 0x58, 0x46, 0xCE, 0xEC, 0x65, 0x01, 0x0E, 0xA0, 0xB7, 0x77,
  0x10, 0x3B, 0x0C, 0x77, 0x20, 0xCB, 0x03, 0x77, 0x72, 0x09, 0xB0, 0xB0, 0x17, 0x50, 0x10, 0xBB,
  0x08, 0x77, 0x74, 0x0C, 0xB0, 0xD0, 0x47, 0x30, 0x40, 0xDB, 0x0B, 0x77, 0x75, 0x01, 0x0C, 0xC8,
  0x1C, 0x61, 0x48, 0x11, 0x6C, 0xC0, 0xC0, 0x17, 0x77, 0x70, 0xAE, 0x82, 0xED, 0xDE, 0xE0, 0xA7,
  0x77, 0x73, 0x05, 0x0E, 0xFD, 0x0E, 0x05, 0x77, 0x77, 0x60, 0x60, 0xCF, 0x90, 0xC0, 0x68, 0x0C,
  0x20, 0x01, 0x05, 0xC0, 0x50, 0x18, 0x0C, 0x60, 0xC8, 0x0D, 0x00, 0xC8, 0x0D, 0x00, 0xC8, 0x0D,
  0x00, 0xC8, 0x0D, 0x00, 0xC8, 0x0D, 0x00, 0xC8, 0x0B, 0xA2, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_keyboard_voice() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_keyboard_voice_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_phone_android 48x48, 4-bit Alpha,  RLE, 264 bytes 
static const uint8_t ic_48_hardware_phone_android_data[] PROGMEM = {
  0x80, 0x9D, 0x10, 0x81, 0x6C, 0xEF, 0xFB, 0x0C, 0x06, 0x77, 0x73, 0x01, 0x0C, 0xFF, 0xF9, 0x0C,
  0x01, 0x77, 0x71, 0x0C, 0xFF, 0xFB, 0x0C, 0x77, 0x70, 0x6F, 0xFF, 0xD0, 0x67, 0x76, 0x0C, 0xFF,
  0xFD, 0x0C, 0x77, 0x60, 0xEF, 0xFF, 0xD0, 0xE7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0,
  0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7,
  0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76,
  0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0,
  0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7,
  0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76,
  0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0,
  0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7,
  0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76,
  0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0,
  0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7, 0x76, 0xB0, 0x77, 0x76, 0x07, 0xB7,
  0x76, 0xFF, 0xFF, 0x77, 0x6F, 0xFF, 0xF7, 0x76, 0xFF, 0xFF, 0x77, 0x6F, 0xFF, 0xF7, 0x76, 0xFB,
  0x71, 0xFA, 0x0E, 0x77, 0x60, 0xCF, 0xA7, 0x1F, 0xA0, 0xC7, 0x76, 0x06, 0xFF, 0xFD, 0x06, 0x77,
  0x70, 0xCF, 0xFF, 0xB0, 0xC7, 0x77, 0x10, 0x10, 0xCF, 0xFF, 0x90, 0xC0, 0x17, 0x77, 0x38, 0x16,
  0xCE, 0xFF, 0xA8, 0x1E, 0xC6, 0x80, 0x9D, 0x10,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_phone_android() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_phone_android_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_headset_mic 48x48, 4-bit Alpha,  RLE, 272 bytes 
static const uint8_t ic_48_hardware_headset_mic_data[] PROGMEM = {
  0x80, 0x9D, 0x60, 0x83, 0x26, 0xAC, 0xEA, 0x83, 0xEC, 0xA6, 0x27, 0x77, 0x76, 0x05, 0x0C, 0xFD,
  0x0C, 0x05, 0x77, 0x77, 0x20, 0x40, 0xDF, 0xFA, 0x0D, 0x04, 0x77, 0x76, 0x09, 0xFF, 0xE0, 0x97,
  0x77, 0x30, 0x10, 0xCE, 0x82, 0xB7, 0x31, 0x28, 0x21, 0x37, 0xBE, 0x0C, 0x01, 0x77, 0x70, 0x10,
  0xDD, 0x09, 0x02, 0x73, 0x02, 0x09, 0xD0, 0xD0, 0x17, 0x76, 0x0C, 0xC0, 0xD0, 0x37, 0x70, 0x30,
  0xDC, 0x0C, 0x77, 0x50, 0x9C, 0x0B, 0x77, 0x40, 0xBC, 0x09, 0x77, 0x30, 0x4C, 0x0B, 0x77, 0x60,
  0xBC, 0x04, 0x77, 0x20, 0xDB, 0x0D, 0x77, 0x71, 0x0D, 0xB0, 0xD7, 0x71, 0x05, 0xC0, 0x37, 0x77,
  0x10, 0x3C, 0x05, 0x77, 0x0C, 0xB0, 0x97, 0x77, 0x30, 0x9B, 0x0B, 0x76, 0x02, 0xC0, 0x27, 0x77,
  0x30, 0x2C, 0x02, 0x75, 0x06, 0xB0, 0xB7, 0x77, 0x50, 0xBB, 0x06, 0x75, 0x0A, 0xB0, 0x77, 0x77,
  0x50, 0x7B, 0x09, 0x75, 0x0C, 0xB0, 0x37, 0x77, 0x50, 0x3B, 0x0C, 0x75, 0x0E, 0xB0, 0x17, 0x77,
  0x50, 0x1B, 0x0E, 0x75, 0xC7, 0x77, 0x7C, 0x75, 0xC7, 0x77, 0x7C, 0x75, 0xC7, 0x77, 0x7C, 0x75,
  0xC7, 0x77, 0x7C, 0x75, 0xC7, 0x77, 0x7C, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75,
  0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75,
  0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75,
  0xFD, 0x75, 0xFD, 0x75, 0x0C, 0xFC, 0x75, 0xFD, 0x75, 0x06, 0xFC, 0x75, 0xFD, 0x76, 0x0C, 0xFB,
  0x75, 0xFD, 0x76, 0x01, 0x0C, 0xFA, 0x75, 0xFD, 0x77, 0x18, 0x16, 0xCE, 0xE7, 0x5F, 0xD8, 0x0D,
  0x00, 0xB0, 0xE8, 0x0D, 0x00, 0xB0, 0xC7, 0x77, 0x72, 0xFF, 0xB0, 0x67, 0x77, 0x72, 0xFF, 0xA0,
  0xC7, 0x77, 0x73, 0xFF, 0x90, 0xC0, 0x17, 0x77, 0x73, 0xFD, 0x81, 0xEC, 0x68, 0x09, 0xC5, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_headset_mic() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_headset_mic_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_security 48x48, 4-bit Alpha,  RLE, 300 bytes 
static const uint8_t ic_48_hardware_security_data[] PROGMEM = {
  0x80, 0x9E, 0x20, 0x82, 0x5C, 0xC5, 0x80, 0xC6, 0x00, 0x60, 0xDC, 0x0D, 0x06, 0x80, 0xC1, 0x08,
  0x11, 0x8E, 0xF9, 0x81, 0xE8, 0x17, 0x77, 0x74, 0x03, 0x0A, 0xFF, 0x0A, 0x03, 0x77, 0x77, 0x05,
  0x0C, 0xF0, 0xE0, 0x9F, 0xA0, 0xC0, 0x57, 0x77, 0x30, 0x60, 0xDF, 0x81, 0xD7, 0x11, 0xFC, 0x0D,
  0x06, 0x77, 0x58, 0x11, 0x8E, 0xF0, 0xC0, 0x54, 0xFE, 0x81, 0xE8, 0x17, 0x70, 0x30, 0xAF, 0x90,
  0xA0, 0x46, 0xFF, 0xA0, 0xA0, 0x37, 0x5F, 0x81, 0xE9, 0x27, 0x1F, 0xFC, 0x75, 0xD8, 0x1D, 0x71,
  0x73, 0xFF, 0xC7, 0x5C, 0x05, 0x76, 0xFF, 0xC7, 0x5C, 0x77, 0xFF, 0xC7, 0x5C, 0x77, 0xFF, 0xC7,
  0x5C, 0x77, 0xFF, 0xC7, 0x5C, 0x77, 0xFF, 0xC7, 0x5C, 0x77, 0xFF, 0xC7, 0x5C, 0x77, 0xFF, 0xC7,
  0x5C, 0x77, 0xFF, 0xC7, 0x5C, 0x77, 0xFF, 0xC7, 0x5C, 0x77, 0xFF, 0xC7, 0x5C, 0x77, 0xFF, 0xC7,
  0x50, 0xEB, 0x77, 0xFF, 0xB0, 0xE7, 0x50, 0xDF, 0xFB, 0x76, 0x01, 0xB0, 0xD7, 0x50, 0xBF, 0xFB,
  0x76, 0x04, 0xB0, 0xB7, 0x50, 0x8F, 0xFB, 0x76, 0x07, 0xB0, 0x87, 0x50, 0x5F, 0xFB, 0x76, 0x0B,
  0xB0, 0x57, 0x50, 0x1F, 0xFB, 0x75, 0x01, 0xC0, 0x17, 0x60, 0xCF, 0xFA, 0x75, 0x06, 0xB0, 0xC7,
  0x70, 0x7F, 0xFA, 0x75, 0x0D, 0xB0, 0x77, 0x70, 0x1F, 0xFA, 0x74, 0x05, 0xC0, 0x17, 0x71, 0x0A,
  0xFF, 0x97, 0x40, 0xDB, 0x0A, 0x77, 0x20, 0x2F, 0xF9, 0x73, 0x07, 0xC0, 0x27, 0x73, 0x09, 0xFF,
  0x72, 0x02, 0xC0, 0x97, 0x74, 0x01, 0x0E, 0xFE, 0x71, 0x01, 0x0D, 0xB0, 0xE0, 0x17, 0x75, 0x05,
  0xFE, 0x71, 0x0B, 0xC0, 0x57, 0x77, 0x0A, 0xFD, 0x70, 0xBC, 0x09, 0x77, 0x72, 0x0C, 0xFC, 0x50,
  0x10, 0xCC, 0x0C, 0x77, 0x73, 0x01, 0x0D, 0xFB, 0x40, 0x40, 0xEC, 0x0C, 0x01, 0x77, 0x74, 0x01,
  0x0C, 0xFA, 0x20, 0x20, 0xAD, 0x0C, 0x01, 0x77, 0x77, 0x0B, 0xF9, 0x05, 0x0B, 0xE0, 0xB7, 0x77,
  0x73, 0x07, 0xFF, 0x07, 0x77, 0x77, 0x50, 0x20, 0xCF, 0xB0, 0xB0, 0x28, 0x0C, 0x00, 0x04, 0x0C,
  0xE0, 0xC0, 0x48, 0x0C, 0x40, 0x84, 0x38, 0xDD, 0x82, 0x80, 0x9E, 0x10,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_security() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_security_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_power_input 48x48, 4-bit Alpha,  RLE, 42 bytes 
static const uint8_t ic_48_hardware_power_input_data[] PROGMEM = {
  0x80, 0x9D, 0xC1, 0x08, 0x0C, 0x2F, 0x73, 0x80, 0xC2, 0xF7, 0x38, 0x0C, 0x2F, 0x73, 0x80, 0xC2,
  0xF8, 0x0B, 0x86, 0x0F, 0xB4, 0xFB, 0x4F, 0xB7, 0x3F, 0xB4, 0xFB, 0x4F, 0xB7, 0x3F, 0xB4, 0xFB,
  0x4F, 0xB7, 0x3F, 0xB4, 0xFB, 0x4F, 0xB8, 0x09, 0xDC, 0x10,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_power_input() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_power_input_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_keyboard_backspace 48x48, 4-bit Alpha,  RLE, 135 bytes 
static const uint8_t ic_48_hardware_keyboard_backspace_data[] PROGMEM = {
  0x80, 0x99, 0x95, 0x00, 0x07, 0x80, 0xD1, 0x00, 0x7A, 0x07, 0x80, 0xC7, 0x00, 0x7C, 0x07, 0x80,
  0xC5, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC4, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC4, 0x00, 0x7C, 0x0E,
  0x03, 0x80, 0xC4, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC4, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC4, 0x00,
  0x7C, 0x0E, 0x03, 0x80, 0xC4, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC4, 0x00, 0x7F, 0xFF, 0xFE, 0x75,
  0x07, 0xFF, 0xFF, 0xF7, 0x50, 0x7F, 0xFF, 0xFF, 0x76, 0x07, 0xFF, 0xFF, 0xE7, 0x70, 0x7C, 0x0E,
  0x03, 0x80, 0xC6, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC6, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC6, 0x00,
  0x7C, 0x0E, 0x03, 0x80, 0xC6, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC6, 0x00, 0x7C, 0x0E, 0x03, 0x80,
  0xC6, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC6, 0x00, 0x7C, 0x07, 0x80, 0xC7, 0x00, 0x7A, 0x07, 0x80,
  0xD1, 0x00, 0x07, 0x80, 0x99, 0xB1, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_keyboard_backspace() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_keyboard_backspace_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_mouse 48x48, 4-bit Alpha,  RLE, 244 bytes 
static const uint8_t ic_48_hardware_mouse_data[] PROGMEM = {
  0x80, 0x9D, 0x70, 0x81, 0x59, 0xC4, 0x81, 0xC9, 0x57, 0x77, 0x77, 0x81, 0x29, 0xEB, 0x4B, 0x81,
  0xE9, 0x27, 0x77, 0x73, 0x08, 0xE4, 0xE0, 0x87, 0x77, 0x70, 0x20, 0xCF, 0x4F, 0x0C, 0x02, 0x77,
  0x74, 0x03, 0x0E, 0xF9, 0x4F, 0x90, 0xE0, 0x27, 0x77, 0x20, 0x20, 0xEF, 0xA4, 0xFA, 0x0E, 0x02,
  0x77, 0x71, 0x0C, 0xFB, 0x4F, 0xB0, 0xC7, 0x77, 0x08, 0xFC, 0x4F, 0xC0, 0x87, 0x75, 0x02, 0xFD,
  0x4F, 0xD0, 0x27, 0x74, 0x09, 0xFD, 0x4F, 0xD0, 0x97, 0x74, 0xFE, 0x4F, 0xD0, 0xE7, 0x73, 0x05,
  0xFE, 0x4F, 0xE0, 0x57, 0x72, 0x09, 0xFE, 0x4F, 0xE0, 0x97, 0x72, 0x0C, 0xFE, 0x4F, 0xE0, 0xC7,
  0x72, 0x0E, 0xFE, 0x4F, 0xE0, 0xE7, 0x72, 0xFF, 0x4F, 0xF8, 0x0B, 0x94, 0x0F, 0xFF, 0xFC, 0x77,
  0x2F, 0xFF, 0xFC, 0x77, 0x2F, 0xFF, 0xFC, 0x77, 0x2F, 0xFF, 0xFC, 0x77, 0x2F, 0xFF, 0xFC, 0x77,
  0x2F, 0xFF, 0xFC, 0x77, 0x2F, 0xFF, 0xFC, 0x77, 0x2F, 0xFF, 0xFC, 0x77, 0x2F, 0xFF, 0xFC, 0x77,
  0x20, 0xEF, 0xFF, 0xFA, 0x0E, 0x77, 0x20, 0xCF, 0xFF, 0xFA, 0x0C, 0x77, 0x20, 0x9F, 0xFF, 0xFA,
  0x09, 0x77, 0x20, 0x5F, 0xFF, 0xFA, 0x05, 0x77, 0x30, 0xEF, 0xFF, 0xF0, 0xE7, 0x74, 0x09, 0xFF,
  0xFF, 0x09, 0x77, 0x40, 0x2F, 0xFF, 0xF0, 0x27, 0x75, 0x08, 0xFF, 0xFD, 0x08, 0x77, 0x70, 0xCF,
  0xFF, 0xB0, 0xC7, 0x77, 0x10, 0x20, 0xEF, 0xFF, 0x90, 0xE0, 0x27, 0x77, 0x20, 0x20, 0xEF, 0xFE,
  0x0E, 0x02, 0x77, 0x74, 0x02, 0x0C, 0xFF, 0xC0, 0xC0, 0x27, 0x77, 0x70, 0x8F, 0xFA, 0x08, 0x77,
  0x77, 0x38, 0x12, 0x9E, 0xFB, 0x81, 0xE9, 0x27, 0x77, 0x77, 0x82, 0x59, 0xCE, 0xA8, 0x2E, 0xC9,
  0x58, 0x09, 0xD7, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_mouse() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_mouse_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_device_hub 48x48, 4-bit Alpha,  RLE, 201 bytes 
static const uint8_t ic_48_hardware_device_hub_data[] PROGMEM = {
  0x80, 0xCE, 0x10, 0x07, 0x0C, 0xA0, 0xC0, 0x68, 0x0C, 0x40, 0x01, 0x0D, 0xE0, 0xC0, 0x18, 0x0C,
  0x20, 0x0D, 0xF9, 0x0C, 0x80, 0xC1, 0x00, 0x7F, 0xB0, 0x68, 0x0C, 0x00, 0x0C, 0xFB, 0x0C, 0x80,
  0xC0, 0x0F, 0xC0, 0xE8, 0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x00, 0xCF, 0xB0, 0xC8, 0x0C, 0x00, 0x06,
  0xFB, 0x06, 0x80, 0xC1, 0x00, 0xCF, 0x90, 0xC8, 0x0C, 0x20, 0x01, 0x0C, 0xE0, 0xC0, 0x18, 0x0C,
  0x40, 0x06, 0xC0, 0x68, 0x0C, 0x70, 0xC8, 0x0D, 0x00, 0xC8, 0x0D, 0x00, 0xC8, 0x0D, 0x00, 0xC8,
  0x0D, 0x00, 0xC8, 0x0D, 0x00, 0xC8, 0x0C, 0x70, 0x07, 0xC0, 0x78, 0x0C, 0x50, 0x07, 0xE0, 0x78,
  0x0C, 0x30, 0x07, 0xF9, 0x07, 0x80, 0xC1, 0x00, 0x7C, 0x00, 0xDC, 0x07, 0x77, 0x77, 0x70, 0x7C,
  0x82, 0xD2, 0x2E, 0xC0, 0x77, 0x77, 0x75, 0x07, 0xC0, 0xE0, 0x22, 0x02, 0x0E, 0xC0, 0x77, 0x77,
  0x73, 0x07, 0xC0, 0xE0, 0x34, 0x03, 0x0E, 0xC0, 0x77, 0x77, 0x71, 0x07, 0xC0, 0xE0, 0x36, 0x03,
  0x0E, 0xC0, 0x77, 0x76, 0xFE, 0x04, 0x71, 0x04, 0xFE, 0x75, 0xFD, 0x04, 0x73, 0x04, 0xFD, 0x75,
  0xFC, 0x05, 0x75, 0x05, 0xFC, 0x75, 0xFB, 0x05, 0x77, 0x05, 0xFB, 0x75, 0xFB, 0x77, 0x2F, 0xB7,
  0x5F, 0xB7, 0x72, 0xFB, 0x75, 0xFB, 0x77, 0x2F, 0xB7, 0x5F, 0xB7, 0x72, 0xFB, 0x75, 0xFB, 0x77,
  0x2F, 0xB7, 0x5F, 0xB7, 0x72, 0xFB, 0x80, 0xCC, 0x20,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_device_hub() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_device_hub_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_speaker 48x48, 4-bit Alpha,  RLE, 280 bytes 
static const uint8_t ic_48_hardware_speaker_data[] PROGMEM = {
  0x80, 0xB8, 0x70, 0x81, 0x2A, 0xEF, 0xFE, 0x81, 0xEA, 0x27, 0x77, 0x02, 0x0E, 0xFF, 0xFB, 0x0E,
  0x02, 0x77, 0x60, 0xAF, 0xFF, 0xD0, 0xA7, 0x76, 0x0E, 0xFF, 0xFD, 0x0E, 0x77, 0x6F, 0xC0, 0xC0,
  0x42, 0x04, 0x0D, 0xFC, 0x77, 0x6F, 0xB0, 0xC6, 0x0D, 0xFB, 0x77, 0x6F, 0xB0, 0x46, 0x04, 0xFB,
  0x77, 0x6F, 0xB7, 0x1F, 0xB7, 0x76, 0xFB, 0x71, 0xFB, 0x77, 0x6F, 0xB0, 0x46, 0x04, 0xFB, 0x77,
  0x6F, 0xB0, 0xD5, 0x01, 0x0D, 0xFB, 0x77, 0x6F, 0xC0, 0xD0, 0x42, 0x04, 0x0D, 0xFC, 0x77, 0x6F,
  0xFF, 0xF7, 0x76, 0xFF, 0xFF, 0x77, 0x6F, 0xFF, 0xF7, 0x76, 0xFF, 0xFF, 0x77, 0x6F, 0xB8, 0x19,
  0x51, 0x28, 0x11, 0x59, 0xFB, 0x77, 0x6F, 0x90, 0xA0, 0x17, 0x10, 0x10, 0xAF, 0x97, 0x76, 0xF0,
  0x67, 0x50, 0x6F, 0x77, 0x6E, 0x06, 0x77, 0x06, 0xE7, 0x76, 0xD0, 0xA5, 0x06, 0x0C, 0xA0, 0xC0,
  0x65, 0x0A, 0xD7, 0x76, 0xD0, 0x13, 0x01, 0x0C, 0xE0, 0xC0, 0x13, 0x01, 0xD7, 0x76, 0xC0, 0x94,
  0x0C, 0xF9, 0x0C, 0x40, 0x9C, 0x77, 0x6C, 0x05, 0x30, 0x6F, 0xB0, 0x63, 0x05, 0xC7, 0x76, 0xC0,
  0x13, 0x0C, 0xFB, 0x0C, 0x30, 0x1C, 0x77, 0x6C, 0x4F, 0xC0, 0xE4, 0xC7, 0x76, 0xC4, 0xFC, 0x0E,
  0x4C, 0x77, 0x6C, 0x01, 0x30, 0xCF, 0xB0, 0xC3, 0x02, 0xC7, 0x76, 0xC0, 0x53, 0x06, 0xFB, 0x06,
  0x30, 0x5C, 0x77, 0x6C, 0x09, 0x40, 0xCF, 0x90, 0xC4, 0x0A, 0xC7, 0x76, 0xD0, 0x13, 0x01, 0x0C,
  0xE0, 0xC0, 0x13, 0x01, 0xD7, 0x76, 0xD0, 0xA5, 0x84, 0x6C, 0xEE, 0xC6, 0x50, 0xAD, 0x77, 0x6E,
  0x06, 0x77, 0x06, 0xE7, 0x76, 0xF0, 0x67, 0x50, 0x6F, 0x77, 0x6F, 0x90, 0xA0, 0x17, 0x10, 0x10,
  0xAF, 0x97, 0x76, 0xFB, 0x81, 0x95, 0x12, 0x81, 0x25, 0xAF, 0xB7, 0x76, 0x0E, 0xFF, 0xFD, 0x0E,
  0x77, 0x60, 0xAF, 0xFF, 0xD0, 0xA7, 0x76, 0x02, 0x0E, 0xFF, 0xFB, 0x0E, 0x02, 0x77, 0x78, 0x12,
  0xAE, 0xFF, 0xE8, 0x1E, 0xA2, 0x80, 0xB8, 0x70,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_speaker() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_speaker_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_keyboard_arrow_right 48x48, 4-bit Alpha,  RLE, 132 bytes 
static const uint8_t ic_48_hardware_keyboard_arrow_right_data[] PROGMEM = {
  0x80, 0x99, 0x97, 0x00, 0x0B, 0x80, 0xD1, 0x00, 0xBA, 0x0B, 0x80, 0xC7, 0x00, 0x9C, 0x0B, 0x80,
  0xC6, 0x00, 0x10, 0xDC, 0x0B, 0x80, 0xC6, 0x00, 0x10, 0xCC, 0x0B, 0x80, 0xC6, 0x00, 0x10, 0xCC,
  0x0B, 0x80, 0xC6, 0x00, 0x10, 0xCC, 0x0B, 0x80, 0xC6, 0x00, 0x10, 0xCC, 0x0B, 0x80, 0xC6, 0x00,
  0x10, 0xCC, 0x0B, 0x80, 0xC6, 0x00, 0x10, 0xCC, 0x0B, 0x80, 0xC6, 0x00, 0x10, 0xCC, 0x0B, 0x80,
  0xC6, 0x00, 0x10, 0xDC, 0x0A, 0x80, 0xC5, 0x00, 0x6D, 0x04, 0x80, 0xC4, 0x00, 0x6D, 0x04, 0x80,
  0xC4, 0x00, 0x6D, 0x04, 0x80, 0xC4, 0x00, 0x6D, 0x04, 0x80, 0xC4, 0x00, 0x6D, 0x04, 0x80, 0xC4,
  0x00, 0x6D, 0x04, 0x80, 0xC4, 0x00, 0x6D, 0x04, 0x80, 0xC4, 0x00, 0x6D, 0x04, 0x80, 0xC4, 0x00,
  0x6D, 0x04, 0x80, 0xC5, 0x00, 0x4C, 0x04, 0x80, 0xC7, 0x00, 0x4A, 0x04, 0x80, 0xD1, 0x00, 0x04,
  0x80, 0x99, 0xA7, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_keyboard_arrow_right() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_keyboard_arrow_right_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_headset 48x48, 4-bit Alpha,  RLE, 250 bytes 
static const uint8_t ic_48_hardware_headset_data[] PROGMEM = {
  0x80, 0x9D, 0x60, 0x83, 0x26, 0xAC, 0xEA, 0x83, 0xEC, 0xA6, 0x27, 0x77, 0x76, 0x05, 0x0C, 0xFD,
  0x0C, 0x05, 0x77, 0x77, 0x20, 0x40, 0xDF, 0xFA, 0x0D, 0x04, 0x77, 0x76, 0x09, 0xFF, 0xE0, 0x97,
  0x77, 0x30, 0x10, 0xCE, 0x82, 0xB7, 0x31, 0x28, 0x21, 0x37, 0xBE, 0x0C, 0x01, 0x77, 0x70, 0x10,
  0xDD, 0x09, 0x02, 0x73, 0x02, 0x09, 0xD0, 0xD0, 0x17, 0x76, 0x0C, 0xC0, 0xD0, 0x37, 0x70, 0x30,
  0xDC, 0x0C, 0x77, 0x50, 0x9C, 0x0B, 0x77, 0x40, 0xBC, 0x09, 0x77, 0x30, 0x4C, 0x0B, 0x77, 0x60,
  0xBC, 0x04, 0x77, 0x20, 0xDB, 0x0D, 0x77, 0x71, 0x0D, 0xB0, 0xD7, 0x71, 0x05, 0xC0, 0x37, 0x77,
  0x10, 0x3C, 0x05, 0x77, 0x0C, 0xB0, 0x97, 0x77, 0x30, 0x9B, 0x0B, 0x76, 0x02, 0xC0, 0x27, 0x77,
  0x30, 0x2C, 0x02, 0x75, 0x06, 0xB0, 0xB7, 0x77, 0x50, 0xBB, 0x06, 0x75, 0x0A, 0xB0, 0x77, 0x77,
  0x50, 0x7B, 0x09, 0x75, 0x0C, 0xB0, 0x37, 0x77, 0x50, 0x3B, 0x0C, 0x75, 0x0E, 0xB0, 0x17, 0x77,
  0x50, 0x1B, 0x0E, 0x75, 0xC7, 0x77, 0x7C, 0x75, 0xC7, 0x77, 0x7C, 0x75, 0xC7, 0x77, 0x7C, 0x75,
  0xC7, 0x77, 0x7C, 0x75, 0xC7, 0x77, 0x7C, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75,
  0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75,
  0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75, 0xFD, 0x75,
  0xFD, 0x75, 0xFC, 0x0E, 0x75, 0x0C, 0xFC, 0x75, 0xFC, 0x0C, 0x75, 0x06, 0xFC, 0x75, 0xFC, 0x06,
  0x76, 0x0C, 0xFB, 0x75, 0xFB, 0x0C, 0x77, 0x01, 0x0C, 0xFA, 0x75, 0xFA, 0x0C, 0x01, 0x77, 0x28,
  0x16, 0xCE, 0xE7, 0x5E, 0x81, 0xEC, 0x68, 0x0E, 0x85, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_headset() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_headset_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_sim_card 48x48, 4-bit Alpha,  RLE, 202 bytes 
static const uint8_t ic_48_hardware_sim_card_data[] PROGMEM = {
  0x80, 0xB9, 0x70, 0x07, 0xFF, 0xA8, 0x1E, 0xA2, 0x77, 0x76, 0x07, 0xFF, 0xD0, 0xE0, 0x27, 0x77,
  0x40, 0x7F, 0xFF, 0x0A, 0x77, 0x73, 0x07, 0xFF, 0xF9, 0x0E, 0x77, 0x72, 0x07, 0xFF, 0xFB, 0x77,
  0x71, 0x07, 0xFF, 0xFC, 0x77, 0x70, 0x7F, 0xFF, 0xD7, 0x76, 0x07, 0xFF, 0xFE, 0x77, 0x50, 0x7F,
  0xFF, 0xF7, 0x74, 0x07, 0xFF, 0xFF, 0x97, 0x73, 0x07, 0xFF, 0xFF, 0xA7, 0x72, 0x07, 0xFF, 0xFF,
  0xB7, 0x72, 0xFF, 0xFF, 0xC7, 0x72, 0xFF, 0xFF, 0xC7, 0x72, 0xFF, 0xFF, 0xC7, 0x72, 0xFF, 0xFF,
  0xC7, 0x72, 0xFF, 0xFF, 0xC7, 0x72, 0xFF, 0xFF, 0xC7, 0x72, 0xE4, 0xC4, 0xC4, 0xE7, 0x72, 0xE4,
  0xC4, 0xC4, 0xE7, 0x72, 0xE4, 0xC4, 0xC4, 0xE7, 0x72, 0xE4, 0xC4, 0xC4, 0xE7, 0x72, 0xE4, 0xFD,
  0x4E, 0x77, 0x2E, 0x4F, 0xD4, 0xE7, 0x72, 0xE4, 0xFD, 0x4E, 0x77, 0x2E, 0x4F, 0xD4, 0xE7, 0x72,
  0xFF, 0x4F, 0xF7, 0x72, 0xFF, 0x4F, 0xF7, 0x72, 0xFF, 0x4F, 0xF7, 0x72, 0xFF, 0x4F, 0xF7, 0x72,
  0xE4, 0xC4, 0xC4, 0xE7, 0x72, 0xE4, 0xC4, 0xC4, 0xE7, 0x72, 0xE4, 0xC4, 0xC4, 0xE7, 0x72, 0xE4,
  0xC4, 0xC4, 0xE7, 0x72, 0xFF, 0xFF, 0xC7, 0x72, 0xFF, 0xFF, 0xC7, 0x72, 0x0E, 0xFF, 0xFF, 0xA0,
  0xE7, 0x72, 0x0A, 0xFF, 0xFF, 0xA0, 0xA7, 0x72, 0x02, 0x0E, 0xFF, 0xFF, 0x0E, 0x02, 0x77, 0x38,
  0x12, 0xAE, 0xFF, 0xFB, 0x81, 0xEA, 0x28, 0x0B, 0x85, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_sim_card() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_sim_card_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_speaker_group 48x48, 4-bit Alpha,  RLE, 300 bytes 
static const uint8_t ic_48_hardware_speaker_group_data[] PROGMEM = {
  0x80, 0x9D, 0x50, 0x04, 0x0C, 0xFF, 0xC0, 0xC0, 0x47, 0x77, 0x40, 0x4F, 0xFF, 0x90, 0x47, 0x77,
  0x30, 0xCF, 0xFF, 0x90, 0xC7, 0x77, 0x3F, 0xFF, 0xB7, 0x77, 0x3F, 0xA0, 0xC0, 0x42, 0x04, 0x0D,
  0xFA, 0x77, 0x73, 0xF9, 0x0C, 0x60, 0xDF, 0x97, 0x77, 0x3F, 0x90, 0x46, 0x04, 0xF9, 0x77, 0x73,
  0xF9, 0x71, 0xF9, 0x77, 0x2C, 0x4F, 0x97, 0x1F, 0x97, 0x72, 0xC4, 0xF9, 0x04, 0x60, 0x4F, 0x97,
  0x72, 0xC4, 0xF9, 0x0D, 0x50, 0x10, 0xDF, 0x97, 0x72, 0xC4, 0xFA, 0x0D, 0x04, 0x20, 0x40, 0xDF,
  0xA7, 0x72, 0xC4, 0xFF, 0xFB, 0x77, 0x2C, 0x4F, 0xFF, 0xB7, 0x72, 0xC4, 0xFF, 0xFB, 0x77, 0x2C,
  0x4F, 0x98, 0x1C, 0x62, 0x28, 0x12, 0x6C, 0xF9, 0x77, 0x2C, 0x4E, 0x0E, 0x06, 0x71, 0x06, 0xF7,
  0x72, 0xC4, 0xD0, 0xE0, 0x37, 0x30, 0x3E, 0x77, 0x2C, 0x4D, 0x06, 0x30, 0x50, 0xBA, 0x0B, 0x04,
  0x30, 0x6D, 0x77, 0x2C, 0x4C, 0x0C, 0x30, 0x8E, 0x08, 0x30, 0xCC, 0x77, 0x2C, 0x4C, 0x06, 0x20,
  0x5F, 0x90, 0x42, 0x06, 0xC7, 0x72, 0xC4, 0xC0, 0x22, 0x0B, 0xF9, 0x0B, 0x20, 0x2C, 0x77, 0x2C,
  0x4C, 0x3F, 0xA0, 0xE3, 0xC7, 0x72, 0xC4, 0xC3, 0xFA, 0x0E, 0x3C, 0x77, 0x2C, 0x4C, 0x02, 0x20,
  0xBF, 0x90, 0xB2, 0x02, 0xC7, 0x72, 0xC4, 0xC0, 0x62, 0x04, 0xF9, 0x04, 0x20, 0x6C, 0x77, 0x2C,
  0x4C, 0x0C, 0x30, 0x8E, 0x08, 0x30, 0xCC, 0x77, 0x2C, 0x4D, 0x06, 0x38, 0x44, 0xBE, 0xEB, 0x43,
  0x06, 0xD7, 0x72, 0xC4, 0xE0, 0x37, 0x30, 0x3E, 0x77, 0x2C, 0x4F, 0x06, 0x71, 0x06, 0xF7, 0x72,
  0xC4, 0xF9, 0x81, 0xC6, 0x22, 0x81, 0x26, 0xCF, 0x97, 0x72, 0xC4, 0xFF, 0xFB, 0x77, 0x2C, 0x4F,
  0xFF, 0xB7, 0x72, 0xC4, 0x0C, 0xFF, 0xF9, 0x0C, 0x77, 0x2C, 0x40, 0x4F, 0xFF, 0x90, 0x47, 0x72,
  0xC5, 0x81, 0x4C, 0xEF, 0xFB, 0x0C, 0x04, 0x77, 0x3C, 0x80, 0xD0, 0x0C, 0x80, 0xD0, 0x0C, 0x80,
  0xD0, 0x0C, 0x80, 0xD0, 0x00, 0xEF, 0xFF, 0xA7, 0x77, 0x30, 0xAF, 0xFF, 0xA7, 0x77, 0x30, 0x20,
  0xEF, 0xFF, 0x97, 0x77, 0x48, 0x12, 0xAE, 0xFF, 0xE8, 0x09, 0xD4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_speaker_group() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_speaker_group_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_keyboard_arrow_left 48x48, 4-bit Alpha,  RLE, 151 bytes 
static const uint8_t ic_48_hardware_keyboard_arrow_left_data[] PROGMEM = {
  0x80, 0x98, 0xC7, 0x00, 0x01, 0x80, 0xD1, 0x08, 0x21, 0xDD, 0x18, 0x0C, 0x70, 0x01, 0x0D, 0xA0,
  0xD0, 0x18, 0x0C, 0x50, 0x01, 0x0D, 0xC0, 0x88, 0x0C, 0x40, 0x01, 0x0D, 0xC0, 0x98, 0x0C, 0x40,
  0x01, 0x0D, 0xC0, 0x98, 0x0C, 0x40, 0x01, 0x0D, 0xC0, 0x98, 0x0C, 0x40, 0x01, 0x0D, 0xC0, 0x98,
  0x0C, 0x40, 0x01, 0x0D, 0xC0, 0x98, 0x0C, 0x40, 0x01, 0x0D, 0xC0, 0x98, 0x0C, 0x40, 0x01, 0x0D,
  0xC0, 0x98, 0x0C, 0x40, 0x01, 0x0D, 0xC0, 0x98, 0x0C, 0x50, 0x0B, 0xC0, 0xD8, 0x0C, 0x60, 0x01,
  0x0D, 0xC0, 0xA8, 0x0C, 0x60, 0x01, 0x0D, 0xC0, 0xA8, 0x0C, 0x60, 0x01, 0x0D, 0xC0, 0xA8, 0x0C,
  0x60, 0x01, 0x0D, 0xC0, 0xA8, 0x0C, 0x60, 0x01, 0x0D, 0xC0, 0xA8, 0x0C, 0x60, 0x01, 0x0D, 0xC0,
  0xA8, 0x0C, 0x60, 0x01, 0x0D, 0xC0, 0xA8, 0x0C, 0x60, 0x01, 0x0D, 0xC0, 0xA8, 0x0C, 0x60, 0x01,
  0x0D, 0xC0, 0x88, 0x0C, 0x60, 0x01, 0x0D, 0xA0, 0xD0, 0x18, 0x0C, 0x70, 0x82, 0x1D, 0xD1, 0x80,
  0xD1, 0x00, 0x01, 0x80, 0x99, 0x97, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_keyboard_arrow_left() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_keyboard_arrow_left_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_laptop 48x48, 4-bit Alpha,  RLE, 153 bytes 
static const uint8_t ic_48_hardware_laptop_data[] PROGMEM = {
  0x80, 0xE8, 0x10, 0x81, 0x2A, 0xEF, 0xFF, 0xFC, 0x81, 0xEA, 0x27, 0x20, 0x20, 0xE8, 0x0C, 0x0F,
  0x0E, 0x02, 0x71, 0x0A, 0x80, 0xC2, 0xF0, 0xA7, 0x10, 0xE8, 0x0C, 0x2F, 0x0E, 0x71, 0xC7, 0x77,
  0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71,
  0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77,
  0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C,
  0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74,
  0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7,
  0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0x0E, 0x80, 0xC2, 0xF0, 0xE7, 0x10, 0xA8, 0x0C,
  0x2F, 0x0A, 0x71, 0x02, 0x0E, 0x80, 0xC0, 0xF0, 0xE0, 0x27, 0x28, 0x12, 0xAE, 0xFF, 0xFF, 0xC8,
  0x1E, 0xA2, 0x58, 0x0A, 0xF4, 0xF8, 0x0D, 0xF4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_laptop() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_laptop_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_tablet 48x48, 4-bit Alpha,  RLE, 164 bytes 
static const uint8_t ic_48_hardware_tablet_data[] PROGMEM = {
  0x80, 0xDF, 0x70, 0x81, 0x2A, 0xE8, 0x0C, 0x0F, 0x81, 0xEA, 0x25, 0x02, 0x0E, 0x80, 0xC4, 0xF0,
  0xE0, 0x24, 0x0A, 0x80, 0xC6, 0xF0, 0xA4, 0x0E, 0x80, 0xC6, 0xF0, 0xE4, 0xF9, 0x77, 0x77, 0xF9,
  0x4F, 0x97, 0x77, 0x7F, 0x94, 0xF9, 0x77, 0x77, 0xF9, 0x4F, 0x97, 0x77, 0x7F, 0x94, 0xF9, 0x77,
  0x77, 0xF9, 0x4F, 0x97, 0x77, 0x7F, 0x94, 0xF9, 0x77, 0x77, 0xF9, 0x4F, 0x97, 0x77, 0x7F, 0x94,
  0xF9, 0x77, 0x77, 0xF9, 0x4F, 0x97, 0x77, 0x7F, 0x94, 0xF9, 0x77, 0x77, 0xF9, 0x4F, 0x97, 0x77,
  0x7F, 0x94, 0xF9, 0x77, 0x77, 0xF9, 0x4F, 0x97, 0x77, 0x7F, 0x94, 0xF9, 0x77, 0x77, 0xF9, 0x4F,
  0x97, 0x77, 0x7F, 0x94, 0xF9, 0x77, 0x77, 0xF9, 0x4F, 0x97, 0x77, 0x7F, 0x94, 0xF9, 0x77, 0x77,
  0xF9, 0x4F, 0x97, 0x77, 0x7F, 0x94, 0xF9, 0x77, 0x77, 0xF9, 0x4F, 0x97, 0x77, 0x7F, 0x94, 0xF9,
  0x77, 0x77, 0xF9, 0x4F, 0x97, 0x77, 0x7F, 0x94, 0x0E, 0x80, 0xC6, 0xF0, 0xE4, 0x0A, 0x80, 0xC6,
  0xF0, 0xA4, 0x02, 0x0E, 0x80, 0xC4, 0xF0, 0xE0, 0x25, 0x81, 0x2A, 0xE8, 0x0C, 0x0F, 0x81, 0xEA,
  0x28, 0x0D, 0xF7, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_tablet() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_tablet_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_keyboard_tab 48x48, 4-bit Alpha,  RLE, 159 bytes 
static const uint8_t ic_48_hardware_keyboard_tab_data[] PROGMEM = {
  0x80, 0x99, 0xA5, 0x00, 0x07, 0x76, 0xC7, 0x77, 0x70, 0x7A, 0x07, 0x75, 0xC7, 0x77, 0x60, 0x7C,
  0x07, 0x74, 0xC7, 0x77, 0x60, 0x30, 0xEC, 0x07, 0x73, 0xC7, 0x77, 0x70, 0x30, 0xEC, 0x07, 0x72,
  0xC7, 0x77, 0x71, 0x03, 0x0E, 0xC0, 0x77, 0x1C, 0x77, 0x77, 0x20, 0x30, 0xEC, 0x07, 0x7C, 0x77,
  0x77, 0x30, 0x30, 0xEC, 0x07, 0x6C, 0x77, 0x77, 0x40, 0x30, 0xEC, 0x07, 0x5C, 0x77, 0x77, 0x50,
  0x30, 0xEC, 0x07, 0x4C, 0x6F, 0xFF, 0xFE, 0x07, 0x3C, 0x6F, 0xFF, 0xFF, 0x07, 0x2C, 0x6F, 0xFF,
  0xFF, 0x07, 0x2C, 0x6F, 0xFF, 0xFE, 0x07, 0x3C, 0x77, 0x77, 0x50, 0x30, 0xEC, 0x07, 0x4C, 0x77,
  0x77, 0x40, 0x30, 0xEC, 0x07, 0x5C, 0x77, 0x77, 0x30, 0x30, 0xEC, 0x07, 0x6C, 0x77, 0x77, 0x20,
  0x30, 0xEC, 0x07, 0x7C, 0x77, 0x77, 0x10, 0x30, 0xEC, 0x07, 0x71, 0xC7, 0x77, 0x70, 0x30, 0xEC,
  0x07, 0x72, 0xC7, 0x77, 0x60, 0x30, 0xEC, 0x07, 0x73, 0xC7, 0x77, 0x60, 0x7C, 0x07, 0x74, 0xC7,
  0x77, 0x70, 0x7A, 0x07, 0x75, 0xC7, 0x77, 0x71, 0x00, 0x77, 0x6C, 0x80, 0x99, 0x80, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_keyboard_tab() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_keyboard_tab_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_keyboard_return 48x48, 4-bit Alpha,  RLE, 143 bytes 
static const uint8_t ic_48_hardware_keyboard_return_data[] PROGMEM = {
  0x80, 0x99, 0x93, 0x00, 0x07, 0x80, 0xD1, 0x00, 0x7A, 0x07, 0x80, 0xC7, 0x00, 0x7C, 0x07, 0x77,
  0x5C, 0x77, 0x40, 0x7C, 0x0E, 0x03, 0x77, 0x5C, 0x77, 0x30, 0x7C, 0x0E, 0x03, 0x77, 0x6C, 0x77,
  0x20, 0x7C, 0x0E, 0x03, 0x77, 0x7C, 0x77, 0x10, 0x7C, 0x0E, 0x03, 0x77, 0x71, 0xC7, 0x70, 0x7C,
  0x0E, 0x03, 0x77, 0x72, 0xC7, 0x60, 0x7C, 0x0E, 0x03, 0x77, 0x73, 0xC7, 0x50, 0x7C, 0x0E, 0x03,
  0x77, 0x74, 0xC7, 0x40, 0x78, 0x0C, 0x0F, 0x73, 0x07, 0x80, 0xC1, 0xF7, 0x30, 0x78, 0x0C, 0x1F,
  0x74, 0x07, 0x80, 0xC0, 0xF7, 0x50, 0x7C, 0x0E, 0x03, 0x80, 0xC6, 0x00, 0x7C, 0x0E, 0x03, 0x80,
  0xC6, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC6, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC6, 0x00, 0x7C, 0x0E,
  0x03, 0x80, 0xC6, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC6, 0x00, 0x7C, 0x0E, 0x03, 0x80, 0xC6, 0x00,
  0x7C, 0x07, 0x80, 0xC7, 0x00, 0x7A, 0x07, 0x80, 0xD1, 0x00, 0x07, 0x80, 0x99, 0xB3, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_keyboard_return() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_keyboard_return_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_devices_other 48x48, 4-bit Alpha,  RLE, 207 bytes 
static const uint8_t ic_48_hardware_devices_other_data[] PROGMEM = {
  0x80, 0xDF, 0x70, 0x81, 0x2A, 0xE8, 0x0C, 0x0F, 0x71, 0x02, 0x0E, 0x80, 0xC2, 0xF7, 0x10, 0xA8,
  0x0C, 0x3F, 0x71, 0x0E, 0x80, 0xC3, 0xF7, 0x1C, 0x80, 0xD0, 0x0C, 0x80, 0xD0, 0x0C, 0x80, 0xD0,
  0x0C, 0x80, 0xD0, 0x0C, 0x77, 0x73, 0x04, 0x0D, 0xFD, 0x0D, 0x04, 0x4C, 0x77, 0x73, 0x0D, 0xFF,
  0x0D, 0x4C, 0x77, 0x73, 0xFF, 0xA4, 0xC7, 0x77, 0x3F, 0xFA, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C,
  0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x77, 0x73, 0xC7, 0x1C, 0x4C, 0x75,
  0xF9, 0x4C, 0x71, 0xC4, 0xC7, 0x5F, 0x94, 0xC7, 0x1C, 0x4C, 0x75, 0xF9, 0x4C, 0x71, 0xC4, 0xC7,
  0x40, 0x1F, 0x90, 0x13, 0xC7, 0x1C, 0x4C, 0x74, 0x0C, 0xF9, 0x0C, 0x3C, 0x71, 0xC4, 0xC7, 0x30,
  0x6B, 0x06, 0x20, 0x6B, 0x06, 0x2C, 0x71, 0xC4, 0xC7, 0x30, 0xCA, 0x06, 0x40, 0x6A, 0x0C, 0x2C,
  0x71, 0xC4, 0xC7, 0x3B, 0x6B, 0x2C, 0x71, 0xC4, 0xC7, 0x3B, 0x50, 0x1B, 0x2C, 0x71, 0xC4, 0xC7,
  0x30, 0xCA, 0x06, 0x40, 0x6A, 0x0C, 0x2C, 0x71, 0xC4, 0xC7, 0x30, 0x6B, 0x82, 0x60, 0x16, 0xB0,
  0x62, 0xC7, 0x1C, 0x4C, 0x74, 0x0C, 0xF9, 0x0C, 0x3C, 0x71, 0xC4, 0x0E, 0xFC, 0x30, 0x1F, 0x90,
  0x13, 0xFF, 0xA4, 0x0A, 0xFC, 0x4F, 0x94, 0xFF, 0xA4, 0x02, 0x0E, 0xFB, 0x4F, 0x94, 0x0D, 0xFF,
  0x0D, 0x58, 0x12, 0xAE, 0xF9, 0x4F, 0x94, 0x04, 0x0D, 0xFD, 0x0D, 0x04, 0x80, 0xDF, 0x60,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_devices_other() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_devices_other_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_desktop_windows 48x48, 4-bit Alpha,  RLE, 181 bytes 
static const uint8_t ic_48_hardware_desktop_windows_data[] PROGMEM = {
  0x80, 0xAF, 0x70, 0x81, 0x2A, 0xE8, 0x0C, 0x0F, 0x81, 0xEA, 0x25, 0x02, 0x0E, 0x80, 0xC4, 0xF0,
  0xE0, 0x24, 0x0A, 0x80, 0xC6, 0xF0, 0xA4, 0x0E, 0x80, 0xC6, 0xF0, 0xE4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0x0E, 0x80, 0xC6, 0xF0,
  0xE4, 0x0A, 0x80, 0xC6, 0xF0, 0xA4, 0x02, 0x0E, 0x80, 0xC4, 0xF0, 0xE0, 0x25, 0x81, 0x2A, 0xE8,
  0x0C, 0x0F, 0x81, 0xEA, 0x27, 0x77, 0x2F, 0x98, 0x0C, 0x40, 0xF9, 0x80, 0xC4, 0x0F, 0x98, 0x0C,
  0x40, 0xF9, 0x80, 0xC0, 0x0F, 0xFA, 0x77, 0x77, 0x4F, 0xFA, 0x77, 0x77, 0x4F, 0xFA, 0x77, 0x77,
  0x4F, 0xFA, 0x80, 0xB9, 0x40,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_desktop_windows() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_desktop_windows_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_memory 48x48, 4-bit Alpha,  RLE, 183 bytes 
static const uint8_t ic_48_hardware_memory_data[] PROGMEM = {
  0x80, 0xCD, 0x60, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC7, 0x77, 0x71, 0x81, 0x2A, 0xEF, 0xFE, 0x81, 0xEA, 0x27, 0x77, 0x02, 0x0E, 0xFF, 0xFB, 0x0E,
  0x02, 0x77, 0x60, 0xAF, 0xFF, 0xD0, 0xA7, 0x76, 0x0E, 0xFF, 0xFD, 0x0E, 0x77, 0x6C, 0x77, 0x6C,
  0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x2F, 0x94, 0xFD,
  0x4F, 0x97, 0x5F, 0x94, 0xFD, 0x4F, 0x97, 0x5F, 0x94, 0xFD, 0x4F, 0x97, 0x5F, 0x94, 0xFD, 0x4F,
  0x97, 0x72, 0xC4, 0xC4, 0xC4, 0xC7, 0x76, 0xC4, 0xC4, 0xC4, 0xC7, 0x76, 0xC4, 0xC4, 0xC4, 0xC7,
  0x76, 0xC4, 0xC4, 0xC4, 0xC7, 0x72, 0xF9, 0x4F, 0xD4, 0xF9, 0x75, 0xF9, 0x4F, 0xD4, 0xF9, 0x75,
  0xF9, 0x4F, 0xD4, 0xF9, 0x75, 0xF9, 0x4F, 0xD4, 0xF9, 0x77, 0x2C, 0x77, 0x6C, 0x77, 0x6C, 0x77,
  0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x6C, 0x77, 0x60, 0xEF, 0xFF, 0xD0, 0xE7, 0x76,
  0x0A, 0xFF, 0xFD, 0x0A, 0x77, 0x60, 0x20, 0xEF, 0xFF, 0xB0, 0xE0, 0x27, 0x77, 0x81, 0x2A, 0xEF,
  0xFE, 0x81, 0xEA, 0x27, 0x77, 0x71, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8,
  0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0xD6, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_memory() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_memory_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_developer_board 48x48, 4-bit Alpha,  RLE, 203 bytes 
static const uint8_t ic_48_hardware_developer_board_data[] PROGMEM = {
  0x80, 0xCC, 0x10, 0x81, 0x2A, 0xEF, 0xFF, 0xF8, 0x1E, 0xA2, 0x76, 0x02, 0x0E, 0xFF, 0xFF, 0xC0,
  0xE0, 0x27, 0x50, 0xAF, 0xFF, 0xFE, 0x0A, 0x75, 0x0E, 0xFF, 0xFF, 0xE0, 0xE7, 0x5C, 0x77, 0x77,
  0xC7, 0x5C, 0x77, 0x77, 0xC7, 0x5C, 0x77, 0x77, 0xC7, 0x5C, 0x77, 0x77, 0xC7, 0x5C, 0x4F, 0xB2,
  0xF9, 0x4F, 0x97, 0x1C, 0x4F, 0xB2, 0xF9, 0x4F, 0x97, 0x1C, 0x4F, 0xB2, 0xF9, 0x4F, 0x97, 0x1C,
  0x4F, 0xB2, 0xF9, 0x4F, 0x97, 0x1C, 0x4F, 0xB2, 0xF9, 0x4C, 0x75, 0xC4, 0xFB, 0x2F, 0x94, 0xC7,
  0x5C, 0x4F, 0xB7, 0x7C, 0x75, 0xC4, 0xFB, 0x77, 0xC7, 0x5C, 0x4F, 0xB2, 0xF9, 0x4F, 0x97, 0x1C,
  0x4F, 0xB2, 0xF9, 0x4F, 0x97, 0x1C, 0x77, 0x2F, 0x94, 0xF9, 0x71, 0xC7, 0x72, 0xF9, 0x4F, 0x97,
  0x1C, 0x4F, 0xB2, 0xF9, 0x4C, 0x75, 0xC4, 0xFB, 0x2F, 0x94, 0xC7, 0x5C, 0x4F, 0xB2, 0xF9, 0x4C,
  0x75, 0xC4, 0xFB, 0x2F, 0x94, 0xC7, 0x5C, 0x4F, 0xB2, 0xF9, 0x4F, 0x97, 0x1C, 0x4F, 0xB2, 0xF9,
  0x4F, 0x97, 0x1C, 0x4F, 0xB2, 0xF9, 0x4F, 0x97, 0x1C, 0x4F, 0xB2, 0xF9, 0x4F, 0x97, 0x1C, 0x77,
  0x77, 0xC7, 0x5C, 0x77, 0x77, 0xC7, 0x5C, 0x77, 0x77, 0xC7, 0x5C, 0x77, 0x77, 0xC7, 0x50, 0xEF,
  0xFF, 0xFE, 0x0E, 0x75, 0x0A, 0xFF, 0xFF, 0xE0, 0xA7, 0x50, 0x20, 0xEF, 0xFF, 0xFC, 0x0E, 0x02,
  0x76, 0x81, 0x2A, 0xEF, 0xFF, 0xF8, 0x1E, 0xA2, 0x80, 0xCC, 0x50,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_developer_board() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_developer_board_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_toys 48x48, 4-bit Alpha,  RLE, 286 bytes 
static const uint8_t ic_48_hardware_toys_data[] PROGMEM = {
  0x80, 0x9D, 0x70, 0x82, 0x16, 0xBD, 0x98, 0x0C, 0x60, 0x08, 0xD8, 0x0C, 0x40, 0x02, 0x0D, 0xE8,
  0x0C, 0x30, 0x02, 0x0E, 0xF8, 0x0C, 0x30, 0x0D, 0xF9, 0x80, 0xC2, 0x00, 0x8F, 0xA8, 0x0C, 0x10,
  0x01, 0xFB, 0x80, 0xC1, 0x00, 0x6F, 0xB8, 0x0C, 0x10, 0x0B, 0xFB, 0x80, 0xC1, 0x00, 0xDF, 0xB8,
  0x0C, 0x10, 0xFC, 0x80, 0xC1, 0x0F, 0xC6, 0x82, 0x16, 0xBD, 0xA8, 0x2D, 0xB6, 0x17, 0x77, 0x0D,
  0xFB, 0x50, 0x8F, 0xA0, 0xE0, 0x87, 0x76, 0x0B, 0xFB, 0x30, 0x20, 0xDF, 0xD0, 0xD0, 0x27, 0x74,
  0x06, 0xFB, 0x20, 0x20, 0xEF, 0xF0, 0xE0, 0x27, 0x73, 0x01, 0x0E, 0xFA, 0x20, 0xDF, 0xFA, 0x0D,
  0x77, 0x40, 0x8F, 0xA1, 0x08, 0xFF, 0xC0, 0x87, 0x74, 0x0D, 0xF9, 0x01, 0xFF, 0xD0, 0xE0, 0x17,
  0x73, 0x02, 0x0E, 0xF0, 0x6F, 0xFE, 0x06, 0x77, 0x40, 0x20, 0xDE, 0x0B, 0xFF, 0xE0, 0xA7, 0x76,
  0x08, 0x0E, 0xC0, 0xDF, 0xFE, 0x0D, 0x77, 0x78, 0x21, 0x6A, 0xDF, 0xFF, 0xA4, 0xFF, 0xFA, 0x82,
  0xDB, 0x61, 0x77, 0x70, 0xDF, 0xFE, 0x0D, 0xC0, 0xE0, 0x87, 0x76, 0x0B, 0xFF, 0xE0, 0xAE, 0x0D,
  0x02, 0x77, 0x40, 0x6F, 0xFE, 0x06, 0xF0, 0xE0, 0x27, 0x73, 0x01, 0x0E, 0xFF, 0xC0, 0xE0, 0x1F,
  0x90, 0xD7, 0x74, 0x08, 0xFF, 0xC0, 0x81, 0xFA, 0x08, 0x77, 0x40, 0xDF, 0xFA, 0x0C, 0x2F, 0xA0,
  0xE0, 0x17, 0x73, 0x02, 0x0E, 0xFF, 0x0E, 0x02, 0x2F, 0xB0, 0x67, 0x74, 0x02, 0x0D, 0xFD, 0x0C,
  0x02, 0x3F, 0xB0, 0xA7, 0x76, 0x08, 0x0E, 0xF9, 0x0E, 0x08, 0x5F, 0xB0, 0xD7, 0x77, 0x82, 0x16,
  0xAD, 0xA8, 0x2D, 0xA6, 0x16, 0xFC, 0x80, 0xC1, 0x0F, 0xC8, 0x0C, 0x10, 0xFB, 0x0D, 0x80, 0xC1,
  0x0F, 0xB0, 0xA8, 0x0C, 0x10, 0xFB, 0x06, 0x80, 0xC1, 0x0F, 0xA0, 0xE0, 0x18, 0x0C, 0x10, 0xFA,
  0x08, 0x80, 0xC2, 0x0F, 0x90, 0xC8, 0x0C, 0x30, 0xF0, 0xE0, 0x28, 0x0C, 0x30, 0xE0, 0xC0, 0x28,
  0x0C, 0x40, 0xC0, 0xE0, 0x88, 0x0C, 0x60, 0x98, 0x2D, 0xA6, 0x18, 0x09, 0xD7, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_toys() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_toys_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_cast_connected 48x48, 4-bit Alpha,  RLE, 293 bytes 
static const uint8_t ic_48_hardware_cast_connected_data[] PROGMEM = {
  0x80, 0xCB, 0x70, 0x81, 0x2A, 0xE8, 0x0C, 0x0F, 0x81, 0xEA, 0x25, 0x02, 0x0E, 0x80, 0xC4, 0xF0,
  0xE0, 0x24, 0x0A, 0x80, 0xC6, 0xF0, 0xA4, 0x0E, 0x80, 0xC6, 0xF0, 0xE4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC4, 0xFF, 0xFF, 0x4C,
  0x4C, 0x4F, 0xFF, 0xF4, 0xC7, 0x5F, 0xFF, 0xF4, 0xC7, 0x50, 0x60, 0xCF, 0xFF, 0xD4, 0xC7, 0x70,
  0x30, 0xAF, 0xFF, 0xB4, 0xC7, 0x72, 0x03, 0x0C, 0xFF, 0xF9, 0x4C, 0x49, 0x83, 0xED, 0xA8, 0x47,
  0x10, 0x6F, 0xFF, 0x4C, 0x4F, 0x0A, 0x04, 0x60, 0x20, 0xDF, 0xFD, 0x4C, 0x4F, 0xA0, 0xC0, 0x55,
  0x01, 0x0B, 0xFF, 0xC4, 0xC4, 0xFC, 0x0B, 0x02, 0x50, 0xBF, 0xFB, 0x4C, 0x58, 0x31, 0x25, 0x9D,
  0xE0, 0xE0, 0x55, 0x0B, 0xFF, 0xA4, 0xC7, 0x30, 0x30, 0xAE, 0x07, 0x40, 0x10, 0xDF, 0xF9, 0x4C,
  0x75, 0x02, 0x0B, 0xD0, 0x94, 0x03, 0xFF, 0x94, 0xC7, 0x70, 0x60, 0xEC, 0x07, 0x40, 0x7F, 0xF4,
  0xC4, 0x98, 0x2E, 0xB8, 0x36, 0x03, 0x0E, 0xC0, 0x54, 0x0C, 0xFE, 0x4C, 0x4D, 0x0D, 0x06, 0x50,
  0x20, 0xEB, 0x0E, 0x02, 0x30, 0x3F, 0xE4, 0xC4, 0xF0, 0xC0, 0x24, 0x03, 0xC0, 0xB4, 0x0B, 0xFD,
  0x4C, 0x4F, 0x90, 0xE0, 0x44, 0x06, 0xC0, 0x43, 0x03, 0xFD, 0x4C, 0x58, 0x11, 0x59, 0xE0, 0x44,
  0x0B, 0xB0, 0xC4, 0x0C, 0xFC, 0x4C, 0x71, 0x01, 0x0A, 0xC0, 0xE0, 0x23, 0x02, 0xC0, 0x43, 0x07,
  0xFC, 0x4C, 0x73, 0x06, 0xC0, 0xC4, 0x0A, 0xB0, 0xA7, 0x75, 0xC7, 0x40, 0x6C, 0x05, 0x30, 0x3C,
  0x77, 0x5C, 0x49, 0x0C, 0x06, 0x50, 0xAB, 0x0D, 0x40, 0xDB, 0x04, 0x77, 0x4C, 0x4B, 0x0C, 0x01,
  0x30, 0x1C, 0x03, 0x30, 0x9B, 0x08, 0x77, 0x4C, 0x4C, 0x0C, 0x40, 0x9B, 0x08, 0x30, 0x5B, 0x0A,
  0x4F, 0xFB, 0x0E, 0x4D, 0x06, 0x30, 0x5B, 0x0B, 0x30, 0x3B, 0x0D, 0x4F, 0xFB, 0x0A, 0x4D, 0x0C,
  0x30, 0x1B, 0x0E, 0x30, 0x1B, 0x0E, 0x4F, 0xFA, 0x0E, 0x02, 0x4D, 0x0E, 0x4C, 0x4C, 0x4F, 0xF8,
  0x1E, 0xA2, 0x80, 0xCB, 0x70,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_cast_connected() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_cast_connected_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_keyboard 48x48, 4-bit Alpha,  RLE, 157 bytes 
static const uint8_t ic_48_hardware_keyboard_data[] PROGMEM = {
  0x80, 0xFC, 0x10, 0x81, 0x2A, 0xEF, 0xFF, 0xFC, 0x81, 0xEA, 0x27, 0x20, 0x20, 0xE8, 0x0C, 0x0F,
  0x0E, 0x02, 0x71, 0x0A, 0x80, 0xC2, 0xF0, 0xA7, 0x10, 0xE8, 0x0C, 0x2F, 0x0E, 0x71, 0x80, 0xC4,
  0xF7, 0x18, 0x0C, 0x4F, 0x71, 0xE4, 0xA4, 0xA4, 0xA4, 0xA4, 0xE7, 0x1E, 0x4A, 0x4A, 0x4A, 0x4A,
  0x4E, 0x71, 0xE4, 0xA4, 0xA4, 0xA4, 0xA4, 0xE7, 0x1E, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x71, 0x80,
  0xC4, 0xF7, 0x18, 0x0C, 0x4F, 0x71, 0xE4, 0xA4, 0xA4, 0xA4, 0xA4, 0xE7, 0x1E, 0x4A, 0x4A, 0x4A,
  0x4A, 0x4E, 0x71, 0xE4, 0xA4, 0xA4, 0xA4, 0xA4, 0xE7, 0x1E, 0x4A, 0x4A, 0x4A, 0x4A, 0x4E, 0x71,
  0x80, 0xC4, 0xF7, 0x18, 0x0C, 0x4F, 0x71, 0x80, 0xC4, 0xF7, 0x18, 0x0C, 0x4F, 0x71, 0xFD, 0x77,
  0x2F, 0xD7, 0x1F, 0xD7, 0x72, 0xFD, 0x71, 0xFD, 0x77, 0x2F, 0xD7, 0x1F, 0xD7, 0x72, 0xFD, 0x71,
  0x0E, 0x80, 0xC2, 0xF0, 0xE7, 0x10, 0xA8, 0x0C, 0x2F, 0x0A, 0x71, 0x02, 0x0E, 0x80, 0xC0, 0xF0,
  0xE0, 0x27, 0x28, 0x12, 0xAE, 0xFF, 0xFF, 0xC8, 0x1E, 0xA2, 0x80, 0xFC, 0x10,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_keyboard() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_keyboard_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_keyboard_capslock 48x48, 4-bit Alpha,  RLE, 122 bytes 
static const uint8_t ic_48_hardware_keyboard_capslock_data[] PROGMEM = {
  0x80, 0x98, 0xC3, 0x00, 0x05, 0x80, 0xD1, 0x00, 0x5A, 0x05, 0x80, 0xC7, 0x00, 0x5C, 0x05, 0x80,
  0xC5, 0x00, 0x5E, 0x05, 0x80, 0xC3, 0x00, 0x5F, 0x90, 0x58, 0x0C, 0x10, 0x05, 0xFB, 0x05, 0x77,
  0x77, 0x70, 0x5D, 0x00, 0x5D, 0x05, 0x77, 0x77, 0x50, 0x5D, 0x05, 0x20, 0x5D, 0x05, 0x77, 0x77,
  0x30, 0x5D, 0x05, 0x40, 0x5D, 0x05, 0x77, 0x77, 0x10, 0x5D, 0x05, 0x60, 0x5D, 0x05, 0x77, 0x76,
  0x05, 0xD0, 0x57, 0x10, 0x5D, 0x05, 0x77, 0x74, 0x05, 0xD0, 0x57, 0x30, 0x5D, 0x05, 0x77, 0x73,
  0x09, 0xC0, 0x57, 0x50, 0x5C, 0x09, 0x77, 0x74, 0x0A, 0xA0, 0x57, 0x70, 0x5A, 0x09, 0x77, 0x76,
  0x09, 0x05, 0x77, 0x20, 0x50, 0x98, 0x0C, 0xE6, 0x0F, 0xFF, 0xB7, 0x77, 0x3F, 0xFF, 0xB7, 0x77,
  0x3F, 0xFF, 0xB7, 0x77, 0x3F, 0xFF, 0xB8, 0x09, 0x99, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_keyboard_capslock() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_keyboard_capslock_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_laptop_windows 48x48, 4-bit Alpha,  RLE, 161 bytes 
static const uint8_t ic_48_hardware_laptop_windows_data[] PROGMEM = {
  0x80, 0xCC, 0x10, 0x81, 0x2A, 0xEF, 0xFF, 0xFC, 0x81, 0xEA, 0x27, 0x20, 0x20, 0xE8, 0x0C, 0x0F,
  0x0E, 0x02, 0x71, 0x0A, 0x80, 0xC2, 0xF0, 0xA7, 0x10, 0xE8, 0x0C, 0x2F, 0x0E, 0x71, 0xC7, 0x77,
  0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71,
  0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77,
  0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C,
  0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74,
  0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7, 0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0xC7,
  0x77, 0x74, 0xC7, 0x1C, 0x77, 0x77, 0x4C, 0x71, 0x0E, 0x80, 0xC2, 0xF0, 0xE7, 0x10, 0xA8, 0x0C,
  0x2F, 0x0A, 0x71, 0x02, 0x0E, 0x80, 0xC0, 0xF0, 0xE0, 0x27, 0x28, 0x12, 0xAE, 0xFF, 0xFF, 0xC8,
  0x1E, 0xA2, 0x76, 0xFF, 0xFF, 0xC7, 0x72, 0xFF, 0xFF, 0xC7, 0x18, 0x0A, 0xF4, 0xF8, 0x0D, 0xF4,
  0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_laptop_windows() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_laptop_windows_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_tv 48x48, 4-bit Alpha,  RLE, 167 bytes 
static const uint8_t ic_48_hardware_tv_data[] PROGMEM = {
  0x80, 0xCB, 0x70, 0x81, 0x2A, 0xE8, 0x0C, 0x0F, 0x81, 0xEA, 0x25, 0x02, 0x0E, 0x80, 0xC4, 0xF0,
  0xE0, 0x24, 0x0A, 0x80, 0xC6, 0xF0, 0xA4, 0x0E, 0x80, 0xC6, 0xF0, 0xE4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0x0E, 0x80, 0xC6, 0xF0,
  0xE4, 0x0A, 0x80, 0xC6, 0xF0, 0xA4, 0x02, 0x0E, 0x80, 0xC4, 0xF0, 0xE0, 0x25, 0x81, 0x2A, 0xE8,
  0x0C, 0x0F, 0x81, 0xEA, 0x27, 0x75, 0xFF, 0xA7, 0x77, 0x74, 0xFF, 0xA7, 0x77, 0x74, 0xFF, 0xA7,
  0x77, 0x74, 0xFF, 0xA8, 0x0C, 0xD4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_tv() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_tv_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_gamepad 48x48, 4-bit Alpha,  RLE, 201 bytes 
static const uint8_t ic_48_hardware_gamepad_data[] PROGMEM = {
  0x80, 0xB9, 0x60, 0xFD, 0x80, 0xC0, 0x0F, 0xD8, 0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x0F, 0xD8, 0x0C,
  0x00, 0xFD, 0x80, 0xC0, 0x0F, 0xD8, 0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x0F, 0xD8, 0x0C, 0x00, 0xFD,
  0x80, 0xC0, 0x0F, 0xD8, 0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x00, 0x7F, 0xB0, 0x78, 0x0C, 0x10, 0x07,
  0xF9, 0x07, 0x80, 0xC3, 0x00, 0x7E, 0x07, 0x77, 0x73, 0xFC, 0x07, 0x50, 0x7C, 0x07, 0x50, 0x7F,
  0xC7, 0x1F, 0xD0, 0x75, 0x07, 0xA0, 0x75, 0x07, 0xFD, 0x71, 0xFE, 0x07, 0x50, 0x07, 0x50, 0x7F,
  0xE7, 0x1F, 0xF0, 0x77, 0x30, 0x7F, 0xF7, 0x1F, 0xF9, 0x07, 0x71, 0x07, 0xFF, 0x97, 0x1F, 0xFA,
  0x07, 0x60, 0x7F, 0xFA, 0x71, 0xFF, 0xA0, 0x76, 0x07, 0xFF, 0xA7, 0x1F, 0xF9, 0x07, 0x71, 0x07,
  0xFF, 0x97, 0x1F, 0xF0, 0x77, 0x30, 0x7F, 0xF7, 0x1F, 0xE0, 0x75, 0x00, 0x75, 0x07, 0xFE, 0x71,
  0xFD, 0x07, 0x50, 0x7A, 0x07, 0x50, 0x7F, 0xD7, 0x1F, 0xC0, 0x75, 0x07, 0xC0, 0x75, 0x07, 0xFC,
  0x77, 0x73, 0x07, 0xE0, 0x78, 0x0C, 0x30, 0x07, 0xF9, 0x07, 0x80, 0xC1, 0x00, 0x7F, 0xB0, 0x78,
  0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x0F, 0xD8, 0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x0F, 0xD8, 0x0C, 0x00,
  0xFD, 0x80, 0xC0, 0x0F, 0xD8, 0x0C, 0x00, 0xFD, 0x80, 0xC0, 0x0F, 0xD8, 0x0C, 0x00, 0xFD, 0x80,
  0xC0, 0x0F, 0xD8, 0x0C, 0x00, 0xFD, 0x80, 0xB9, 0x60,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_gamepad() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_gamepad_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_desktop_mac 48x48, 4-bit Alpha,  RLE, 192 bytes 
static const uint8_t ic_48_hardware_desktop_mac_data[] PROGMEM = {
  0x80, 0xAF, 0x70, 0x81, 0x2A, 0xE8, 0x0C, 0x0F, 0x81, 0xEA, 0x25, 0x02, 0x0E, 0x80, 0xC4, 0xF0,
  0xE0, 0x24, 0x0A, 0x80, 0xC6, 0xF0, 0xA4, 0x0E, 0x80, 0xC6, 0xF0, 0xE4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4,
  0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0xC8, 0x0C, 0x00, 0xC4, 0x80, 0xD0, 0xF4, 0x80,
  0xD0, 0xF4, 0x80, 0xD0, 0xF4, 0x80, 0xD0, 0xF4, 0x0E, 0x80, 0xC6, 0xF0, 0xE4, 0x0A, 0x80, 0xC6,
  0xF0, 0xA4, 0x02, 0x0E, 0x80, 0xC4, 0xF0, 0xE0, 0x25, 0x81, 0x2A, 0xE8, 0x0C, 0x0F, 0x81, 0xEA,
  0x27, 0x77, 0x10, 0x5F, 0x90, 0x58, 0x0C, 0x10, 0x01, 0x0E, 0xF9, 0x0E, 0x01, 0x80, 0xC0, 0x00,
  0xAF, 0xB0, 0xA7, 0x77, 0x77, 0x05, 0xFD, 0x05, 0x77, 0x77, 0x50, 0x10, 0xEF, 0xD0, 0xE0, 0x17,
  0x77, 0x74, 0x0A, 0xFF, 0x0A, 0x77, 0x77, 0x4F, 0xFA, 0x77, 0x77, 0x4F, 0xFA, 0x80, 0xB9, 0x40,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_desktop_mac() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_desktop_mac_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_videogame_asset 48x48, 4-bit Alpha,  RLE, 155 bytes 
static const uint8_t ic_48_hardware_videogame_asset_data[] PROGMEM = {
  0x80, 0x98, 0xF7, 0x08, 0x11, 0xAD, 0x80, 0xC0, 0xF8, 0x1D, 0xA1, 0x50, 0x10, 0xE8, 0x0C, 0x4F,
  0x0E, 0x01, 0x40, 0xA8, 0x0C, 0x6F, 0x0A, 0x40, 0xD8, 0x0C, 0x6F, 0x0D, 0x4F, 0xB4, 0xFF, 0xFF,
  0xA4, 0xFB, 0x4F, 0xFF, 0xFA, 0x4F, 0xB4, 0xFF, 0xF8, 0x27, 0x11, 0x7D, 0x4F, 0xB4, 0xFF, 0xE0,
  0x74, 0x07, 0xC4, 0xFB, 0x4F, 0xFE, 0x01, 0x40, 0x1C, 0x4F, 0xB4, 0xFF, 0xE0, 0x14, 0x01, 0xC4,
  0xC7, 0x72, 0xFF, 0x07, 0x40, 0x7C, 0x4C, 0x77, 0x2F, 0xF9, 0x82, 0x71, 0x17, 0xD4, 0xC7, 0x72,
  0xF8, 0x27, 0x11, 0x7F, 0xE4, 0xC7, 0x72, 0xE0, 0x74, 0x07, 0xFD, 0x4F, 0xB4, 0xFD, 0x01, 0x40,
  0x1F, 0xD4, 0xFB, 0x4F, 0xD0, 0x14, 0x01, 0xFD, 0x4F, 0xB4, 0xFD, 0x07, 0x40, 0x7F, 0xD4, 0xFB,
  0x4F, 0xE8, 0x27, 0x11, 0x7F, 0xE4, 0xFB, 0x4F, 0xFF, 0xFA, 0x4F, 0xB4, 0xFF, 0xFF, 0xA4, 0x0D,
  0x80, 0xC6, 0xF0, 0xD4, 0x0A, 0x80, 0xC6, 0xF0, 0xA4, 0x01, 0x0E, 0x80, 0xC4, 0xF0, 0xE0, 0x15,
  0x81, 0x1A, 0xD8, 0x0C, 0x0F, 0x81, 0xDA, 0x18, 0x09, 0x8F, 0x70,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_videogame_asset() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_videogame_asset_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_keyboard_arrow_up 48x48, 4-bit Alpha,  RLE, 121 bytes 
static const uint8_t ic_48_hardware_keyboard_arrow_up_data[] PROGMEM = {
  0x80, 0x9C, 0xA3, 0x00, 0x07, 0x80, 0xD1, 0x00, 0x7A, 0x07, 0x80, 0xC7, 0x00, 0x7C, 0x07, 0x80,
  0xC5, 0x00, 0x7E, 0x07, 0x80, 0xC3, 0x00, 0x7F, 0x90, 0x78, 0x0C, 0x10, 0x07, 0xC0, 0x0E, 0xC0,
  0x77, 0x77, 0x77, 0x07, 0xC8, 0x2E, 0x33, 0xEC, 0x07, 0x77, 0x77, 0x50, 0x7C, 0x0E, 0x03, 0x20,
  0x30, 0xEC, 0x07, 0x77, 0x77, 0x30, 0x7C, 0x0E, 0x03, 0x40, 0x30, 0xEC, 0x07, 0x77, 0x77, 0x10,
  0x7C, 0x0E, 0x03, 0x60, 0x30, 0xEC, 0x07, 0x77, 0x76, 0x07, 0xC0, 0xE0, 0x37, 0x10, 0x30, 0xEC,
  0x07, 0x77, 0x74, 0x07, 0xC0, 0xE0, 0x37, 0x30, 0x30, 0xEC, 0x07, 0x77, 0x73, 0x07, 0xB0, 0xE0,
  0x37, 0x50, 0x30, 0xEB, 0x07, 0x77, 0x74, 0x82, 0x7F, 0xE3, 0x77, 0x82, 0x3E, 0xF7, 0x77, 0x76,
  0x07, 0x03, 0x77, 0x20, 0x30, 0x78, 0x09, 0xCF, 0x20,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_keyboard_arrow_up() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_keyboard_arrow_up_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_tablet_mac 48x48, 4-bit Alpha,  RLE, 240 bytes 
static const uint8_t ic_48_hardware_tablet_mac_data[] PROGMEM = {
  0x68, 0x14, 0xBE, 0xFF, 0xFF, 0x90, 0xB0, 0x47, 0x60, 0x8F, 0xFF, 0xFE, 0x08, 0x74, 0x04, 0x80,
  0xC0, 0xF0, 0x47, 0x30, 0xB8, 0x0C, 0x0F, 0x0B, 0x73, 0x0E, 0x80, 0xC0, 0xF0, 0xE7, 0x38, 0x0C,
  0x2F, 0x73, 0xC7, 0x77, 0x72, 0xC7, 0x3C, 0x77, 0x77, 0x2C, 0x73, 0xC7, 0x77, 0x72, 0xC7, 0x3C,
  0x77, 0x77, 0x2C, 0x73, 0xC7, 0x77, 0x72, 0xC7, 0x3C, 0x77, 0x77, 0x2C, 0x73, 0xC7, 0x77, 0x72,
  0xC7, 0x3C, 0x77, 0x77, 0x2C, 0x73, 0xC7, 0x77, 0x72, 0xC7, 0x3C, 0x77, 0x77, 0x2C, 0x73, 0xC7,
  0x77, 0x72, 0xC7, 0x3C, 0x77, 0x77, 0x2C, 0x73, 0xC7, 0x77, 0x72, 0xC7, 0x3C, 0x77, 0x77, 0x2C,
  0x73, 0xC7, 0x77, 0x72, 0xC7, 0x3C, 0x77, 0x77, 0x2C, 0x73, 0xC7, 0x77, 0x72, 0xC7, 0x3C, 0x77,
  0x77, 0x2C, 0x73, 0xC7, 0x77, 0x72, 0xC7, 0x3C, 0x77, 0x77, 0x2C, 0x73, 0xC7, 0x77, 0x72, 0xC7,
  0x3C, 0x77, 0x77, 0x2C, 0x73, 0xC7, 0x77, 0x72, 0xC7, 0x3C, 0x77, 0x77, 0x2C, 0x73, 0xC7, 0x77,
  0x72, 0xC7, 0x3C, 0x77, 0x77, 0x2C, 0x73, 0xC7, 0x77, 0x72, 0xC7, 0x3C, 0x77, 0x77, 0x2C, 0x73,
  0xC7, 0x77, 0x72, 0xC7, 0x3C, 0x77, 0x77, 0x2C, 0x73, 0xC7, 0x77, 0x72, 0xC7, 0x3C, 0x77, 0x77,
  0x2C, 0x73, 0x80, 0xC2, 0xF7, 0x38, 0x0C, 0x2F, 0x73, 0xFF, 0xB0, 0x62, 0x06, 0xFF, 0xB7, 0x3F,
  0xFA, 0x06, 0x40, 0x6F, 0xFA, 0x73, 0xFF, 0xA6, 0xFF, 0xA7, 0x3F, 0xFA, 0x50, 0x1F, 0xF9, 0x0E,
  0x73, 0x0B, 0xFF, 0x90, 0x64, 0x06, 0xFF, 0x90, 0xB7, 0x30, 0x4F, 0xFA, 0x82, 0x60, 0x16, 0xFF,
  0xA0, 0x47, 0x40, 0x8F, 0xFF, 0xFE, 0x08, 0x76, 0x81, 0x4B, 0xEF, 0xFF, 0xF8, 0x1E, 0xB4, 0x71,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_tablet_mac() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_tablet_mac_data, Alpha4(color::Black));
  return value;
}

// Image file ic_48_hardware_watch 48x48, 4-bit Alpha,  RLE, 350 bytes 
static const uint8_t ic_48_hardware_watch_data[] PROGMEM = {
  0x77, 0x10, 0x1F, 0xFA, 0x01, 0x77, 0x77, 0x20, 0x3F, 0xFA, 0x03, 0x77, 0x77, 0x20, 0x6F, 0xFA,
  0x06, 0x77, 0x77, 0x20, 0x9F, 0xFA, 0x09, 0x77, 0x77, 0x20, 0xBF, 0xFA, 0x0B, 0x77, 0x77, 0x20,
  0xEF, 0xFA, 0x0E, 0x77, 0x77, 0x10, 0x1F, 0xFC, 0x01, 0x77, 0x77, 0x04, 0xFF, 0xC0, 0x37, 0x77,
  0x70, 0x6F, 0xFC, 0x06, 0x77, 0x77, 0x09, 0xFF, 0xC0, 0x97, 0x77, 0x70, 0xBF, 0xFC, 0x0B, 0x77,
  0x76, 0x02, 0x0E, 0xFF, 0xC0, 0xE0, 0x27, 0x77, 0x40, 0x30, 0xED, 0x82, 0xD8, 0x41, 0x28, 0x21,
  0x48, 0xDD, 0x0E, 0x02, 0x77, 0x72, 0x02, 0x0E, 0xC0, 0xD0, 0x57, 0x30, 0x50, 0xDC, 0x0E, 0x02,
  0x77, 0x71, 0x0D, 0xC0, 0x97, 0x70, 0x9C, 0x0C, 0x77, 0x70, 0x8C, 0x08, 0x77, 0x20, 0x8C, 0x08,
  0x77, 0x50, 0x2C, 0x09, 0x77, 0x40, 0xAC, 0x02, 0x77, 0x40, 0x9B, 0x0D, 0x77, 0x60, 0xDB, 0x09,
  0x77, 0x4C, 0x05, 0x77, 0x60, 0x5B, 0x0E, 0x77, 0x30, 0x5B, 0x0D, 0x77, 0x71, 0x0D, 0xB0, 0x57,
  0x72, 0x09, 0xB0, 0x87, 0x77, 0x10, 0x8B, 0x09, 0x77, 0x20, 0xCB, 0x04, 0x77, 0x71, 0x04, 0xB0,
  0xC7, 0x72, 0x0E, 0xB0, 0x17, 0x77, 0x10, 0x1B, 0x0E, 0x77, 0x2C, 0x77, 0x73, 0xC7, 0x72, 0xC7,
  0x77, 0x3C, 0x77, 0x20, 0xEB, 0x01, 0x77, 0x71, 0x01, 0xB0, 0xE7, 0x72, 0x0C, 0xB0, 0x47, 0x77,
  0x10, 0x4B, 0x0C, 0x77, 0x20, 0x9B, 0x08, 0x77, 0x71, 0x08, 0xB0, 0x97, 0x72, 0x05, 0xB0, 0xD7,
  0x77, 0x10, 0xDB, 0x05, 0x77, 0x30, 0xEB, 0x05, 0x77, 0x60, 0x5B, 0x0E, 0x77, 0x40, 0x9B, 0x0D,
  0x77, 0x60, 0xDB, 0x09, 0x77, 0x40, 0x2C, 0x09, 0x77, 0x40, 0xAC, 0x02, 0x77, 0x50, 0x8C, 0x08,
  0x77, 0x20, 0x8C, 0x08, 0x77, 0x70, 0xCC, 0x0A, 0x77, 0x0A, 0xC0, 0xC7, 0x77, 0x10, 0x20, 0xEC,
  0x0D, 0x05, 0x73, 0x05, 0x0D, 0xC0, 0xE0, 0x17, 0x77, 0x20, 0x20, 0xED, 0x82, 0xD8, 0x41, 0x28,
  0x21, 0x48, 0xDD, 0x0E, 0x02, 0x77, 0x74, 0x02, 0x0E, 0xFF, 0xC0, 0xE0, 0x17, 0x77, 0x60, 0xBF,
  0xFC, 0x0B, 0x77, 0x77, 0x09, 0xFF, 0xC0, 0x97, 0x77, 0x70, 0x6F, 0xFC, 0x06, 0x77, 0x77, 0x04,
  0xFF, 0xC0, 0x37, 0x77, 0x70, 0x1F, 0xFC, 0x01, 0x77, 0x77, 0x10, 0xEF, 0xFA, 0x0E, 0x77, 0x77,
  0x20, 0xBF, 0xFA, 0x0B, 0x77, 0x77, 0x20, 0x9F, 0xFA, 0x09, 0x77, 0x77, 0x20, 0x6F, 0xFA, 0x06,
  0x77, 0x77, 0x20, 0x3F, 0xFA, 0x03, 0x77, 0x77, 0x20, 0x1F, 0xFA, 0x01, 0x77, 0x10,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_48_hardware_watch() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      48, 48, ic_48_hardware_watch_data, Alpha4(color::Black));
  return value;
}

