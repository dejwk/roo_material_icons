#include "alert.h"

using namespace roo_display;

// Image file ic_round_48_alert_add_alert 48x48, 4-bit Alpha,  RLE, 191 bytes.
static const uint8_t ic_round_48_alert_add_alert_data[] PROGMEM = {
  0x77, 0x82, 0x8D, 0xD8, 0x77, 0x76, 0x08, 0xC0, 0x87, 0x77, 0x50, 0xDC, 0x0D, 0x77, 0x75, 0xE7,
  0x77, 0x30, 0x10, 0x6E, 0x06, 0x01, 0x77, 0x60, 0x10, 0x9F, 0xB0, 0x90, 0x17, 0x73, 0x04, 0x0E,
  0xFD, 0x0E, 0x04, 0x77, 0x10, 0x6F, 0xFA, 0x06, 0x76, 0x05, 0xFF, 0xC0, 0x57, 0x40, 0x10, 0xEF,
  0xFC, 0x0E, 0x01, 0x73, 0x09, 0xFF, 0xE0, 0x97, 0x20, 0x1F, 0xFF, 0x90, 0x17, 0x10, 0x6F, 0xFF,
  0x90, 0x67, 0x10, 0xAF, 0xFF, 0x90, 0xA7, 0x10, 0xDF, 0xA8, 0x2B, 0x11, 0xBF, 0xA0, 0xD7, 0x10,
  0xEF, 0xA0, 0x12, 0x01, 0xFA, 0x0E, 0x71, 0xFB, 0x4F, 0xB7, 0x1F, 0xB4, 0xFB, 0x71, 0xE0, 0xB0,
  0x17, 0x10, 0x10, 0xBE, 0x71, 0xE0, 0x17, 0x30, 0x1E, 0x71, 0xE0, 0x17, 0x30, 0x1E, 0x71, 0xE0,
  0xB0, 0x17, 0x10, 0x10, 0xBE, 0x71, 0xFB, 0x4F, 0xB7, 0x1F, 0xB4, 0xFB, 0x71, 0xFB, 0x01, 0x20,
  0x1F, 0xB7, 0x1F, 0xB8, 0x2B, 0x11, 0xBF, 0xB7, 0x1F, 0xFF, 0xB7, 0x1F, 0xFF, 0xB7, 0x1F, 0xFF,
  0xB7, 0x1F, 0xFF, 0xB4, 0x04, 0x0D, 0xFF, 0xFF, 0x81, 0xD4, 0xDF, 0xFF, 0xFA, 0x00, 0xDF, 0xFF,
  0xFA, 0x81, 0xD4, 0xDF, 0xFF, 0xF0, 0xD0, 0x48, 0x09, 0x90, 0x00, 0xDE, 0x0D, 0x77, 0x73, 0x0A,
  0xE0, 0xA7, 0x77, 0x30, 0x10, 0xEC, 0x0E, 0x01, 0x77, 0x74, 0x84, 0x1A, 0xDD, 0xA1, 0x76,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_48_alert_add_alert() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(8, 4, 39, 43), Box(0, 0, 47, 47),
      ic_round_48_alert_add_alert_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_48_alert_auto_delete 48x48, 4-bit Alpha,  RLE, 316 bytes.
static const uint8_t ic_round_48_alert_auto_delete_data[] PROGMEM = {
  0x71, 0x06, 0x0E, 0xF9, 0x0E, 0x06, 0x77, 0x77, 0x30, 0x7F, 0xD0, 0x77, 0x77, 0x20, 0x40, 0xDF,
  0xFF, 0xB0, 0xD0, 0x47, 0x72, 0x0D, 0xFF, 0xFD, 0x0D, 0x77, 0x20, 0xDF, 0xFF, 0xD0, 0xD7, 0x72,
  0x04, 0x0D, 0xFF, 0xFB, 0x0D, 0x04, 0x80, 0x9C, 0x70, 0x81, 0x1A, 0xDF, 0xFA, 0x81, 0xDA, 0x17,
  0x77, 0x01, 0x0E, 0xFF, 0xE0, 0xE0, 0x17, 0x76, 0x0A, 0xFF, 0xF9, 0x0A, 0x77, 0x60, 0xDF, 0xFF,
  0x90, 0xD7, 0x76, 0xFF, 0xFB, 0x77, 0x6F, 0xFF, 0xB7, 0x76, 0xFF, 0xFB, 0x77, 0x6F, 0xFF, 0xB7,
  0x76, 0xFF, 0xFB, 0x87, 0x8B, 0xDF, 0xED, 0xB7, 0x37, 0x4F, 0xFF, 0xFD, 0x0D, 0x05, 0x72, 0xFF,
  0xFF, 0xF0, 0xC0, 0x27, 0x80, 0xC0, 0xF0, 0xE0, 0x36, 0xFF, 0xFB, 0x81, 0xA5, 0x22, 0x81, 0x25,
  0xAE, 0x03, 0x5F, 0xFF, 0x90, 0xA0, 0x27, 0x10, 0x20, 0xAC, 0x0E, 0x02, 0x4F, 0xFF, 0x07, 0x48,
  0x18, 0xE8, 0x50, 0x7C, 0x0C, 0x4F, 0xFE, 0x07, 0x5B, 0x60, 0x7C, 0x05, 0x3F, 0xFD, 0x0A, 0x6B,
  0x70, 0xAB, 0x0D, 0x3F, 0xFD, 0x02, 0x6B, 0x70, 0x2C, 0x03, 0x2F, 0xFC, 0x0A, 0x7B, 0x71, 0x0A,
  0xB0, 0x72, 0xFF, 0xC0, 0x57, 0xB7, 0x10, 0x5B, 0x0B, 0x2F, 0xFC, 0x02, 0x7B, 0x71, 0x02, 0xB0,
  0xD2, 0xFF, 0xC7, 0x1B, 0x72, 0xB0, 0xE2, 0xFF, 0xC7, 0x1B, 0x04, 0x71, 0xB0, 0xE2, 0xFF, 0xC0,
  0x27, 0x0C, 0xB0, 0xB0, 0x25, 0x02, 0xB0, 0xD2, 0x0D, 0xFF, 0xB0, 0x57, 0x02, 0x0D, 0xC0, 0x84,
  0x05, 0xB0, 0xB2, 0x0A, 0xFF, 0xB0, 0xA7, 0x20, 0x70, 0xEB, 0x0D, 0x30, 0xAB, 0x07, 0x20, 0x10,
  0xEF, 0xFB, 0x02, 0x72, 0x01, 0x09, 0xB8, 0x12, 0x02, 0xC0, 0x33, 0x81, 0x1A, 0xDF, 0xF9, 0x0A,
  0x74, 0x81, 0x39, 0x62, 0x0A, 0xB0, 0xD7, 0x74, 0x05, 0xC0, 0x77, 0x70, 0x7C, 0x05, 0x77, 0x50,
  0xCC, 0x07, 0x75, 0x07, 0xC0, 0xC7, 0x76, 0x02, 0x0E, 0xC0, 0xA0, 0x27, 0x10, 0x20, 0xAC, 0x0E,
  0x02, 0x77, 0x70, 0x40, 0xED, 0x81, 0xA5, 0x22, 0x81, 0x25, 0xAE, 0x03, 0x77, 0x72, 0x04, 0x0E,
  0xFF, 0xA0, 0xE0, 0x37, 0x77, 0x40, 0x20, 0xCF, 0xF0, 0xC0, 0x27, 0x77, 0x70, 0x50, 0xDF, 0xB0,
  0xD0, 0x57, 0x77, 0x74, 0x89, 0x03, 0x8B, 0xDF, 0xED, 0xB7, 0x37, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_48_alert_auto_delete() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 2, 45, 45), Box(0, 0, 47, 47),
      ic_round_48_alert_auto_delete_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_48_alert_error_outline 48x48, 4-bit Alpha,  RLE, 328 bytes.
static const uint8_t ic_round_48_alert_error_outline_data[] PROGMEM = {
  0x77, 0x83, 0x37, 0xAC, 0xEA, 0x83, 0xDC, 0xA7, 0x37, 0x77, 0x48, 0x11, 0x8D, 0xFD, 0x81, 0xD8,
  0x17, 0x76, 0x01, 0x09, 0xFF, 0xC0, 0x90, 0x17, 0x73, 0x05, 0x0E, 0xFF, 0xE0, 0xE0, 0x57, 0x71,
  0x09, 0xF8, 0x2B, 0x63, 0x22, 0x82, 0x23, 0x6B, 0xF0, 0x97, 0x60, 0xBD, 0x0D, 0x06, 0x75, 0x06,
  0x0D, 0xD0, 0xA7, 0x40, 0xBD, 0x07, 0x77, 0x20, 0x7D, 0x0A, 0x72, 0x09, 0xC0, 0xD0, 0x37, 0x74,
  0x03, 0x0D, 0xC0, 0x97, 0x05, 0xC0, 0xC0, 0x17, 0x76, 0x01, 0x0C, 0xC0, 0x55, 0x01, 0x0E, 0xB0,
  0xD0, 0x17, 0x77, 0x10, 0x10, 0xDB, 0x0E, 0x01, 0x40, 0x9C, 0x03, 0x73, 0x82, 0x4D, 0xD4, 0x73,
  0x03, 0xC0, 0x93, 0x01, 0xC0, 0x77, 0x40, 0xDA, 0x0D, 0x74, 0x07, 0xC0, 0x12, 0x08, 0xB0, 0xD7,
  0x5C, 0x75, 0x0D, 0xB0, 0x82, 0x0D, 0xB0, 0x67, 0x5C, 0x75, 0x06, 0xB8, 0x1D, 0x03, 0xC7, 0x6C,
  0x76, 0xC0, 0x30, 0x7B, 0x0B, 0x76, 0xC7, 0x60, 0xBB, 0x07, 0x0A, 0xB0, 0x67, 0x6C, 0x76, 0x06,
  0xB0, 0xA0, 0xCB, 0x03, 0x76, 0xC7, 0x60, 0x3B, 0x0C, 0x0E, 0xB0, 0x27, 0x6C, 0x76, 0x02, 0xB0,
  0xEC, 0x77, 0xC7, 0x7F, 0x97, 0x70, 0xDA, 0x0D, 0x77, 0xC0, 0xEB, 0x02, 0x76, 0x82, 0x4D, 0xD4,
  0x76, 0x02, 0xB0, 0xE0, 0xCB, 0x03, 0x77, 0x77, 0x20, 0x3B, 0x0C, 0x0A, 0xB0, 0x67, 0x77, 0x72,
  0x06, 0xB0, 0xA0, 0x7B, 0x0B, 0x77, 0x77, 0x20, 0xBB, 0x07, 0x03, 0xC7, 0x77, 0x72, 0xC8, 0x13,
  0x0D, 0xB0, 0x67, 0x5C, 0x75, 0x06, 0xB0, 0xD2, 0x08, 0xB0, 0xD7, 0x5C, 0x75, 0x0D, 0xB0, 0x82,
  0x01, 0xC0, 0x77, 0x4C, 0x74, 0x07, 0xC0, 0x13, 0x09, 0xC0, 0x37, 0x3C, 0x73, 0x03, 0xC0, 0x94,
  0x01, 0x0E, 0xB0, 0xD0, 0x17, 0x77, 0x10, 0x10, 0xDB, 0x0E, 0x01, 0x50, 0x5C, 0x0C, 0x01, 0x77,
  0x60, 0x10, 0xCC, 0x05, 0x70, 0x9C, 0x0D, 0x03, 0x77, 0x40, 0x30, 0xDC, 0x09, 0x72, 0x0B, 0xD0,
  0x77, 0x72, 0x07, 0xD0, 0xA7, 0x40, 0xBD, 0x0D, 0x06, 0x75, 0x06, 0x0D, 0xD0, 0xA7, 0x60, 0x9F,
  0x82, 0xB6, 0x32, 0x28, 0x22, 0x36, 0xBF, 0x09, 0x77, 0x10, 0x50, 0xEF, 0xFE, 0x0E, 0x05, 0x77,
  0x30, 0x10, 0x9F, 0xFC, 0x09, 0x01, 0x77, 0x68, 0x11, 0x8D, 0xFD, 0x81, 0xD8, 0x17, 0x77, 0x48,
  0x33, 0x7A, 0xCE, 0xA8, 0x3D, 0xCA, 0x73, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_48_alert_error_outline() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_round_48_alert_error_outline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_48_alert_error 48x48, 4-bit Alpha,  RLE, 243 bytes.
static const uint8_t ic_round_48_alert_error_data[] PROGMEM = {
  0x77, 0x83, 0x37, 0xAC, 0xDA, 0x83, 0xDC, 0xA7, 0x37, 0x77, 0x48, 0x11, 0x8D, 0xFD, 0x81, 0xD8,
  0x17, 0x76, 0x01, 0x09, 0xFF, 0xC0, 0x90, 0x17, 0x73, 0x05, 0x0E, 0xFF, 0xE0, 0xE0, 0x57, 0x71,
  0x09, 0xFF, 0xFB, 0x09, 0x76, 0x0A, 0xFF, 0xFD, 0x0A, 0x74, 0x0A, 0xFF, 0xFF, 0x0A, 0x72, 0x09,
  0xFF, 0xFF, 0xA0, 0x97, 0x05, 0xFF, 0xFF, 0xC0, 0x55, 0x01, 0x0E, 0xFF, 0xFF, 0xC0, 0xE0, 0x14,
  0x09, 0xFF, 0x98, 0x2B, 0x11, 0xBF, 0xF9, 0x09, 0x30, 0x1F, 0xFA, 0x01, 0x20, 0x1F, 0xFA, 0x01,
  0x20, 0x8F, 0xFA, 0x4F, 0xFA, 0x08, 0x20, 0xDF, 0xFA, 0x4F, 0xFA, 0x81, 0xD0, 0x3F, 0xFB, 0x4F,
  0xFB, 0x03, 0x07, 0xFF, 0xB4, 0xFF, 0xB0, 0x70, 0xAF, 0xFB, 0x4F, 0xFB, 0x0A, 0x0C, 0xFF, 0xB4,
  0xFF, 0xB0, 0xC0, 0xEF, 0xFB, 0x4F, 0xFB, 0x0E, 0xFF, 0xC4, 0x80, 0xC0, 0xF0, 0x12, 0x01, 0xFF,
  0xC0, 0xEF, 0xFB, 0x82, 0xB1, 0x1B, 0xFF, 0xB0, 0xE0, 0xC8, 0x0C, 0x2F, 0x0C, 0x0A, 0x80, 0xC2,
  0xF0, 0xA0, 0x78, 0x0C, 0x2F, 0x07, 0x03, 0x80, 0xC2, 0xF8, 0x13, 0x0D, 0xFF, 0xA4, 0xFF, 0xA0,
  0xD2, 0x08, 0xFF, 0xA4, 0xFF, 0xA0, 0x82, 0x01, 0xFF, 0xA4, 0xFF, 0xA0, 0x13, 0x09, 0xFF, 0x94,
  0xFF, 0x90, 0x94, 0x01, 0x0E, 0xFF, 0xFF, 0xC0, 0xE0, 0x15, 0x05, 0xFF, 0xFF, 0xC0, 0x57, 0x09,
  0xFF, 0xFF, 0xA0, 0x97, 0x20, 0xAF, 0xFF, 0xF0, 0xA7, 0x40, 0xAF, 0xFF, 0xD0, 0xA7, 0x60, 0x9F,
  0xFF, 0xB0, 0x97, 0x71, 0x05, 0x0E, 0xFF, 0xE0, 0xE0, 0x57, 0x73, 0x01, 0x09, 0xFF, 0xC0, 0x90,
  0x17, 0x76, 0x81, 0x18, 0xDF, 0xD8, 0x1D, 0x81, 0x77, 0x74, 0x83, 0x37, 0xAC, 0xDA, 0x83, 0xDC,
  0xA7, 0x37, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_48_alert_error() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_round_48_alert_error_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_48_alert_notification_important 48x48, 4-bit Alpha,  RLE, 207 bytes.
static const uint8_t ic_round_48_alert_notification_important_data[] PROGMEM = {
  0x77, 0x28, 0x28, 0xDD, 0x87, 0x77, 0x73, 0x08, 0xC0, 0x87, 0x77, 0x72, 0x0D, 0xC0, 0xD7, 0x77,
  0x72, 0xE7, 0x77, 0x72, 0xE7, 0x77, 0x70, 0x30, 0x7E, 0x07, 0x03, 0x77, 0x73, 0x05, 0x0C, 0xFB,
  0x0C, 0x05, 0x77, 0x60, 0x10, 0xCF, 0xF0, 0xC0, 0x17, 0x73, 0x04, 0x0E, 0xFF, 0xA0, 0xE0, 0x47,
  0x71, 0x03, 0x0E, 0xFF, 0xC0, 0xE0, 0x37, 0x60, 0x20, 0xEF, 0xFE, 0x0E, 0x02, 0x75, 0x0B, 0xFF,
  0xF9, 0x0B, 0x74, 0x05, 0xFF, 0xFB, 0x05, 0x73, 0x0C, 0xFB, 0x82, 0xB1, 0x1B, 0xFB, 0x0C, 0x72,
  0x03, 0xFC, 0x01, 0x20, 0x1F, 0xC0, 0x37, 0x10, 0x7F, 0xC4, 0xFC, 0x07, 0x71, 0x0B, 0xFC, 0x4F,
  0xC0, 0xB7, 0x10, 0xDF, 0xC4, 0xFC, 0x0D, 0x71, 0x0E, 0xFC, 0x4F, 0xC0, 0xE7, 0x1F, 0xD0, 0x12,
  0x01, 0xFD, 0x71, 0xFD, 0x82, 0xB1, 0x1B, 0xFD, 0x71, 0xFF, 0xFF, 0x71, 0xFF, 0xFF, 0x71, 0xFF,
  0xFF, 0x71, 0xFF, 0xFF, 0x71, 0xFD, 0x4F, 0xD7, 0x1F, 0xD4, 0xFD, 0x71, 0xFD, 0x4F, 0xD7, 0x1F,
  0xD4, 0xFD, 0x71, 0xFF, 0xFF, 0x71, 0xFF, 0xFF, 0x70, 0x7F, 0xFF, 0xF0, 0x75, 0x07, 0xFF, 0xFF,
  0xA0, 0x73, 0x07, 0xFF, 0xFF, 0xC8, 0x27, 0x01, 0xEF, 0xFF, 0xFD, 0x01, 0x1F, 0xFF, 0xFE, 0x20,
  0x60, 0xEF, 0xFF, 0xFA, 0x0D, 0x05, 0x80, 0x9A, 0x30, 0x0D, 0xE0, 0xD7, 0x77, 0x70, 0x9E, 0x09,
  0x77, 0x77, 0x01, 0x0E, 0xC0, 0xE0, 0x17, 0x77, 0x71, 0x84, 0x1A, 0xDD, 0xA1, 0x77, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_48_alert_notification_important() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 3, 41, 45), Box(0, 0, 47, 47),
      ic_round_48_alert_notification_important_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_48_alert_warning_amber 48x48, 4-bit Alpha,  RLE, 255 bytes.
static const uint8_t ic_round_48_alert_warning_amber_data[] PROGMEM = {
  0x77, 0x28, 0x42, 0xAE, 0xEA, 0x27, 0x77, 0x73, 0x02, 0x0E, 0xC0, 0xE0, 0x27, 0x77, 0x72, 0x0B,
  0xE0, 0xB7, 0x77, 0x71, 0x05, 0xF9, 0x05, 0x77, 0x77, 0x0D, 0xB0, 0x0A, 0xB0, 0xD7, 0x77, 0x60,
  0x7C, 0x00, 0x2C, 0x07, 0x77, 0x74, 0x01, 0x0E, 0xB0, 0x82, 0x08, 0xB0, 0xE0, 0x17, 0x77, 0x30,
  0xAB, 0x0E, 0x40, 0xEB, 0x0A, 0x77, 0x72, 0x03, 0xC0, 0x54, 0x05, 0xC0, 0x37, 0x77, 0x10, 0xCB,
  0x0C, 0x60, 0xCB, 0x0C, 0x77, 0x70, 0x6C, 0x03, 0x60, 0x3C, 0x06, 0x77, 0x60, 0xEB, 0x0A, 0x71,
  0x0A, 0xB0, 0xE7, 0x75, 0x08, 0xB0, 0xE0, 0x12, 0x82, 0x4D, 0xD4, 0x20, 0x10, 0xEB, 0x08, 0x77,
  0x30, 0x2C, 0x07, 0x30, 0xDA, 0x0D, 0x30, 0x7C, 0x02, 0x77, 0x20, 0xAB, 0x0D, 0x4C, 0x40, 0xDB,
  0x0A, 0x77, 0x10, 0x4C, 0x05, 0x4C, 0x40, 0x5C, 0x04, 0x77, 0x0D, 0xB0, 0xB5, 0xC5, 0x0B, 0xB0,
  0xD7, 0x60, 0x6C, 0x02, 0x5C, 0x50, 0x2C, 0x06, 0x74, 0x01, 0x0E, 0xB0, 0x96, 0x0D, 0xA0, 0xD6,
  0x09, 0xB0, 0xE0, 0x17, 0x30, 0x9B, 0x0E, 0x01, 0x68, 0x24, 0xDD, 0x46, 0x01, 0x0E, 0xB0, 0x97,
  0x20, 0x2C, 0x06, 0x77, 0x40, 0x6C, 0x02, 0x71, 0x0B, 0xB0, 0xD7, 0x76, 0x0D, 0xB0, 0xB7, 0x05,
  0xC0, 0x47, 0x76, 0x04, 0xC0, 0x56, 0x0D, 0xB0, 0xA7, 0x77, 0x10, 0xAB, 0x0D, 0x50, 0x7C, 0x02,
  0x72, 0xC7, 0x20, 0x2C, 0x07, 0x30, 0x10, 0xEB, 0x08, 0x73, 0xC7, 0x30, 0x8B, 0x0E, 0x01, 0x20,
  0xAB, 0x0E, 0x74, 0xC7, 0x40, 0xEB, 0x81, 0xA0, 0x3C, 0x05, 0x74, 0xC7, 0x40, 0x5C, 0x03, 0x0B,
  0xB0, 0xC7, 0x77, 0x70, 0xCB, 0x0B, 0xC0, 0x37, 0x77, 0x70, 0x38, 0x0C, 0x6F, 0x0B, 0x80, 0xC0,
  0xF8, 0x1B, 0x2E, 0xFF, 0xFF, 0xE8, 0x4E, 0x20, 0x2A, 0xEF, 0xFF, 0xFA, 0x81, 0xEA, 0x21,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_48_alert_warning_amber() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(5, 8, 42, 41), Box(0, 0, 47, 47),
      ic_round_48_alert_warning_amber_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_48_alert_warning 48x48, 4-bit Alpha,  RLE, 191 bytes.
static const uint8_t ic_round_48_alert_warning_data[] PROGMEM = {
  0x77, 0x28, 0x42, 0xAE, 0xEA, 0x27, 0x77, 0x73, 0x02, 0x0E, 0xC0, 0xE0, 0x27, 0x77, 0x72, 0x0B,
  0xE0, 0xB7, 0x77, 0x71, 0x05, 0xF9, 0x05, 0x77, 0x77, 0x0D, 0xF9, 0x0D, 0x77, 0x76, 0x07, 0xFB,
  0x07, 0x77, 0x74, 0x01, 0x0E, 0xFB, 0x0E, 0x01, 0x77, 0x73, 0x0A, 0xFD, 0x0A, 0x77, 0x72, 0x03,
  0xFF, 0x03, 0x77, 0x71, 0x0C, 0xFF, 0x0C, 0x77, 0x70, 0x6F, 0xFA, 0x06, 0x77, 0x60, 0xEF, 0xFA,
  0x0E, 0x77, 0x50, 0x8F, 0x82, 0xB1, 0x1B, 0xF0, 0x87, 0x73, 0x02, 0xF9, 0x01, 0x20, 0x1F, 0x90,
  0x27, 0x72, 0x0A, 0xF9, 0x4F, 0x90, 0xA7, 0x71, 0x04, 0xFA, 0x4F, 0xA0, 0x47, 0x70, 0xDF, 0xA4,
  0xFA, 0x0D, 0x76, 0x06, 0xFB, 0x4F, 0xB0, 0x67, 0x40, 0x10, 0xEF, 0xB0, 0x12, 0x01, 0xFB, 0x0E,
  0x01, 0x73, 0x09, 0xFC, 0x82, 0xB1, 0x1B, 0xFC, 0x09, 0x72, 0x02, 0xFF, 0xFF, 0x02, 0x71, 0x0B,
  0xFF, 0xFF, 0x0B, 0x70, 0x5F, 0xFF, 0xFA, 0x05, 0x60, 0xDF, 0xFF, 0xFA, 0x0D, 0x50, 0x7F, 0xF4,
  0xFF, 0x07, 0x30, 0x10, 0xEF, 0xF4, 0xFF, 0x0E, 0x01, 0x20, 0xAF, 0xF9, 0x4F, 0xF9, 0x81, 0xA0,
  0x3F, 0xFA, 0x4F, 0xFA, 0x03, 0x0B, 0x80, 0xC0, 0xF0, 0xB8, 0x09, 0x90, 0xF0, 0xB8, 0x0C, 0x0F,
  0x81, 0xB2, 0xEF, 0xFF, 0xFE, 0x84, 0xE2, 0x02, 0xAE, 0xFF, 0xFF, 0xA8, 0x1E, 0xA2, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_48_alert_warning() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(5, 8, 42, 41), Box(0, 0, 47, 47),
      ic_round_48_alert_warning_data, Alpha4(color::Black));
  return value;
}
