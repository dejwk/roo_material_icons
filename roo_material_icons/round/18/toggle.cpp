#include "toggle.h"

using namespace roo_display;

// Image file ic_round_18_toggle_check_box_outline_blank 18x18, 4-bit Alpha,  RLE, 52 bytes.
static const uint8_t ic_round_18_toggle_check_box_outline_blank_data[] PROGMEM = {
  0x10, 0x28, 0x06, 0x38, 0x12, 0x02, 0xFD, 0x02, 0x04, 0x97, 0x39, 0x00, 0x49, 0x73, 0x90, 0x04,
  0x97, 0x39, 0x00, 0x49, 0x73, 0x90, 0x04, 0x97, 0x39, 0x00, 0x49, 0x73, 0x90, 0x04, 0x97, 0x39,
  0x00, 0x49, 0x73, 0x90, 0x04, 0x97, 0x39, 0x00, 0x49, 0x73, 0x90, 0x40, 0x2F, 0xD8, 0x12, 0x02,
  0x80, 0x63, 0x02, 0x10,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_check_box_outline_blank() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(2, 2, 15, 15), Box(0, 0, 17, 17),
      ic_round_18_toggle_check_box_outline_blank_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_check_box 18x18, 4-bit Alpha,  RLE, 58 bytes.
static const uint8_t ic_round_18_toggle_check_box_data[] PROGMEM = {
  0x10, 0x28, 0x06, 0x38, 0x12, 0x02, 0xFD, 0x02, 0x04, 0xFD, 0x00, 0x4F, 0xD0, 0x04, 0xF9, 0x0A,
  0xB0, 0x04, 0xF8, 0x15, 0x0D, 0xA0, 0x04, 0xB0, 0x9A, 0x81, 0x50, 0xBB, 0x00, 0x4A, 0x84, 0xE0,
  0x45, 0x0B, 0xC0, 0x04, 0xB0, 0xC2, 0x0B, 0xD0, 0x04, 0xC0, 0xD0, 0xCE, 0x00, 0x4F, 0xD0, 0x04,
  0xFD, 0x04, 0x02, 0xFD, 0x81, 0x20, 0x28, 0x06, 0x30, 0x21,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_check_box() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(2, 2, 15, 15), Box(0, 0, 17, 17),
      ic_round_18_toggle_check_box_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_indeterminate_check_box 18x18, 4-bit Alpha,  RLE, 50 bytes.
static const uint8_t ic_round_18_toggle_indeterminate_check_box_data[] PROGMEM = {
  0x10, 0x28, 0x06, 0x38, 0x12, 0x02, 0xFD, 0x02, 0x04, 0xFD, 0x00, 0x4F, 0xD0, 0x04, 0xFD, 0x00,
  0x4F, 0xD0, 0x04, 0xB8, 0x4A, 0x55, 0x55, 0xAB, 0x00, 0x4B, 0x84, 0xA5, 0x55, 0x5A, 0xB0, 0x04,
  0xFD, 0x00, 0x4F, 0xD0, 0x04, 0xFD, 0x00, 0x4F, 0xD0, 0x40, 0x2F, 0xD8, 0x12, 0x02, 0x80, 0x63,
  0x02, 0x10,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_indeterminate_check_box() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(2, 2, 15, 15), Box(0, 0, 17, 17),
      ic_round_18_toggle_indeterminate_check_box_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_radio_button_checked 18x18, 4-bit Alpha,  RLE, 103 bytes.
static const uint8_t ic_round_18_toggle_radio_button_checked_data[] PROGMEM = {
  0x70, 0x02, 0x74, 0x03, 0x0B, 0xC0, 0xB0, 0x37, 0x89, 0x09, 0xFB, 0x53, 0x35, 0xBF, 0x95, 0x81,
  0x9F, 0x56, 0x81, 0x5F, 0x93, 0x81, 0x3F, 0x52, 0x82, 0x37, 0x73, 0x28, 0x15, 0xF3, 0x20, 0x0B,
  0x20, 0x7C, 0x07, 0x20, 0x0B, 0x29, 0x81, 0x50, 0x3E, 0x89, 0x03, 0x05, 0xF0, 0x2F, 0x30, 0x7E,
  0x89, 0x07, 0x03, 0xF2, 0x2F, 0x30, 0x7E, 0x89, 0x07, 0x03, 0xF2, 0x0F, 0x50, 0x3E, 0x81, 0x30,
  0x59, 0x20, 0x0B, 0x20, 0x7C, 0x07, 0x20, 0x0B, 0x28, 0x13, 0xF5, 0x28, 0x23, 0x77, 0x32, 0x81,
  0x5F, 0x33, 0x81, 0x9F, 0x56, 0x81, 0x5F, 0x95, 0x89, 0x09, 0xFB, 0x53, 0x35, 0xBF, 0x97, 0x03,
  0x0B, 0xC0, 0xB0, 0x37, 0x40, 0x02, 0x70,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_radio_button_checked() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(1, 1, 16, 16), Box(0, 0, 17, 17),
      ic_round_18_toggle_radio_button_checked_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_radio_button_unchecked 18x18, 4-bit Alpha,  RLE, 83 bytes.
static const uint8_t ic_round_18_toggle_radio_button_unchecked_data[] PROGMEM = {
  0x70, 0x02, 0x74, 0x03, 0x0B, 0xC0, 0xB0, 0x37, 0x89, 0x09, 0xFB, 0x53, 0x35, 0xBF, 0x95, 0x81,
  0x9F, 0x56, 0x81, 0x5F, 0x93, 0x81, 0x3F, 0x57, 0x18, 0x15, 0xF3, 0x20, 0x0B, 0x73, 0x00, 0xB2,
  0x90, 0x57, 0x38, 0x45, 0xF0, 0x2F, 0x37, 0x38, 0x43, 0xF2, 0x2F, 0x37, 0x38, 0x43, 0xF2, 0x0F,
  0x57, 0x30, 0x59, 0x20, 0x0B, 0x73, 0x00, 0xB2, 0x81, 0x3F, 0x57, 0x18, 0x15, 0xF3, 0x38, 0x19,
  0xF5, 0x68, 0x15, 0xF9, 0x58, 0x90, 0x9F, 0xB5, 0x33, 0x5B, 0xF9, 0x70, 0x30, 0xBC, 0x0B, 0x03,
  0x74, 0x00, 0x27,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_radio_button_unchecked() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(1, 1, 16, 16), Box(0, 0, 17, 17),
      ic_round_18_toggle_radio_button_unchecked_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_star_border 18x18, 4-bit Alpha,  RLE, 62 bytes.
static const uint8_t ic_round_18_toggle_star_border_data[] PROGMEM = {
  0x50, 0x04, 0x73, 0x00, 0xC7, 0x20, 0x2A, 0x02, 0x71, 0x82, 0x7E, 0xE6, 0x48, 0x93, 0x57, 0x77,
  0xDA, 0xAC, 0x77, 0x74, 0x9A, 0x84, 0xBB, 0x44, 0xBB, 0xA8, 0x49, 0x07, 0xFB, 0x12, 0x82, 0x1B,
  0xF6, 0x38, 0x13, 0xEA, 0x28, 0x1A, 0xE3, 0x58, 0x4E, 0x67, 0x76, 0xE5, 0x81, 0x4F, 0xCA, 0x81,
  0xCF, 0x44, 0x86, 0x9F, 0xD3, 0x3D, 0xF9, 0x48, 0x1B, 0xB1, 0x28, 0x11, 0xBB, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star_border() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(3, 3, 14, 14), Box(0, 0, 17, 17),
      ic_round_18_toggle_star_border_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_star_border_purple500 18x18, 4-bit Alpha,  RLE, 62 bytes.
static const uint8_t ic_round_18_toggle_star_border_purple500_data[] PROGMEM = {
  0x50, 0x04, 0x73, 0x00, 0xC7, 0x20, 0x2A, 0x02, 0x71, 0x82, 0x7E, 0xE6, 0x48, 0x93, 0x57, 0x77,
  0xDA, 0xAC, 0x77, 0x74, 0x9A, 0x84, 0xBB, 0x44, 0xBB, 0xA8, 0x49, 0x07, 0xFB, 0x12, 0x82, 0x1B,
  0xF6, 0x38, 0x13, 0xEA, 0x28, 0x1A, 0xE3, 0x58, 0x4E, 0x67, 0x76, 0xE5, 0x81, 0x4F, 0xCA, 0x81,
  0xCF, 0x44, 0x86, 0x9F, 0xD3, 0x3D, 0xF9, 0x48, 0x1B, 0xB1, 0x28, 0x11, 0xBB, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star_border_purple500() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(3, 3, 14, 14), Box(0, 0, 17, 17),
      ic_round_18_toggle_star_border_purple500_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_star_half 18x18, 4-bit Alpha,  RLE, 58 bytes.
static const uint8_t ic_round_18_toggle_star_half_data[] PROGMEM = {
  0x50, 0x04, 0x73, 0x00, 0xC7, 0x20, 0x2A, 0x02, 0x71, 0x82, 0x7F, 0xE6, 0x48, 0x93, 0x57, 0x77,
  0xDF, 0xAC, 0x77, 0x74, 0x9D, 0x81, 0x4B, 0xBA, 0x81, 0x90, 0x7C, 0x18, 0x21, 0xBF, 0x63, 0x03,
  0x0E, 0xA1, 0x81, 0xAE, 0x35, 0x0E, 0xA8, 0x17, 0x6E, 0x50, 0x4C, 0x81, 0xCF, 0x44, 0x86, 0x9F,
  0xD3, 0x3D, 0xF9, 0x48, 0x1B, 0xB1, 0x28, 0x11, 0xBB, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star_half() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(3, 3, 14, 14), Box(0, 0, 17, 17),
      ic_round_18_toggle_star_half_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_star_outline 18x18, 4-bit Alpha,  RLE, 49 bytes.
static const uint8_t ic_round_18_toggle_star_outline_data[] PROGMEM = {
  0x50, 0x04, 0x73, 0x00, 0xC7, 0x20, 0x2A, 0x02, 0x71, 0x06, 0xA0, 0x74, 0x83, 0x57, 0x77, 0xDA,
  0x84, 0xD7, 0x77, 0x49, 0xFB, 0x81, 0x90, 0x7F, 0x90, 0x63, 0x03, 0x0E, 0xC0, 0xE0, 0x35, 0x0E,
  0xC0, 0xE5, 0x04, 0xE0, 0x44, 0x86, 0x9F, 0xD3, 0x3D, 0xF9, 0x48, 0x1B, 0xB1, 0x28, 0x11, 0xBB,
  0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star_outline() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(3, 3, 14, 14), Box(0, 0, 17, 17),
      ic_round_18_toggle_star_outline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_star 18x18, 4-bit Alpha,  RLE, 49 bytes.
static const uint8_t ic_round_18_toggle_star_data[] PROGMEM = {
  0x50, 0x04, 0x73, 0x00, 0xC7, 0x20, 0x2A, 0x02, 0x71, 0x06, 0xA0, 0x74, 0x83, 0x57, 0x77, 0xDA,
  0x84, 0xD7, 0x77, 0x49, 0xFB, 0x81, 0x90, 0x7F, 0x90, 0x63, 0x03, 0x0E, 0xC0, 0xE0, 0x35, 0x0E,
  0xC0, 0xE5, 0x04, 0xE0, 0x44, 0x86, 0x9F, 0xD3, 0x3D, 0xF9, 0x48, 0x1B, 0xB1, 0x28, 0x11, 0xBB,
  0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(3, 3, 14, 14), Box(0, 0, 17, 17),
      ic_round_18_toggle_star_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_star_purple500 18x18, 4-bit Alpha,  RLE, 62 bytes.
static const uint8_t ic_round_18_toggle_star_purple500_data[] PROGMEM = {
  0x50, 0x04, 0x73, 0x00, 0xC7, 0x20, 0x2A, 0x02, 0x71, 0x82, 0x7E, 0xE6, 0x48, 0x93, 0x57, 0x77,
  0xDA, 0xAC, 0x77, 0x74, 0x9A, 0x84, 0xBB, 0x44, 0xBB, 0xA8, 0x49, 0x07, 0xFB, 0x12, 0x82, 0x1B,
  0xF6, 0x38, 0x13, 0xEA, 0x28, 0x1A, 0xE3, 0x58, 0x4E, 0x67, 0x76, 0xE5, 0x81, 0x4F, 0xCA, 0x81,
  0xCF, 0x44, 0x86, 0x9F, 0xD3, 0x3D, 0xF9, 0x48, 0x1B, 0xB1, 0x28, 0x11, 0xBB, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star_purple500() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(3, 3, 14, 14), Box(0, 0, 17, 17),
      ic_round_18_toggle_star_purple500_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_toggle_off 18x18, 4-bit Alpha,  RLE, 57 bytes.
static const uint8_t ic_round_18_toggle_toggle_off_data[] PROGMEM = {
  0x20, 0x10, 0x48, 0x04, 0x70, 0x40, 0x13, 0x05, 0x0E, 0xFB, 0x82, 0xE5, 0x03, 0xA8, 0x1E, 0xCE,
  0xFA, 0x82, 0x3C, 0xFB, 0x20, 0x10, 0xDF, 0x90, 0xCA, 0x03, 0x30, 0x7F, 0xC0, 0x33, 0x07, 0xFA,
  0x81, 0xCF, 0xB2, 0x01, 0x0D, 0xF9, 0x0C, 0x03, 0xA8, 0x1E, 0xCE, 0xFA, 0x82, 0x30, 0x5E, 0xFB,
  0x0E, 0x05, 0x30, 0x10, 0x48, 0x04, 0x70, 0x40, 0x12,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_toggle_off() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(1, 4, 16, 13), Box(0, 0, 17, 17),
      ic_round_18_toggle_toggle_off_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_18_toggle_toggle_on 18x18, 4-bit Alpha,  RLE, 57 bytes.
static const uint8_t ic_round_18_toggle_toggle_on_data[] PROGMEM = {
  0x20, 0x10, 0x48, 0x04, 0x70, 0x40, 0x13, 0x05, 0x0E, 0xFB, 0x82, 0xE5, 0x03, 0xFA, 0x81, 0xEC,
  0xEA, 0x03, 0x0C, 0xF9, 0x0D, 0x01, 0x28, 0x1B, 0xFC, 0xFA, 0x07, 0x30, 0x3F, 0xC0, 0x73, 0x03,
  0xA0, 0xCF, 0x90, 0xD0, 0x12, 0x82, 0xBF, 0xC3, 0xFA, 0x81, 0xEC, 0xEA, 0x82, 0x30, 0x5E, 0xFB,
  0x0E, 0x05, 0x30, 0x10, 0x48, 0x04, 0x70, 0x40, 0x12,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_toggle_on() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(1, 4, 16, 13), Box(0, 0, 17, 17),
      ic_round_18_toggle_toggle_on_data, Alpha4(color::Black));
  return value;
}
