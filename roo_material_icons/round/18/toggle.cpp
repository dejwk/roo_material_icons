#include "toggle.h"

using namespace roo_display;

// Image file ic_round_18_toggle_check_box_outline_blank 18x18, 4-bit Alpha,  RLE, 66 bytes.
static const uint8_t ic_round_18_toggle_check_box_outline_blank_data[] PROGMEM = {
  0x80, 0xC3, 0x00, 0x28, 0x06, 0x30, 0x25, 0x02, 0xFD, 0x02, 0x40, 0x49, 0x73, 0x90, 0x44, 0x04,
  0x97, 0x39, 0x04, 0x40, 0x49, 0x73, 0x90, 0x44, 0x04, 0x97, 0x39, 0x04, 0x40, 0x49, 0x73, 0x90,
  0x44, 0x04, 0x97, 0x39, 0x04, 0x40, 0x49, 0x73, 0x90, 0x44, 0x04, 0x97, 0x39, 0x04, 0x40, 0x49,
  0x73, 0x90, 0x44, 0x04, 0x97, 0x39, 0x04, 0x40, 0x2F, 0xD0, 0x25, 0x02, 0x80, 0x63, 0x02, 0x80,
  0xC3, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_check_box_outline_blank() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_check_box_outline_blank_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_check_box 18x18, 4-bit Alpha,  RLE, 72 bytes.
static const uint8_t ic_round_18_toggle_check_box_data[] PROGMEM = {
  0x80, 0xC3, 0x00, 0x28, 0x06, 0x30, 0x25, 0x02, 0xFD, 0x02, 0x40, 0x4F, 0xD0, 0x44, 0x04, 0xFD,
  0x04, 0x40, 0x4F, 0x90, 0xAB, 0x04, 0x40, 0x4F, 0x81, 0x50, 0xDA, 0x04, 0x40, 0x4B, 0x09, 0xA8,
  0x15, 0x0B, 0xB0, 0x44, 0x04, 0xA8, 0x4E, 0x04, 0x50, 0xBC, 0x04, 0x40, 0x4B, 0x0C, 0x20, 0xBD,
  0x04, 0x40, 0x4C, 0x0D, 0x0C, 0xE0, 0x44, 0x04, 0xFD, 0x04, 0x40, 0x4F, 0xD0, 0x44, 0x02, 0xFD,
  0x02, 0x50, 0x28, 0x06, 0x30, 0x28, 0x0C, 0x30,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_check_box() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_check_box_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_indeterminate_check_box 18x18, 4-bit Alpha,  RLE, 64 bytes.
static const uint8_t ic_round_18_toggle_indeterminate_check_box_data[] PROGMEM = {
  0x80, 0xC3, 0x00, 0x28, 0x06, 0x30, 0x25, 0x02, 0xFD, 0x02, 0x40, 0x4F, 0xD0, 0x44, 0x04, 0xFD,
  0x04, 0x40, 0x4F, 0xD0, 0x44, 0x04, 0xFD, 0x04, 0x40, 0x4B, 0x84, 0xA5, 0x55, 0x5A, 0xB0, 0x44,
  0x04, 0xB8, 0x4A, 0x55, 0x55, 0xAB, 0x04, 0x40, 0x4F, 0xD0, 0x44, 0x04, 0xFD, 0x04, 0x40, 0x4F,
  0xD0, 0x44, 0x04, 0xFD, 0x04, 0x40, 0x2F, 0xD0, 0x25, 0x02, 0x80, 0x63, 0x02, 0x80, 0xC3, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_indeterminate_check_box() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_indeterminate_check_box_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_radio_button_checked 18x18, 4-bit Alpha,  RLE, 109 bytes.
static const uint8_t ic_round_18_toggle_radio_button_checked_data[] PROGMEM = {
  0x77, 0x75, 0x00, 0x27, 0x60, 0x30, 0xBC, 0x0B, 0x03, 0x72, 0x89, 0x09, 0xFB, 0x53, 0x35, 0xBF,
  0x97, 0x81, 0x9F, 0x56, 0x81, 0x5F, 0x95, 0x81, 0x3F, 0x52, 0x82, 0x37, 0x73, 0x28, 0x15, 0xF3,
  0x40, 0x0B, 0x20, 0x7C, 0x07, 0x20, 0x0B, 0x49, 0x81, 0x50, 0x3E, 0x81, 0x30, 0x59, 0x38, 0x32,
  0xF3, 0x07, 0xE8, 0x37, 0x03, 0xF2, 0x28, 0x32, 0xF3, 0x07, 0xE8, 0x37, 0x03, 0xF2, 0x39, 0x81,
  0x50, 0x3E, 0x81, 0x30, 0x59, 0x40, 0x0B, 0x20, 0x7C, 0x07, 0x20, 0x0B, 0x48, 0x13, 0xF5, 0x28,
  0x23, 0x77, 0x32, 0x81, 0x5F, 0x35, 0x81, 0x9F, 0x56, 0x81, 0x5F, 0x97, 0x89, 0x09, 0xFB, 0x53,
  0x35, 0xBF, 0x97, 0x20, 0x30, 0xBC, 0x0B, 0x03, 0x76, 0x00, 0x27, 0x77, 0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_radio_button_checked() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_radio_button_checked_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_radio_button_unchecked 18x18, 4-bit Alpha,  RLE, 90 bytes.
static const uint8_t ic_round_18_toggle_radio_button_unchecked_data[] PROGMEM = {
  0x77, 0x75, 0x00, 0x27, 0x60, 0x30, 0xBC, 0x0B, 0x03, 0x72, 0x89, 0x09, 0xFB, 0x53, 0x35, 0xBF,
  0x97, 0x81, 0x9F, 0x56, 0x81, 0x5F, 0x95, 0x81, 0x3F, 0x57, 0x18, 0x15, 0xF3, 0x40, 0x0B, 0x73,
  0x00, 0xB4, 0x90, 0x57, 0x30, 0x59, 0x38, 0x12, 0xF3, 0x73, 0x81, 0x3F, 0x22, 0x81, 0x2F, 0x37,
  0x38, 0x13, 0xF2, 0x39, 0x05, 0x73, 0x05, 0x94, 0x00, 0xB7, 0x30, 0x0B, 0x48, 0x13, 0xF5, 0x71,
  0x81, 0x5F, 0x35, 0x81, 0x9F, 0x56, 0x81, 0x5F, 0x97, 0x89, 0x09, 0xFB, 0x53, 0x35, 0xBF, 0x97,
  0x20, 0x30, 0xBC, 0x0B, 0x03, 0x76, 0x00, 0x27, 0x77, 0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_radio_button_unchecked() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_radio_button_unchecked_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_star_border 18x18, 4-bit Alpha,  RLE, 71 bytes.
static const uint8_t ic_round_18_toggle_star_border_data[] PROGMEM = {
  0x80, 0xF2, 0x00, 0x04, 0x77, 0x20, 0x0C, 0x77, 0x10, 0x2A, 0x02, 0x77, 0x82, 0x7E, 0xE6, 0x73,
  0x89, 0x25, 0x77, 0x7D, 0xAA, 0xC7, 0x77, 0x46, 0x09, 0xA8, 0x4B, 0xB4, 0x4B, 0xBA, 0x09, 0x78,
  0x27, 0xFB, 0x12, 0x82, 0x1B, 0xF6, 0x72, 0x81, 0x3E, 0xA2, 0x81, 0xAE, 0x37, 0x48, 0x4E, 0x67,
  0x76, 0xE7, 0x48, 0x14, 0xFC, 0xA8, 0x1C, 0xF4, 0x73, 0x86, 0x9F, 0xD3, 0x3D, 0xF9, 0x73, 0x81,
  0xBB, 0x12, 0x81, 0x1B, 0xB8, 0x0E, 0x70,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star_border() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_star_border_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_star_border_purple500 18x18, 4-bit Alpha,  RLE, 71 bytes.
static const uint8_t ic_round_18_toggle_star_border_purple500_data[] PROGMEM = {
  0x80, 0xF2, 0x00, 0x04, 0x77, 0x20, 0x0C, 0x77, 0x10, 0x2A, 0x02, 0x77, 0x82, 0x7E, 0xE6, 0x73,
  0x89, 0x25, 0x77, 0x7D, 0xAA, 0xC7, 0x77, 0x46, 0x09, 0xA8, 0x4B, 0xB4, 0x4B, 0xBA, 0x09, 0x78,
  0x27, 0xFB, 0x12, 0x82, 0x1B, 0xF6, 0x72, 0x81, 0x3E, 0xA2, 0x81, 0xAE, 0x37, 0x48, 0x4E, 0x67,
  0x76, 0xE7, 0x48, 0x14, 0xFC, 0xA8, 0x1C, 0xF4, 0x73, 0x86, 0x9F, 0xD3, 0x3D, 0xF9, 0x73, 0x81,
  0xBB, 0x12, 0x81, 0x1B, 0xB8, 0x0E, 0x70,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star_border_purple500() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_star_border_purple500_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_star_half 18x18, 4-bit Alpha,  RLE, 67 bytes.
static const uint8_t ic_round_18_toggle_star_half_data[] PROGMEM = {
  0x80, 0xF2, 0x00, 0x04, 0x77, 0x20, 0x0C, 0x77, 0x10, 0x2A, 0x02, 0x77, 0x82, 0x7F, 0xE6, 0x73,
  0x89, 0x25, 0x77, 0x7D, 0xFA, 0xC7, 0x77, 0x46, 0x09, 0xD8, 0x14, 0xBB, 0xA0, 0x97, 0x07, 0xC1,
  0x82, 0x1B, 0xF6, 0x72, 0x03, 0x0E, 0xA1, 0x81, 0xAE, 0x37, 0x40, 0xEA, 0x81, 0x76, 0xE7, 0x40,
  0x4C, 0x81, 0xCF, 0x47, 0x38, 0x69, 0xFD, 0x33, 0xDF, 0x97, 0x38, 0x1B, 0xB1, 0x28, 0x11, 0xBB,
  0x80, 0xE7, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star_half() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_star_half_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_star_outline 18x18, 4-bit Alpha,  RLE, 54 bytes.
static const uint8_t ic_round_18_toggle_star_outline_data[] PROGMEM = {
  0x80, 0x99, 0x40, 0x0D, 0x0B, 0x77, 0x10, 0x2A, 0x01, 0x77, 0x07, 0xA0, 0x57, 0x38, 0x32, 0x77,
  0x7D, 0xA8, 0x3C, 0x77, 0x71, 0x60, 0x7F, 0xB0, 0x57, 0x08, 0xF9, 0x07, 0x72, 0x04, 0xD0, 0xE0,
  0x37, 0x4D, 0x0D, 0x74, 0x05, 0xE0, 0x37, 0x38, 0x6A, 0xFD, 0x34, 0xEF, 0x77, 0x38, 0x17, 0xA1,
  0x28, 0x11, 0xC6, 0x80, 0xE7, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star_outline() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_star_outline_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_star 18x18, 4-bit Alpha,  RLE, 58 bytes.
static const uint8_t ic_round_18_toggle_star_data[] PROGMEM = {
  0x80, 0xF2, 0x00, 0x04, 0x77, 0x20, 0x0C, 0x77, 0x10, 0x2A, 0x02, 0x77, 0x06, 0xA0, 0x77, 0x38,
  0x35, 0x77, 0x7D, 0xA8, 0x3D, 0x77, 0x74, 0x60, 0x9F, 0xB0, 0x97, 0x07, 0xF9, 0x06, 0x72, 0x03,
  0x0E, 0xC0, 0xE0, 0x37, 0x40, 0xEC, 0x0E, 0x74, 0x04, 0xE0, 0x47, 0x38, 0x69, 0xFD, 0x33, 0xDF,
  0x97, 0x38, 0x1B, 0xB1, 0x28, 0x11, 0xBB, 0x80, 0xE7, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_star_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_star_purple500 18x18, 4-bit Alpha,  RLE, 69 bytes.
static const uint8_t ic_round_18_toggle_star_purple500_data[] PROGMEM = {
  0x80, 0x99, 0x40, 0x0D, 0x0B, 0x77, 0x10, 0x2A, 0x01, 0x77, 0x82, 0x7E, 0xF5, 0x73, 0x89, 0x22,
  0x77, 0x7D, 0x9B, 0xC7, 0x77, 0x16, 0x07, 0xA8, 0x4D, 0xD4, 0x6D, 0xDA, 0x05, 0x78, 0x18, 0xFA,
  0x38, 0x21, 0xBF, 0x77, 0x28, 0x14, 0xF9, 0x28, 0x1B, 0xE3, 0x74, 0x98, 0x36, 0x75, 0x7D, 0x74,
  0x81, 0x5F, 0xCA, 0x81, 0xCF, 0x37, 0x38, 0x6A, 0xFD, 0x34, 0xEF, 0x77, 0x38, 0x17, 0xA1, 0x28,
  0x11, 0xC6, 0x80, 0xE7, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_star_purple500() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_star_purple500_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_toggle_off 18x18, 4-bit Alpha,  RLE, 67 bytes.
static const uint8_t ic_round_18_toggle_toggle_off_data[] PROGMEM = {
  0x80, 0x98, 0x70, 0x01, 0x04, 0x80, 0x47, 0x04, 0x01, 0x50, 0x50, 0xEF, 0xB0, 0xE0, 0x53, 0x03,
  0xA8, 0x1E, 0xCE, 0xFA, 0x03, 0x28, 0x1C, 0xFB, 0x20, 0x10, 0xDF, 0x90, 0xC2, 0xA0, 0x33, 0x07,
  0xFA, 0x2A, 0x03, 0x30, 0x7F, 0xA2, 0x81, 0xCF, 0xB2, 0x01, 0x0D, 0xF9, 0x0C, 0x20, 0x3A, 0x81,
  0xEC, 0xEF, 0xA0, 0x33, 0x05, 0x0E, 0xFB, 0x0E, 0x05, 0x50, 0x10, 0x48, 0x04, 0x70, 0x40, 0x18,
  0x09, 0x87, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_toggle_off() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_toggle_off_data, Alpha4(color::Black));
  return value;
}
// Image file ic_round_18_toggle_toggle_on 18x18, 4-bit Alpha,  RLE, 67 bytes.
static const uint8_t ic_round_18_toggle_toggle_on_data[] PROGMEM = {
  0x80, 0x98, 0x70, 0x01, 0x04, 0x80, 0x47, 0x04, 0x01, 0x50, 0x50, 0xEF, 0xB0, 0xE0, 0x53, 0x03,
  0xFA, 0x81, 0xEC, 0xEA, 0x03, 0x20, 0xCF, 0x90, 0xD0, 0x12, 0x81, 0xBF, 0xC2, 0xFA, 0x07, 0x30,
  0x3A, 0x2F, 0xA0, 0x73, 0x03, 0xA2, 0x0C, 0xF9, 0x0D, 0x01, 0x28, 0x1B, 0xFC, 0x20, 0x3F, 0xA8,
  0x1E, 0xCE, 0xA0, 0x33, 0x05, 0x0E, 0xFB, 0x0E, 0x05, 0x50, 0x10, 0x48, 0x04, 0x70, 0x40, 0x18,
  0x09, 0x87, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_round_18_toggle_toggle_on() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_round_18_toggle_toggle_on_data, Alpha4(color::Black));
  return value;
}
