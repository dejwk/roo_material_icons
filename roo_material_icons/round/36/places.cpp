#include "places.h"

using namespace roo_display;

// Image file ic_round_36_places_ac_unit 36x36, 4-bit Alpha,  RLE, 252 bytes.
static const uint8_t ic_round_36_places_ac_unit_data[] PROGMEM = {
  0x76, 0x82, 0x2D, 0xD2, 0x77, 0x75, 0x07, 0xA0, 0x77, 0x76, 0x81, 0x6E, 0xA3, 0x07, 0xA0, 0x73,
  0x81, 0xAE, 0x67, 0x70, 0xCA, 0x0B, 0x20, 0x7A, 0x07, 0x20, 0xBA, 0x0C, 0x77, 0x06, 0xB8, 0x1B,
  0x07, 0xA8, 0x17, 0x0B, 0xB0, 0x67, 0x71, 0x07, 0xB0, 0xB0, 0x8A, 0x08, 0x0B, 0xB0, 0x77, 0x73,
  0x07, 0xFB, 0x07, 0x74, 0x81, 0x6C, 0x65, 0x07, 0xF9, 0x07, 0x58, 0x16, 0xC6, 0x40, 0xEA, 0x07,
  0x50, 0x7E, 0x07, 0x50, 0x7A, 0x0E, 0x40, 0xAB, 0x07, 0x50, 0x7C, 0x07, 0x50, 0x7B, 0x0A, 0x50,
  0xBB, 0x07, 0x50, 0x9A, 0x09, 0x50, 0x7B, 0x0B, 0x70, 0xBB, 0x07, 0x40, 0x7A, 0x07, 0x40, 0x7B,
  0x0B, 0x72, 0x0B, 0xB0, 0x73, 0x07, 0xA0, 0x73, 0x07, 0xB0, 0xB5, 0x84, 0x27, 0x77, 0x78, 0xC8,
  0x29, 0x77, 0xBA, 0x82, 0xB7, 0x79, 0xC8, 0x58, 0x77, 0x77, 0x2D, 0xFF, 0xFF, 0x00, 0xDF, 0xFF,
  0xF8, 0x5D, 0x27, 0x77, 0x78, 0xC8, 0x29, 0x77, 0xBA, 0x82, 0xB7, 0x79, 0xC8, 0x48, 0x77, 0x77,
  0x25, 0x0B, 0xB0, 0x73, 0x07, 0xA0, 0x73, 0x07, 0xB0, 0xB7, 0x20, 0xBB, 0x07, 0x40, 0x7A, 0x07,
  0x40, 0x7B, 0x0B, 0x70, 0xBB, 0x07, 0x50, 0x9A, 0x09, 0x50, 0x7B, 0x0B, 0x50, 0xAB, 0x07, 0x50,
  0x7C, 0x07, 0x50, 0x7B, 0x0A, 0x40, 0xEA, 0x07, 0x50, 0x7E, 0x07, 0x50, 0x7A, 0x0E, 0x48, 0x16,
  0xC6, 0x50, 0x7F, 0x90, 0x75, 0x81, 0x6C, 0x67, 0x40, 0x7F, 0xB0, 0x77, 0x73, 0x07, 0xB0, 0xB0,
  0x8A, 0x08, 0x0B, 0xB0, 0x77, 0x71, 0x06, 0xB8, 0x1B, 0x07, 0xA8, 0x17, 0x0B, 0xB0, 0x67, 0x70,
  0xCA, 0x0B, 0x20, 0x7A, 0x07, 0x20, 0xBA, 0x0C, 0x77, 0x81, 0x6E, 0xA3, 0x07, 0xA0, 0x73, 0x81,
  0xAE, 0x67, 0x76, 0x07, 0xA0, 0x77, 0x77, 0x58, 0x22, 0xDD, 0x27, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_ac_unit() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_round_36_places_ac_unit_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_airport_shuttle 36x36, 4-bit Alpha,  RLE, 204 bytes.
static const uint8_t ic_round_36_places_airport_shuttle_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x07, 0x06, 0x02, 0x73, 0x09, 0xFF, 0xFA, 0x07, 0x71, 0x04, 0xFF, 0xFC, 0x07,
  0x70, 0x7B, 0x84, 0x97, 0x77, 0x7B, 0xA0, 0xB8, 0x01, 0x70, 0xBA, 0x81, 0xB7, 0xDB, 0x07, 0x60,
  0x7A, 0x09, 0x50, 0x7A, 0x07, 0x50, 0x7A, 0x82, 0x70, 0x1D, 0xB0, 0x75, 0x07, 0xA0, 0x75, 0x07,
  0xA0, 0x75, 0x07, 0xA0, 0x72, 0x01, 0x0D, 0xB0, 0x74, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x75, 0x07,
  0xA0, 0x73, 0x01, 0x0D, 0xB0, 0x73, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x74, 0x01,
  0x0D, 0xB0, 0x72, 0x07, 0xA0, 0x95, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x75, 0x01, 0x0D, 0xB8, 0x17,
  0x07, 0xB8, 0x49, 0x77, 0x77, 0xBA, 0x0B, 0x80, 0x17, 0x0B, 0xA0, 0xB8, 0x02, 0x70, 0x9C, 0x02,
  0x07, 0xFF, 0xFF, 0xC0, 0x60, 0x7F, 0xFF, 0xFC, 0x00, 0x7F, 0xFF, 0xFC, 0x00, 0x7F, 0xFF, 0xFC,
  0x07, 0x06, 0xFF, 0xFF, 0xC8, 0x16, 0x1E, 0xC8, 0x2C, 0x33, 0xCF, 0xF8, 0x2C, 0x33, 0xCC, 0x83,
  0xE1, 0x03, 0xBB, 0x03, 0x20, 0x3F, 0xF0, 0x32, 0x03, 0xB0, 0xB0, 0x34, 0x06, 0xA0, 0x32, 0x03,
  0xA0, 0x67, 0x10, 0x6A, 0x03, 0x20, 0x3A, 0x06, 0x60, 0x2A, 0x82, 0xC3, 0x3C, 0xA0, 0x27, 0x10,
  0x2A, 0x82, 0xC3, 0x3C, 0xA0, 0x27, 0x09, 0xE0, 0x97, 0x30, 0x9E, 0x09, 0x72, 0x0A, 0xC0, 0xA7,
  0x50, 0xAC, 0x0A, 0x74, 0x82, 0x26, 0x62, 0x77, 0x82, 0x26, 0x62, 0x60,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_airport_shuttle() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 7, 34, 28), Box(0, 0, 35, 35),
      ic_round_36_places_airport_shuttle_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_all_inclusive 36x36, 4-bit Alpha,  RLE, 192 bytes.
static const uint8_t ic_round_36_places_all_inclusive_data[] PROGMEM = {
  0x48, 0x13, 0x9D, 0xA8, 0x1E, 0xA4, 0x75, 0x81, 0x4A, 0xDA, 0x81, 0xC9, 0x27, 0x09, 0xF9, 0x0B,
  0x01, 0x71, 0x01, 0x0B, 0xF9, 0x09, 0x50, 0xBF, 0xB0, 0xD0, 0x26, 0x02, 0x0D, 0xFB, 0x0B, 0x30,
  0x9B, 0x0A, 0x03, 0x20, 0x20, 0x8B, 0x0C, 0x50, 0x30, 0xEB, 0x08, 0x02, 0x20, 0x30, 0xAB, 0x81,
  0x80, 0x2B, 0x07, 0x68, 0x24, 0xEF, 0xC4, 0x05, 0xB0, 0xE0, 0x46, 0x07, 0xB0, 0x20, 0x8A, 0x0B,
  0x71, 0x81, 0x26, 0x13, 0x07, 0xB0, 0xD0, 0x27, 0x10, 0xAA, 0x08, 0x0C, 0xA0, 0x47, 0x60, 0x8B,
  0x0C, 0x01, 0x72, 0x04, 0xA0, 0xC0, 0xEA, 0x01, 0x75, 0x0A, 0xB0, 0xB0, 0x17, 0x30, 0x1A, 0x00,
  0xEA, 0x01, 0x73, 0x01, 0x0B, 0xB0, 0xA7, 0x50, 0x1A, 0x0E, 0x0C, 0xA0, 0x47, 0x20, 0x10, 0xCB,
  0x09, 0x76, 0x04, 0xA0, 0xC0, 0x8A, 0x0A, 0x71, 0x02, 0x0D, 0xB0, 0x73, 0x81, 0x16, 0x27, 0x10,
  0xBA, 0x08, 0x02, 0xB0, 0x76, 0x04, 0x0E, 0xB0, 0x54, 0x82, 0xCF, 0xE4, 0x60, 0x7B, 0x81, 0x20,
  0x9B, 0x0A, 0x03, 0x20, 0x20, 0x8B, 0x0E, 0x03, 0x50, 0xDB, 0x08, 0x02, 0x20, 0x30, 0xAB, 0x08,
  0x30, 0xBF, 0xB0, 0xD0, 0x26, 0x02, 0x0D, 0xFB, 0x0B, 0x50, 0x9F, 0x90, 0xB0, 0x17, 0x10, 0x10,
  0xBF, 0x90, 0x87, 0x81, 0x39, 0xDA, 0x81, 0xEA, 0x47, 0x58, 0x14, 0xAE, 0xA8, 0x1D, 0x82, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_all_inclusive() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(0, 10, 35, 25), Box(0, 0, 35, 35),
      ic_round_36_places_all_inclusive_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_apartment 36x36, 4-bit Alpha,  RLE, 264 bytes.
static const uint8_t ic_round_36_places_apartment_data[] PROGMEM = {
  0x71, 0x04, 0x80, 0x67, 0x04, 0x77, 0x10, 0x9F, 0xD0, 0x97, 0x60, 0x4F, 0xF0, 0x47, 0x50, 0x7A,
  0x82, 0xB7, 0x7B, 0xA8, 0x2B, 0x77, 0xBA, 0x07, 0x75, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x77, 0x50, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x71, 0x83, 0x47, 0x77, 0xBA,
  0x82, 0xB7, 0x7B, 0xA8, 0x2B, 0x77, 0xBA, 0x07, 0x70, 0x9F, 0xFD, 0x07, 0x60, 0x4F, 0xFE, 0x07,
  0x60, 0x7A, 0x82, 0xB7, 0x7B, 0xA8, 0x2B, 0x77, 0xBA, 0x82, 0xB7, 0x7B, 0xA0, 0x76, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x72, 0x07, 0xA0, 0x76, 0x07, 0xA8, 0x2B, 0x77, 0xBA, 0x82, 0xB7, 0x7B, 0xA8, 0x2B,
  0x77, 0xBA, 0x83, 0xB7, 0x77, 0x42, 0x07, 0xFF, 0xFC, 0x81, 0x90, 0x7F, 0xFF, 0xD0, 0x40, 0x7A,
  0x82, 0xB7, 0x7B, 0xA8, 0x2B, 0x77, 0xBA, 0x82, 0xB7, 0x7B, 0xA8, 0x2B, 0x77, 0xBA, 0x00, 0x7A,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x07, 0x20,
  0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x00, 0x7A, 0x82, 0xB7, 0x7B, 0xA8,
  0x2B, 0x77, 0xBA, 0x82, 0xB7, 0x7B, 0xA8, 0x2B, 0x77, 0xBA, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF,
  0xFD, 0x00, 0x7A, 0x82, 0xB7, 0x7B, 0xD8, 0x2B, 0x77, 0xBD, 0x82, 0xB7, 0x7B, 0xA0, 0x07, 0xA0,
  0x72, 0x07, 0xD0, 0x72, 0x07, 0xD0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xD0, 0x72, 0x07,
  0xD0, 0x72, 0x07, 0xA0, 0x07, 0xA8, 0x2B, 0x77, 0xBD, 0x07, 0x20, 0x7D, 0x82, 0xB7, 0x7B, 0xA0,
  0x70, 0x4F, 0xC0, 0x72, 0x07, 0xFC, 0x81, 0x40, 0x9F, 0xB0, 0x52, 0x05, 0xFB, 0x09, 0x30, 0x48,
  0x04, 0x70, 0x54, 0x05, 0x80, 0x47, 0x04, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_apartment() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_round_36_places_apartment_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_baby_changing_station 36x36, 4-bit Alpha,  RLE, 207 bytes.
static const uint8_t ic_round_36_places_baby_changing_station_data[] PROGMEM = {
  0x68, 0x21, 0x66, 0x17, 0x77, 0x20, 0x30, 0xEA, 0x0E, 0x03, 0x77, 0x71, 0x0B, 0xC0, 0xB7, 0x77,
  0x10, 0xEC, 0x0E, 0x77, 0x71, 0x0B, 0xC0, 0xB7, 0x77, 0x10, 0x30, 0xEA, 0x0E, 0x03, 0x77, 0x72,
  0x82, 0x16, 0x61, 0x80, 0xD5, 0x08, 0x41, 0xAE, 0xC7, 0x17, 0x77, 0x10, 0xCD, 0x09, 0x02, 0x77,
  0x50, 0x4F, 0x90, 0xB0, 0x47, 0x73, 0x09, 0xFE, 0x08, 0x76, 0x0E, 0xD0, 0x80, 0xAE, 0x0E, 0x75,
  0x04, 0xE8, 0x31, 0x01, 0x8D, 0xB0, 0x87, 0x50, 0x9D, 0x0B, 0x77, 0x70, 0xED, 0x05, 0x28, 0x35,
  0x77, 0x75, 0x40, 0x05, 0x70, 0x4E, 0x81, 0x10, 0x5D, 0x05, 0x20, 0x5A, 0x05, 0x60, 0x7D, 0x0B,
  0x20, 0x5D, 0x07, 0x20, 0x7A, 0x07, 0x60, 0x7D, 0x07, 0x38, 0x15, 0x7B, 0xA8, 0x2B, 0x77, 0xBA,
  0x07, 0x28, 0x34, 0x61, 0x07, 0xD0, 0x75, 0x07, 0xF9, 0x81, 0x70, 0x8A, 0x81, 0xE1, 0x7D, 0x07,
  0x50, 0x6F, 0x98, 0x16, 0x0E, 0xB0, 0x60, 0x7D, 0x07, 0x50, 0x10, 0xEE, 0x82, 0xE1, 0x0C, 0xB0,
  0x40, 0x7D, 0x07, 0x60, 0x30, 0xBC, 0x0B, 0x03, 0x28, 0x43, 0xCE, 0x80, 0x7D, 0x07, 0x77, 0x70,
  0x7D, 0x07, 0x30, 0x58, 0x09, 0x37, 0x81, 0x50, 0x7D, 0x07, 0x20, 0x5F, 0xFB, 0x05, 0x07, 0xD0,
  0x72, 0x05, 0xFF, 0xB0, 0x50, 0x7D, 0x07, 0x30, 0x58, 0x09, 0x37, 0x81, 0x50, 0x7D, 0x07, 0x77,
  0x70, 0x7D, 0x07, 0x77, 0x70, 0x7D, 0x07, 0x77, 0x70, 0x20, 0xDB, 0x0D, 0x02, 0x77, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_baby_changing_station() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 1, 31, 32), Box(0, 0, 35, 35),
      ic_round_36_places_baby_changing_station_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_backpack 36x36, 4-bit Alpha,  RLE, 83 bytes.
static const uint8_t ic_round_36_places_backpack_data[] PROGMEM = {
  0x58, 0x28, 0xEC, 0x36, 0x82, 0x3C, 0xE8, 0x72, 0x04, 0xB0, 0xC6, 0x0C, 0xB0, 0x47, 0x10, 0x7C,
  0x6C, 0x07, 0x70, 0x50, 0xDF, 0xF0, 0xD0, 0x54, 0x01, 0x0B, 0xFF, 0xC0, 0xB0, 0x12, 0x0C, 0xFF,
  0xE8, 0x1C, 0x05, 0xFF, 0xF9, 0x05, 0x0B, 0xFF, 0xF9, 0x0B, 0x0E, 0xFF, 0xF9, 0x0E, 0x80, 0xA9,
  0x7F, 0x07, 0x77, 0x20, 0x7E, 0x77, 0x4E, 0x07, 0x77, 0x3F, 0xFF, 0x3F, 0xFF, 0x3F, 0xFF, 0x81,
  0x70, 0x78, 0x0A, 0x97, 0xF0, 0xDF, 0xFF, 0x90, 0xD0, 0x8F, 0xFF, 0x98, 0x28, 0x08, 0xDF, 0xFC,
  0x0D, 0x08, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_backpack() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 3, 29, 32), Box(0, 0, 35, 35),
      ic_round_36_places_backpack_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_balcony 36x36, 4-bit Alpha,  RLE, 263 bytes.
static const uint8_t ic_round_36_places_balcony_data[] PROGMEM = {
  0x72, 0x89, 0x01, 0x6A, 0xDE, 0xED, 0xA6, 0x17, 0x72, 0x01, 0x09, 0xFB, 0x09, 0x01, 0x76, 0x04,
  0x0E, 0xFD, 0x0E, 0x04, 0x74, 0x06, 0xC8, 0x1B, 0x59, 0xA8, 0x19, 0x5B, 0xC0, 0x67, 0x20, 0x4B,
  0x0D, 0x03, 0x20, 0x7A, 0x07, 0x20, 0x30, 0xDB, 0x04, 0x70, 0x10, 0xEA, 0x0B, 0x40, 0x7A, 0x07,
  0x40, 0xBA, 0x0E, 0x01, 0x60, 0x9A, 0x0D, 0x50, 0x7A, 0x07, 0x50, 0xDA, 0x09, 0x50, 0x1B, 0x03,
  0x50, 0x7A, 0x07, 0x50, 0x3B, 0x01, 0x40, 0x6A, 0x0B, 0x60, 0x7A, 0x07, 0x60, 0xBA, 0x06, 0x40,
  0xBA, 0x06, 0x60, 0x7A, 0x07, 0x60, 0x5A, 0x0B, 0x40, 0xDA, 0x02, 0x60, 0x7A, 0x07, 0x60, 0x2A,
  0x0D, 0x40, 0xEA, 0x70, 0x7A, 0x07, 0x7A, 0x0E, 0x4B, 0x38, 0x38, 0xE8, 0x07, 0xA8, 0x37, 0x08,
  0xE8, 0x3B, 0x4B, 0x38, 0x3E, 0xFE, 0x07, 0xA8, 0x37, 0x0E, 0xFE, 0x3B, 0x4B, 0x38, 0x38, 0xE8,
  0x07, 0xA8, 0x37, 0x08, 0xE8, 0x3B, 0x4B, 0x70, 0x7A, 0x07, 0x7B, 0x4B, 0x70, 0x7A, 0x07, 0x7B,
  0x4B, 0x70, 0x7A, 0x07, 0x7B, 0x30, 0x3F, 0xFF, 0xB8, 0x23, 0x01, 0xEF, 0xFF, 0xB8, 0x1E, 0x16,
  0xFF, 0xFD, 0x06, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07,
  0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x70, 0x6F, 0xFF, 0xD8, 0x16, 0x1E, 0xFF, 0xFB, 0x83,
  0xE1, 0x03, 0xBF, 0xFF, 0x90, 0xB0, 0x31,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_balcony() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 3, 31, 32), Box(0, 0, 35, 35),
      ic_round_36_places_balcony_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_bathtub 36x36, 4-bit Alpha,  RLE, 125 bytes.
static const uint8_t ic_round_36_places_bathtub_data[] PROGMEM = {
  0x77, 0x68, 0x33, 0xBE, 0xD8, 0x77, 0x73, 0x07, 0xD0, 0xD7, 0x77, 0x10, 0x7F, 0x08, 0x77, 0x48,
  0x12, 0xDE, 0xB8, 0x1B, 0x15, 0xA0, 0xD7, 0x28, 0x14, 0x74, 0x70, 0x7B, 0x0B, 0x3B, 0x71, 0x09,
  0xB0, 0x97, 0x07, 0xA0, 0x13, 0xB7, 0x04, 0xD0, 0x47, 0x07, 0x94, 0xB7, 0x06, 0xD0, 0x67, 0x10,
  0x44, 0xB7, 0x04, 0xD0, 0x47, 0x6B, 0x71, 0x09, 0xB0, 0x97, 0x7B, 0x72, 0x81, 0x47, 0x47, 0x71,
  0xB7, 0x77, 0x6B, 0x71, 0x83, 0x19, 0xEE, 0x87, 0x7B, 0x71, 0x0C, 0xC0, 0xB7, 0x6B, 0x70, 0x5E,
  0x0A, 0x75, 0xB7, 0x07, 0xF0, 0x97, 0x4B, 0x38, 0x32, 0x77, 0x7B, 0xF9, 0x0B, 0x80, 0x67, 0xB8,
  0x27, 0x72, 0xDF, 0xFF, 0xF0, 0xD8, 0x0B, 0xD4, 0xF0, 0xBF, 0xFF, 0xF8, 0x1B, 0x3E, 0xFF, 0xFD,
  0x83, 0xE3, 0x01, 0x6F, 0xFF, 0xB0, 0x60, 0x14, 0x08, 0xFF, 0xF9, 0x08, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_bathtub() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_round_36_places_bathtub_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_beach_access 36x36, 4-bit Alpha,  RLE, 205 bytes.
static const uint8_t ic_round_36_places_beach_access_data[] PROGMEM = {
  0x75, 0x85, 0x14, 0x57, 0x75, 0x37, 0x73, 0x81, 0x28, 0xDF, 0x81, 0xEA, 0x47, 0x50, 0x10, 0x9F,
  0xE0, 0xC0, 0x47, 0x20, 0x50, 0xEF, 0xFA, 0x05, 0x78, 0x90, 0x6A, 0x53, 0x11, 0x25, 0x7B, 0xFA,
  0x0C, 0x60, 0x6B, 0x82, 0xEB, 0x72, 0x38, 0x11, 0x6D, 0xE0, 0xC5, 0x05, 0x0A, 0xF0, 0xB0, 0x44,
  0x07, 0x0E, 0xC0, 0x84, 0x81, 0x1E, 0x6F, 0xA0, 0xB0, 0x23, 0x02, 0x0C, 0xA0, 0xC5, 0x82, 0xAF,
  0x3E, 0xFB, 0x07, 0x48, 0x1A, 0xC1, 0x40, 0x2A, 0x02, 0x0B, 0xFC, 0x0B, 0x01, 0x72, 0x08, 0xA0,
  0x20, 0x7F, 0xD0, 0xD0, 0x27, 0x10, 0xDA, 0x03, 0x02, 0xFE, 0x0B, 0x70, 0x1B, 0x81, 0x50, 0xBF,
  0xC0, 0xC0, 0x17, 0x04, 0xB8, 0x17, 0x04, 0xFB, 0x0C, 0x01, 0x71, 0x06, 0xB0, 0xB2, 0x0B, 0xF9,
  0x0C, 0x01, 0x72, 0x07, 0xC8, 0x11, 0x02, 0xF8, 0x1C, 0x11, 0x72, 0x07, 0xC0, 0x62, 0x07, 0xD8,
  0x3C, 0x11, 0xD9, 0x71, 0x05, 0xC0, 0xD3, 0x0B, 0xB8, 0x2C, 0x11, 0xDA, 0x09, 0x70, 0x3D, 0x07,
  0x28, 0x31, 0xDF, 0xC1, 0x20, 0x9B, 0x09, 0x70, 0xEC, 0x0E, 0x02, 0x28, 0x12, 0xB1, 0x40, 0x9B,
  0x09, 0x60, 0xAD, 0x0C, 0x73, 0x09, 0xB0, 0x95, 0x04, 0xE0, 0xA7, 0x30, 0x9B, 0x09, 0x50, 0xCD,
  0x0C, 0x74, 0x09, 0xB0, 0x94, 0x04, 0xC0, 0xC0, 0x17, 0x50, 0x9B, 0x09, 0x48, 0x25, 0xCD, 0x87,
  0x71, 0x09, 0xB0, 0x87, 0x77, 0x20, 0x9A, 0x0C, 0x77, 0x73, 0x81, 0x8C, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_beach_access() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 30, 30), Box(0, 0, 35, 35),
      ic_round_36_places_beach_access_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_bento 36x36, 4-bit Alpha,  RLE, 96 bytes.
static const uint8_t ic_round_36_places_bento_data[] PROGMEM = {
  0x10, 0x10, 0x68, 0x09, 0x37, 0x38, 0x02, 0x78, 0x36, 0x10, 0x3E, 0xFF, 0xA3, 0xF8, 0x1E, 0x3B,
  0xFF, 0xB3, 0xF9, 0x0B, 0xFF, 0xC3, 0xFF, 0xFE, 0x3F, 0xFF, 0xE3, 0xFF, 0xFE, 0x3F, 0xFF, 0xE3,
  0xFF, 0xB0, 0x0D, 0xF9, 0x3F, 0xFA, 0x06, 0x20, 0x6F, 0x38, 0x05, 0x7E, 0x0D, 0x40, 0xDE, 0x75,
  0xE0, 0xD4, 0x0D, 0xE7, 0x5F, 0x06, 0x20, 0x6F, 0x38, 0x05, 0x7F, 0x90, 0x0D, 0xF9, 0x3F, 0xFF,
  0xE3, 0xFF, 0xFE, 0x3F, 0xFF, 0xE3, 0xFF, 0xFE, 0x3F, 0xFF, 0xE3, 0xFA, 0x0B, 0xFF, 0xB3, 0xF9,
  0x81, 0xB3, 0xEF, 0xFA, 0x3F, 0x83, 0xE3, 0x01, 0x68, 0x09, 0x37, 0x38, 0x02, 0x70, 0x60, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_bento() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 7, 32, 28), Box(0, 0, 35, 35),
      ic_round_36_places_bento_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_bungalow 36x36, 4-bit Alpha,  RLE, 147 bytes.
static const uint8_t ic_round_36_places_bungalow_data[] PROGMEM = {
  0x73, 0x82, 0x3E, 0xE3, 0x77, 0x60, 0xDA, 0x0D, 0x77, 0x50, 0x7C, 0x07, 0x77, 0x30, 0x2E, 0x02,
  0x77, 0x20, 0xBE, 0x0B, 0x77, 0x10, 0x5F, 0x90, 0x57, 0x60, 0x10, 0xEF, 0x90, 0xE0, 0x17, 0x50,
  0x9F, 0xB0, 0x97, 0x40, 0x3F, 0xD0, 0x37, 0x30, 0xDF, 0xD0, 0xD7, 0x20, 0x7F, 0xF0, 0x77, 0x02,
  0xFF, 0xA0, 0x26, 0x0B, 0xE8, 0x2D, 0x22, 0xDE, 0x0B, 0x50, 0x5F, 0x08, 0x20, 0x8F, 0x05, 0x30,
  0x10, 0xEF, 0x82, 0xD2, 0x2D, 0xF0, 0xE0, 0x12, 0x09, 0xFF, 0xE8, 0x19, 0x01, 0xB0, 0xCF, 0xF0,
  0xCB, 0x84, 0x10, 0xDF, 0xA7, 0xFF, 0x82, 0x7A, 0xFD, 0x38, 0x13, 0x07, 0xD8, 0x2D, 0x22, 0xDD,
  0x81, 0x70, 0x36, 0x07, 0xD0, 0x82, 0x08, 0xD0, 0x77, 0x10, 0x7D, 0x07, 0x20, 0x7D, 0x07, 0x71,
  0x07, 0xD0, 0x72, 0x07, 0xD0, 0x77, 0x10, 0x7D, 0x07, 0x20, 0x7D, 0x07, 0x71, 0x07, 0xD0, 0x72,
  0x07, 0xD0, 0x77, 0x10, 0x5D, 0x07, 0x20, 0x7D, 0x05, 0x72, 0x84, 0x57, 0x77, 0x73, 0x28, 0x43,
  0x77, 0x77, 0x55,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_bungalow() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 29, 31), Box(0, 0, 35, 35),
      ic_round_36_places_bungalow_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_business_center 36x36, 4-bit Alpha,  RLE, 135 bytes.
static const uint8_t ic_round_36_places_business_center_data[] PROGMEM = {
  0x76, 0x82, 0x47, 0x74, 0x77, 0x73, 0x05, 0x0D, 0xC0, 0xD0, 0x57, 0x77, 0x06, 0xF9, 0x06, 0x77,
  0x50, 0x2B, 0x82, 0xE9, 0x9E, 0xB0, 0x27, 0x74, 0x09, 0xA0, 0xC0, 0x12, 0x01, 0x0C, 0xA0, 0x97,
  0x74, 0x0D, 0xA0, 0x34, 0x03, 0xA0, 0xD7, 0x30, 0x10, 0x68, 0x02, 0x7B, 0x84, 0x87, 0x77, 0x78,
  0xB8, 0x02, 0x78, 0x36, 0x10, 0x3E, 0xFF, 0xFD, 0x81, 0xE3, 0xBF, 0xFF, 0xF0, 0xB8, 0x0A, 0xA2,
  0xF0, 0xDF, 0xC0, 0x74, 0x07, 0xFC, 0x0D, 0x08, 0xFC, 0x6F, 0xC8, 0x28, 0x08, 0xEF, 0xA6, 0xFA,
  0x0D, 0x08, 0x77, 0x77, 0x40, 0x38, 0x06, 0x76, 0x80, 0x67, 0x03, 0x20, 0x7F, 0xB0, 0x74, 0x07,
  0xFB, 0x07, 0x20, 0x7F, 0xFF, 0xD0, 0x72, 0x07, 0xFF, 0xFD, 0x07, 0x20, 0x7F, 0xFF, 0xD0, 0x72,
  0x07, 0xFF, 0xFD, 0x07, 0x20, 0x7F, 0xFF, 0xD0, 0x72, 0x03, 0xFF, 0xFD, 0x04, 0x30, 0x9F, 0xFF,
  0xB0, 0x95, 0x04, 0x80, 0xA2, 0x70, 0x43,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_business_center() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 4, 32, 31), Box(0, 0, 35, 35),
      ic_round_36_places_business_center_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_cabin 36x36, 4-bit Alpha,  RLE, 178 bytes.
static const uint8_t ic_round_36_places_cabin_data[] PROGMEM = {
  0x73, 0x04, 0x05, 0x77, 0x77, 0x10, 0x7A, 0x07, 0x77, 0x74, 0x07, 0x0D, 0xC0, 0x77, 0x77, 0x30,
  0xBD, 0x0B, 0x77, 0x73, 0x07, 0xC0, 0xD0, 0x73, 0x82, 0x5E, 0xE5, 0x77, 0x40, 0x7A, 0x07, 0x50,
  0x9C, 0x09, 0x77, 0x40, 0x50, 0x44, 0x02, 0x0C, 0xE0, 0xC0, 0x17, 0x77, 0x04, 0x0E, 0xB0, 0x0A,
  0xB0, 0xE0, 0x47, 0x78, 0x18, 0xE8, 0x20, 0x8C, 0x06, 0x20, 0x6C, 0x08, 0x76, 0xB0, 0x10, 0xBC,
  0x84, 0xB7, 0x77, 0x7A, 0xC0, 0xB0, 0x17, 0x4B, 0x0E, 0xFF, 0xA0, 0xE0, 0x37, 0x3F, 0xFF, 0x90,
  0x77, 0x10, 0x1C, 0x0E, 0x80, 0x92, 0x70, 0xEB, 0x0B, 0x01, 0x50, 0x30, 0xDB, 0x0B, 0x01, 0x77,
  0x01, 0x0B, 0xB0, 0xD0, 0x33, 0x06, 0xD7, 0x74, 0xD8, 0x16, 0x08, 0xE8, 0x09, 0x67, 0xE0, 0x80,
  0xCA, 0x0C, 0xFF, 0xFB, 0x0C, 0xA8, 0x2D, 0x5D, 0x81, 0xFF, 0xFB, 0x18, 0x18, 0xD5, 0x4B, 0x80,
  0x96, 0x7B, 0x71, 0xB7, 0x74, 0xB7, 0x1B, 0x77, 0x4B, 0x71, 0xB8, 0x09, 0x67, 0xB7, 0x1F, 0xFF,
  0xB7, 0x1F, 0xFF, 0xB7, 0x1B, 0x80, 0x96, 0x7B, 0x71, 0xB7, 0x74, 0xB7, 0x1B, 0x77, 0x4B, 0x71,
  0xB8, 0x09, 0x67, 0xB7, 0x1F, 0xFF, 0xB7, 0x10, 0xDF, 0xFF, 0x90, 0xD7, 0x10, 0x28, 0x0A, 0x27,
  0x02, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_cabin() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 1, 33, 31), Box(0, 0, 35, 35),
      ic_round_36_places_cabin_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_carpenter 36x36, 4-bit Alpha,  RLE, 156 bytes.
static const uint8_t ic_round_36_places_carpenter_data[] PROGMEM = {
  0x50, 0x17, 0x77, 0x38, 0x1A, 0xFA, 0x77, 0x71, 0x0B, 0xB0, 0xB7, 0x76, 0x0B, 0xD0, 0xB7, 0x74,
  0x0B, 0xF0, 0xB7, 0x72, 0x09, 0xFA, 0x0B, 0x77, 0x10, 0xCF, 0xB0, 0xB7, 0x70, 0x5F, 0xC0, 0xB7,
  0x70, 0xAF, 0xC0, 0xB7, 0x60, 0x10, 0xDF, 0xC0, 0xB7, 0x60, 0x4F, 0xD0, 0xB7, 0x60, 0x8F, 0xD0,
  0xB7, 0x60, 0xCF, 0xD0, 0xB7, 0x50, 0x3F, 0xE0, 0xB7, 0x50, 0x7F, 0xE0, 0xB7, 0x50, 0xBF, 0xE0,
  0xB7, 0x40, 0x20, 0xEF, 0xE0, 0xB7, 0x40, 0x5F, 0xF0, 0xB7, 0x40, 0xAF, 0xF0, 0xB7, 0x30, 0x10,
  0xEF, 0xA0, 0xE0, 0x9B, 0x0A, 0x73, 0x04, 0xF9, 0x82, 0xE3, 0x07, 0xB0, 0x37, 0x30, 0x9E, 0x0E,
  0x03, 0x30, 0xCA, 0x06, 0x74, 0x0D, 0xC0, 0xE0, 0x33, 0x08, 0xB0, 0x37, 0x40, 0x4B, 0x0E, 0x03,
  0x30, 0x8B, 0x09, 0x75, 0x0A, 0xA0, 0xE0, 0x33, 0x08, 0xB0, 0xA7, 0x60, 0xEA, 0x04, 0x30, 0x8B,
  0x0A, 0x77, 0x0D, 0xA0, 0xB2, 0x08, 0xB0, 0xA7, 0x71, 0x05, 0xB0, 0xB0, 0x9B, 0x0A, 0x77, 0x30,
  0x7E, 0x0A, 0x77, 0x50, 0x7C, 0x0A, 0x77, 0x78, 0x24, 0xAB, 0x67, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_carpenter() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(5, 2, 30, 32), Box(0, 0, 35, 35),
      ic_round_36_places_carpenter_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_casino 36x36, 4-bit Alpha,  RLE, 171 bytes.
static const uint8_t ic_round_36_places_casino_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x27, 0x04, 0x30, 0x9F, 0xFF, 0xB8, 0x19, 0x04, 0xFF, 0xFD, 0x04, 0x07, 0xFF,
  0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xC8, 0x2C, 0x20, 0x6F, 0xB8, 0x26, 0x02, 0xCC, 0x00, 0x7C,
  0x02, 0x30, 0xAF, 0x90, 0xA3, 0x02, 0xC0, 0x07, 0xC0, 0x13, 0x08, 0xF9, 0x08, 0x30, 0x1C, 0x00,
  0x7C, 0x06, 0x30, 0xDF, 0x90, 0xD3, 0x06, 0xC0, 0x07, 0xD8, 0x1A, 0x8D, 0xFB, 0x81, 0xD8, 0xAD,
  0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFD, 0x00, 0xDF, 0xD0, 0x07, 0xFC, 0x06, 0x20, 0x6F, 0xC0, 0x07,
  0xFB, 0x0D, 0x40, 0xDF, 0xB0, 0x07, 0xFB, 0x0D, 0x40, 0xDF, 0xB0, 0x07, 0xFC, 0x06, 0x20, 0x6F,
  0xC0, 0x07, 0xFD, 0x00, 0xDF, 0xD0, 0x07, 0xFF, 0xFD, 0x00, 0x7D, 0x81, 0xA8, 0xDF, 0xB8, 0x1D,
  0x8A, 0xD0, 0x07, 0xC0, 0x63, 0x0D, 0xF9, 0x0D, 0x30, 0x6C, 0x00, 0x7C, 0x01, 0x30, 0x8F, 0x90,
  0x83, 0x01, 0xC0, 0x07, 0xC0, 0x23, 0x0A, 0xF9, 0x0A, 0x30, 0x2C, 0x00, 0x7C, 0x82, 0xC2, 0x06,
  0xFB, 0x82, 0x60, 0x2C, 0xC0, 0x07, 0xFF, 0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x70, 0x4F, 0xFF, 0xD8,
  0x14, 0x09, 0xFF, 0xFB, 0x09, 0x30, 0x48, 0x0A, 0x27, 0x04, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_casino() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_round_36_places_casino_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_chalet 36x36, 4-bit Alpha,  RLE, 179 bytes.
static const uint8_t ic_round_36_places_chalet_data[] PROGMEM = {
  0x77, 0x71, 0x00, 0x37, 0x77, 0x48, 0x42, 0x5B, 0xB5, 0x27, 0x77, 0x28, 0x47, 0xFE, 0xEF, 0x77,
  0x77, 0x30, 0xAA, 0x0A, 0x77, 0x71, 0x0D, 0x09, 0x20, 0x0C, 0x20, 0x90, 0xD7, 0x74, 0x89, 0x22,
  0xAF, 0xA3, 0xCC, 0x3A, 0xFA, 0x27, 0x73, 0x0D, 0xFB, 0x0D, 0x77, 0x38, 0x92, 0x2A, 0xFA, 0x3C,
  0xC3, 0xAF, 0xA2, 0x72, 0x82, 0x4E, 0xE4, 0x50, 0xD0, 0x92, 0x00, 0xC2, 0x09, 0x0D, 0x72, 0x04,
  0x0E, 0xB0, 0x47, 0x0A, 0xA0, 0xA7, 0x40, 0x40, 0xED, 0x04, 0x58, 0x47, 0xFE, 0xEF, 0x77, 0x20,
  0x40, 0xEF, 0x04, 0x48, 0x42, 0x5B, 0xB5, 0x27, 0x10, 0x40, 0xEF, 0xA0, 0x45, 0x00, 0x37, 0x20,
  0x40, 0xEF, 0xC0, 0x47, 0x70, 0x40, 0xEF, 0xE0, 0x47, 0x50, 0x40, 0xEF, 0xF9, 0x04, 0x73, 0x04,
  0x0E, 0xFF, 0xB0, 0x47, 0x10, 0x30, 0xEF, 0xFD, 0x03, 0x70, 0x8F, 0xA0, 0x09, 0xFA, 0x09, 0x78,
  0x23, 0xEC, 0x9D, 0x09, 0x20, 0x9D, 0x82, 0x9C, 0xE3, 0x73, 0x07, 0xD0, 0x72, 0x07, 0xD0, 0x77,
  0x60, 0x7D, 0x07, 0x20, 0x7D, 0x07, 0x76, 0x07, 0xD0, 0x72, 0x07, 0xD0, 0x77, 0x60, 0x7D, 0x07,
  0x20, 0x7D, 0x07, 0x76, 0x07, 0xD0, 0x72, 0x07, 0xD0, 0x77, 0x60, 0x20, 0xDC, 0x07, 0x20, 0x7C,
  0x0D, 0x02, 0x73,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_chalet() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 32, 29), Box(0, 0, 35, 35),
      ic_round_36_places_chalet_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_charging_station 36x36, 4-bit Alpha,  RLE, 183 bytes.
static const uint8_t ic_round_36_places_charging_station_data[] PROGMEM = {
  0x20, 0x48, 0x09, 0x47, 0x04, 0x30, 0x9F, 0xFC, 0x81, 0x90, 0x4F, 0xFE, 0x04, 0x07, 0xFF, 0xE0,
  0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xA0, 0x77, 0x70,
  0x7A, 0x00, 0x7A, 0x07, 0x77, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x70, 0x7A, 0x00, 0x7A, 0x07, 0x77,
  0x07, 0xA0, 0x07, 0xA0, 0x76, 0x0B, 0x0A, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x58, 0x13, 0xFB, 0x60,
  0x7A, 0x00, 0x7A, 0x07, 0x58, 0x1B, 0xFB, 0x60, 0x7A, 0x00, 0x7A, 0x07, 0x40, 0x3A, 0x81, 0xD7,
  0x74, 0x07, 0xA0, 0x07, 0xA0, 0x74, 0x0B, 0xD0, 0x23, 0x07, 0xA0, 0x07, 0xA0, 0x73, 0x02, 0xD0,
  0xB4, 0x07, 0xA0, 0x07, 0xA0, 0x74, 0x81, 0x77, 0xDA, 0x03, 0x40, 0x7A, 0x00, 0x7A, 0x07, 0x68,
  0x1B, 0xFB, 0x50, 0x7A, 0x00, 0x7A, 0x07, 0x68, 0x1B, 0xF3, 0x50, 0x7A, 0x00, 0x7A, 0x07, 0x60,
  0xA0, 0xB6, 0x07, 0xA0, 0x07, 0xA0, 0x77, 0x70, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x07, 0xA0, 0x07,
  0xA0, 0x77, 0x70, 0x7A, 0x00, 0x7A, 0x07, 0x77, 0x07, 0xA0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0,
  0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x70, 0x4F, 0xFE, 0x81, 0x40, 0x9F, 0xFC,
  0x09, 0x30, 0x48, 0x09, 0x47, 0x04, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_charging_station() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(7, 1, 28, 34), Box(0, 0, 35, 35),
      ic_round_36_places_charging_station_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_checkroom 36x36, 4-bit Alpha,  RLE, 154 bytes.
static const uint8_t ic_round_36_places_checkroom_data[] PROGMEM = {
  0x75, 0x84, 0x4B, 0xED, 0xB5, 0x77, 0x72, 0x09, 0xE0, 0x97, 0x77, 0x06, 0xF9, 0x06, 0x77, 0x60,
  0xDA, 0x82, 0x91, 0x19, 0xA0, 0xD7, 0x76, 0x81, 0x9F, 0xC4, 0x0E, 0xA0, 0x27, 0x76, 0x02, 0x50,
  0xCA, 0x02, 0x77, 0x74, 0x03, 0xB0, 0x17, 0x77, 0x28, 0x15, 0x9E, 0xA0, 0xA7, 0x77, 0x20, 0x5C,
  0x0D, 0x01, 0x77, 0x72, 0x07, 0xB0, 0xB0, 0x27, 0x77, 0x30, 0x7A, 0x08, 0x77, 0x75, 0x09, 0xA0,
  0x97, 0x77, 0x40, 0x9C, 0x09, 0x77, 0x71, 0x02, 0x0C, 0xE0, 0xC0, 0x27, 0x75, 0x05, 0x0E, 0xB0,
  0x09, 0xB0, 0xE0, 0x57, 0x73, 0x09, 0xB0, 0xE0, 0x52, 0x05, 0x0E, 0xB0, 0x97, 0x70, 0x20, 0xCB,
  0x0C, 0x02, 0x40, 0x20, 0xCB, 0x0C, 0x02, 0x74, 0x05, 0x0E, 0xB0, 0x97, 0x10, 0x9B, 0x0E, 0x05,
  0x72, 0x09, 0xB0, 0xE0, 0x57, 0x30, 0x50, 0xEB, 0x09, 0x60, 0x20, 0xCB, 0x0C, 0x02, 0x75, 0x02,
  0x0C, 0xB0, 0xC0, 0x23, 0x05, 0x0E, 0xB0, 0x97, 0x72, 0x09, 0xB8, 0x2E, 0x50, 0x7F, 0xFF, 0xF0,
  0x80, 0xEF, 0xFF, 0xF8, 0x1E, 0x7E, 0xFF, 0xFD, 0x0E, 0x07,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_checkroom() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 32, 29), Box(0, 0, 35, 35),
      ic_round_36_places_checkroom_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_child_care 36x36, 4-bit Alpha,  RLE, 260 bytes.
static const uint8_t ic_round_36_places_child_care_data[] PROGMEM = {
  0x77, 0x84, 0x35, 0x77, 0x53, 0x77, 0x74, 0x81, 0x4A, 0xEE, 0x81, 0xEA, 0x47, 0x76, 0x02, 0x0C,
  0xFD, 0x0C, 0x02, 0x77, 0x30, 0x6D, 0x84, 0xCA, 0x88, 0xAC, 0xD0, 0x67, 0x71, 0x07, 0xB8, 0x1E,
  0x82, 0x68, 0x12, 0x8E, 0xB0, 0x77, 0x60, 0x6B, 0x0C, 0x02, 0x73, 0x02, 0x0C, 0xB0, 0x67, 0x40,
  0x2B, 0x0A, 0x77, 0x0A, 0xB0, 0x27, 0x30, 0xBA, 0x0C, 0x77, 0x20, 0xCA, 0x0B, 0x71, 0x02, 0x09,
  0xB0, 0x27, 0x72, 0x02, 0xB0, 0x90, 0x25, 0x05, 0xC0, 0x85, 0x01, 0x60, 0x15, 0x08, 0xC0, 0x53,
  0x04, 0xD0, 0x23, 0x82, 0x2D, 0xF8, 0x48, 0x28, 0xFD, 0x23, 0x02, 0xD0, 0x42, 0x0D, 0xA0, 0xC0,
  0x35, 0x08, 0xB0, 0x12, 0x01, 0xB0, 0x85, 0x03, 0x0C, 0xA8, 0x1D, 0x03, 0xA0, 0xD0, 0x16, 0x06,
  0xA0, 0xD4, 0x0D, 0xA0, 0x66, 0x01, 0x0D, 0xA0, 0x30, 0x7A, 0x09, 0x71, 0x81, 0x68, 0x24, 0x81,
  0x28, 0x67, 0x10, 0x9A, 0x00, 0x7A, 0x09, 0x77, 0x75, 0x09, 0xA0, 0x70, 0x3A, 0x0D, 0x01, 0x77,
  0x73, 0x01, 0x0D, 0xA8, 0x13, 0x0D, 0xA0, 0xC0, 0x37, 0x77, 0x10, 0x30, 0xCA, 0x0D, 0x20, 0x4D,
  0x02, 0x20, 0x6F, 0xD0, 0x62, 0x02, 0xD0, 0x43, 0x05, 0xC0, 0x83, 0x0C, 0xFB, 0x0C, 0x30, 0x8C,
  0x06, 0x50, 0x20, 0x9B, 0x02, 0x20, 0x10, 0xCF, 0x90, 0xC0, 0x12, 0x02, 0xB0, 0x90, 0x27, 0x10,
  0xBA, 0x0C, 0x40, 0x80, 0xEC, 0x0E, 0x08, 0x40, 0xCA, 0x0B, 0x73, 0x02, 0xB0, 0xA5, 0x82, 0x46,
  0x64, 0x50, 0xAB, 0x02, 0x74, 0x06, 0xB0, 0xC0, 0x27, 0x30, 0x20, 0xCB, 0x06, 0x76, 0x07, 0xB8,
  0x1E, 0x82, 0x68, 0x12, 0x8E, 0xB0, 0x77, 0x71, 0x06, 0xD8, 0x4C, 0xA8, 0x8A, 0xCD, 0x06, 0x77,
  0x30, 0x20, 0xBF, 0xD0, 0xC0, 0x37, 0x76, 0x81, 0x4A, 0xEE, 0x81, 0xEA, 0x47, 0x77, 0x48, 0x43,
  0x57, 0x75, 0x37, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_child_care() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 4, 34, 31), Box(0, 0, 35, 35),
      ic_round_36_places_child_care_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_child_friendly 36x36, 4-bit Alpha,  RLE, 189 bytes.
static const uint8_t ic_round_36_places_child_friendly_data[] PROGMEM = {
  0x77, 0x28, 0x31, 0xBC, 0x84, 0x77, 0x73, 0x07, 0xC0, 0xD0, 0x57, 0x77, 0x10, 0x7E, 0x0A, 0x01,
  0x77, 0x60, 0x7F, 0x0C, 0x01, 0x77, 0x50, 0x7F, 0x90, 0xC7, 0x75, 0x07, 0xFA, 0x08, 0x77, 0x40,
  0x7F, 0xB0, 0x27, 0x73, 0x07, 0xFB, 0x09, 0x77, 0x30, 0x7F, 0xB0, 0xE7, 0x73, 0x07, 0xFC, 0x84,
  0x32, 0x77, 0x76, 0x74, 0x07, 0xFC, 0x05, 0x0D, 0xC0, 0xA7, 0x30, 0x7F, 0xC0, 0x70, 0xDD, 0x02,
  0x77, 0x71, 0x82, 0x27, 0x7C, 0xA0, 0xB8, 0x0A, 0x17, 0x03, 0x30, 0x3F, 0xFF, 0xB0, 0x64, 0x0B,
  0xFF, 0xFA, 0x04, 0x40, 0x4F, 0xFF, 0xA0, 0x15, 0x0C, 0xFF, 0xF0, 0xC6, 0x04, 0xFF, 0xF0, 0x57,
  0x0C, 0xFF, 0xD0, 0xC7, 0x02, 0x0D, 0xFF, 0xD0, 0x36, 0x01, 0x0E, 0xFF, 0xE0, 0x86, 0x0A, 0xA8,
  0x2E, 0x99, 0xEF, 0xB8, 0x1C, 0x8C, 0xB0, 0x25, 0xB0, 0x32, 0x03, 0xFA, 0x0A, 0x30, 0xAA, 0x08,
  0x40, 0x3A, 0x0C, 0x40, 0xCF, 0x90, 0x43, 0x04, 0xA0, 0xA4, 0x02, 0xA0, 0xE4, 0x0E, 0xA8, 0x28,
  0x77, 0xCA, 0x06, 0x30, 0x6A, 0x09, 0x50, 0xDA, 0x82, 0x91, 0x19, 0xA0, 0xD3, 0x06, 0xA8, 0x3E,
  0x40, 0x4E, 0xA0, 0x65, 0x06, 0xF9, 0x06, 0x40, 0xDF, 0x0D, 0x70, 0x9E, 0x09, 0x50, 0x30, 0xED,
  0x0E, 0x03, 0x71, 0x84, 0x5B, 0xEE, 0xB5, 0x78, 0x51, 0x9D, 0xFD, 0x81, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_child_friendly() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 31, 32), Box(0, 0, 35, 35),
      ic_round_36_places_child_friendly_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_corporate_fare 36x36, 4-bit Alpha,  RLE, 128 bytes.
static const uint8_t ic_round_36_places_corporate_fare_data[] PROGMEM = {
  0x10, 0x10, 0x68, 0x05, 0x70, 0x60, 0x17, 0x72, 0x03, 0x0E, 0xFC, 0x0E, 0x03, 0x77, 0x10, 0xBF,
  0xE0, 0xB7, 0x71, 0xB8, 0x05, 0x7B, 0x77, 0x1B, 0x72, 0xB7, 0x71, 0xB7, 0x2B, 0x77, 0x1B, 0x80,
  0x57, 0xB8, 0x09, 0x07, 0x06, 0x01, 0x1F, 0xFF, 0xF0, 0xE0, 0x3F, 0xFF, 0xF9, 0x0B, 0xB8, 0x05,
  0x7B, 0x80, 0x90, 0x7E, 0x72, 0xB7, 0x5E, 0x72, 0xB7, 0x5E, 0x80, 0x57, 0xB3, 0x80, 0x27, 0x3F,
  0xFC, 0x3E, 0x3F, 0xFC, 0x3E, 0x3E, 0x80, 0x57, 0xB3, 0x80, 0x27, 0x3E, 0x72, 0xB7, 0x5E, 0x72,
  0xB7, 0x5E, 0x80, 0x57, 0xB3, 0x80, 0x27, 0x3F, 0xFC, 0x3E, 0x3F, 0xFC, 0x3E, 0x3E, 0x80, 0x57,
  0xB3, 0x80, 0x27, 0x3E, 0x72, 0xB7, 0x5E, 0x72, 0xB7, 0x5E, 0x80, 0x57, 0xB8, 0x09, 0x07, 0xB0,
  0xBF, 0xFF, 0xF8, 0x1B, 0x3E, 0xFF, 0xFD, 0x83, 0xE3, 0x01, 0x68, 0x0A, 0x47, 0x06, 0x01, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_corporate_fare() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 4, 32, 31), Box(0, 0, 35, 35),
      ic_round_36_places_corporate_fare_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_cottage 36x36, 4-bit Alpha,  RLE, 178 bytes.
static const uint8_t ic_round_36_places_cottage_data[] PROGMEM = {
  0x73, 0x04, 0x05, 0x77, 0x77, 0x10, 0x7A, 0x07, 0x77, 0x74, 0x07, 0x0D, 0xC0, 0x77, 0x77, 0x30,
  0xBD, 0x0B, 0x77, 0x73, 0x07, 0xC0, 0xD0, 0x73, 0x82, 0x5E, 0xE5, 0x77, 0x40, 0x7A, 0x07, 0x50,
  0x9C, 0x09, 0x77, 0x40, 0x50, 0x44, 0x02, 0x0C, 0xE0, 0xC0, 0x17, 0x77, 0x04, 0x0E, 0xF9, 0x0E,
  0x04, 0x77, 0x81, 0x8E, 0x82, 0x08, 0xFD, 0x08, 0x76, 0xB0, 0x10, 0xBF, 0xF0, 0xB0, 0x17, 0x4B,
  0x0E, 0xFF, 0xA0, 0xE0, 0x37, 0x3F, 0xFF, 0x90, 0x77, 0x10, 0x1F, 0xFF, 0xA0, 0xB0, 0x15, 0x03,
  0x0D, 0xFF, 0xFB, 0x0D, 0x03, 0x30, 0x6F, 0xFF, 0xF8, 0x16, 0x08, 0xFF, 0xFF, 0xA0, 0x80, 0xDA,
  0x0C, 0xFF, 0xFB, 0x0C, 0xA8, 0x2D, 0x5D, 0x81, 0xFF, 0xFB, 0x18, 0x18, 0xD5, 0x4F, 0xFF, 0xB7,
  0x1F, 0xFF, 0xB7, 0x1F, 0xFF, 0xB7, 0x1F, 0xC0, 0x09, 0xFC, 0x71, 0xFB, 0x09, 0x20, 0x9F, 0xB7,
  0x1F, 0xB0, 0x72, 0x07, 0xFB, 0x71, 0xFB, 0x07, 0x20, 0x7F, 0xB7, 0x1F, 0xB0, 0x72, 0x07, 0xFB,
  0x71, 0xFB, 0x07, 0x20, 0x7F, 0xB7, 0x1F, 0xB0, 0x72, 0x07, 0xFB, 0x71, 0xFB, 0x07, 0x20, 0x7F,
  0xB7, 0x10, 0xDF, 0xA0, 0x72, 0x07, 0xFA, 0x0D, 0x71, 0x02, 0x80, 0x57, 0x03, 0x20, 0x38, 0x05,
  0x70, 0x24,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_cottage() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 1, 33, 31), Box(0, 0, 35, 35),
      ic_round_36_places_cottage_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_countertops 36x36, 4-bit Alpha,  RLE, 120 bytes.
static const uint8_t ic_round_36_places_countertops_data[] PROGMEM = {
  0x30, 0x8F, 0x08, 0x58, 0x37, 0xDF, 0xC6, 0x74, 0xFA, 0x40, 0xBD, 0x0A, 0x73, 0xFA, 0x30, 0x7F,
  0x05, 0x72, 0xFA, 0x30, 0x7A, 0x81, 0x70, 0x7A, 0x0B, 0x72, 0xFA, 0x40, 0x60, 0x43, 0xA0, 0xE7,
  0x2F, 0xA7, 0x2B, 0x72, 0x0D, 0xF0, 0xD7, 0x2B, 0x72, 0x08, 0xF0, 0x87, 0x2B, 0x73, 0x08, 0x0D,
  0xB0, 0xD0, 0x87, 0x3B, 0x60, 0x8F, 0xFF, 0xF0, 0x80, 0xEF, 0xFF, 0xF0, 0xE0, 0x8F, 0xFF, 0xF0,
  0x83, 0xFB, 0x07, 0x20, 0x7F, 0xB6, 0xFB, 0x07, 0x20, 0x7F, 0xB6, 0xFB, 0x07, 0x20, 0x7F, 0xB6,
  0xFB, 0x07, 0x20, 0x7F, 0xB6, 0xFB, 0x07, 0x20, 0x7F, 0xB6, 0xFB, 0x07, 0x20, 0x7F, 0xB6, 0xFB,
  0x07, 0x20, 0x7F, 0xB6, 0xFB, 0x07, 0x20, 0x7F, 0xB6, 0xFB, 0x07, 0x20, 0x7F, 0xB6, 0xFF, 0xFB,
  0x6F, 0xFF, 0xB6, 0x08, 0xFF, 0xF9, 0x08, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_countertops() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 32, 29), Box(0, 0, 35, 35),
      ic_round_36_places_countertops_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_crib 36x36, 4-bit Alpha,  RLE, 106 bytes.
static const uint8_t ic_round_36_places_crib_data[] PROGMEM = {
  0x38, 0x16, 0xCE, 0xB0, 0xE0, 0x87, 0x70, 0x10, 0xCF, 0x90, 0x87, 0x60, 0xCF, 0xA0, 0xE7, 0x50,
  0x6F, 0xC7, 0x50, 0xCF, 0xC7, 0x50, 0xEF, 0xC7, 0x5F, 0xD7, 0x5F, 0xD8, 0x05, 0x70, 0x60, 0x11,
  0xFF, 0xF9, 0x0E, 0x03, 0xFF, 0xFA, 0x0C, 0x80, 0x9E, 0x4F, 0x0D, 0xFF, 0xF9, 0x0E, 0x08, 0xFF,
  0xF9, 0x82, 0x80, 0x8D, 0xFF, 0xC0, 0xE0, 0x87, 0xB6, 0xB7, 0x5B, 0x6B, 0x75, 0xB6, 0xB7, 0x18,
  0x16, 0xE9, 0x1B, 0x6B, 0x82, 0x19, 0xE6, 0x40, 0xDA, 0x0D, 0xB6, 0xB0, 0xDA, 0x0D, 0x40, 0x7E,
  0x04, 0x01, 0x20, 0x10, 0x4E, 0x07, 0x50, 0x40, 0xDF, 0xF0, 0xD0, 0x47, 0x10, 0x70, 0xDF, 0xB8,
  0x1D, 0x71, 0x74, 0x89, 0x04, 0x8B, 0xDE, 0xED, 0xB8, 0x47,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_crib() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 6, 29, 32), Box(0, 0, 35, 35),
      ic_round_36_places_crib_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_desk 36x36, 4-bit Alpha,  RLE, 58 bytes.
static const uint8_t ic_round_36_places_desk_data[] PROGMEM = {
  0x08, 0xFF, 0xFF, 0x08, 0x80, 0xF3, 0xF7, 0x71, 0xB6, 0xE7, 0x71, 0xB6, 0xE7, 0x71, 0xB6, 0xE7,
  0x71, 0xFF, 0x97, 0x71, 0xFF, 0x97, 0x71, 0xFF, 0x97, 0x71, 0xB6, 0xE7, 0x71, 0xB6, 0xE7, 0x71,
  0xB6, 0xE7, 0x71, 0xFF, 0x97, 0x71, 0xFF, 0x97, 0x71, 0xFF, 0x97, 0x71, 0xB6, 0xE7, 0x71, 0xB6,
  0xB8, 0x18, 0xE8, 0x77, 0x18, 0x18, 0xE8, 0x68, 0x18, 0xE8,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_desk() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 9, 32, 26), Box(0, 0, 35, 35),
      ic_round_36_places_desk_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_do_not_step 36x36, 4-bit Alpha,  RLE, 251 bytes.
static const uint8_t ic_round_36_places_do_not_step_data[] PROGMEM = {
  0x30, 0x17, 0x78, 0x27, 0xB9, 0x27, 0x58, 0x21, 0xDF, 0x77, 0x50, 0xBB, 0x0E, 0x03, 0x74, 0x03,
  0xB0, 0x77, 0x30, 0xBD, 0x0E, 0x03, 0x74, 0x0A, 0xB0, 0x77, 0x10, 0xCF, 0x0E, 0x03, 0x74, 0x0A,
  0xB0, 0x76, 0x0C, 0xFA, 0x0E, 0x03, 0x74, 0x0A, 0xB0, 0x74, 0x0B, 0xFC, 0x0E, 0x03, 0x74, 0x0A,
  0xB0, 0x73, 0x04, 0xFD, 0x0E, 0x03, 0x74, 0x0A, 0xB0, 0x73, 0x04, 0xFD, 0x0E, 0x03, 0x74, 0x0A,
  0xB0, 0x73, 0x04, 0xFD, 0x0E, 0x03, 0x74, 0x0A, 0xB0, 0x73, 0x04, 0xFD, 0x0E, 0x01, 0x74, 0x0A,
  0xB0, 0x73, 0x04, 0xFC, 0x81, 0x60, 0x17, 0x40, 0xAB, 0x07, 0x30, 0x4F, 0xA8, 0x26, 0x06, 0xD7,
  0x38, 0x11, 0x0A, 0xB0, 0x73, 0x04, 0xF8, 0x16, 0x06, 0xA0, 0x27, 0x18, 0x31, 0xE3, 0x0A, 0xB0,
  0x73, 0x04, 0x0E, 0xC8, 0x16, 0x06, 0xB0, 0x17, 0x18, 0x42, 0xEE, 0x30, 0xEB, 0x07, 0x30, 0x40,
  0xEA, 0x81, 0x60, 0x6B, 0x0A, 0x71, 0x84, 0x20, 0x3E, 0xEA, 0xD0, 0x73, 0x83, 0x4E, 0x60, 0x6B,
  0x0B, 0x71, 0x83, 0x2E, 0xA0, 0x4F, 0x90, 0x73, 0x81, 0x10, 0x6B, 0x0B, 0x71, 0x84, 0x10, 0xAF,
  0xA7, 0xFA, 0x07, 0x30, 0x1B, 0x0B, 0x78, 0x43, 0xBE, 0x30, 0xAF, 0xD0, 0x73, 0x81, 0x4F, 0xB6,
  0x03, 0x0C, 0xB8, 0x1E, 0x46, 0xFE, 0x07, 0x30, 0x36, 0x01, 0x0E, 0xFF, 0xF0, 0x77, 0x20, 0x6F,
  0xFB, 0x81, 0xE4, 0xBB, 0x07, 0x71, 0x07, 0xFF, 0xA0, 0xE0, 0x42, 0x0B, 0xB0, 0x77, 0x06, 0xFF,
  0x90, 0xE0, 0x44, 0x0B, 0xB0, 0x76, 0x01, 0x0E, 0xFE, 0x0E, 0x04, 0x60, 0xBB, 0x07, 0x60, 0x30,
  0xBF, 0xC0, 0xB0, 0x37, 0x10, 0xBB, 0x07, 0x77, 0x77, 0x10, 0xBB, 0x06, 0x77, 0x77, 0x10, 0xBB,
  0x01, 0x77, 0x77, 0x18, 0x1B, 0xFD, 0x77, 0x77, 0x30, 0x30, 0x13,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_do_not_step() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 4, 33, 33), Box(0, 0, 35, 35),
      ic_round_36_places_do_not_step_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_do_not_touch 36x36, 4-bit Alpha,  RLE, 251 bytes.
static const uint8_t ic_round_36_places_do_not_touch_data[] PROGMEM = {
  0x77, 0x81, 0x27, 0x37, 0x77, 0x60, 0xEA, 0x03, 0x77, 0x74, 0x03, 0xB8, 0x47, 0x05, 0xED, 0x27,
  0x20, 0x16, 0x83, 0x37, 0x20, 0x3B, 0x81, 0x70, 0xEA, 0x0A, 0x78, 0x21, 0xDF, 0x74, 0x03, 0xA8,
  0x1E, 0x03, 0xB0, 0x71, 0xB0, 0xB7, 0x03, 0xB0, 0x73, 0x03, 0xB0, 0x03, 0xB0, 0x71, 0xB8, 0x4B,
  0x02, 0xDE, 0x53, 0x0A, 0xB0, 0x73, 0x04, 0xA0, 0x03, 0xB0, 0x71, 0xB8, 0x1B, 0x0A, 0xA0, 0xD4,
  0x0A, 0xB0, 0x73, 0x82, 0x4F, 0x33, 0xB0, 0x71, 0xB8, 0x1B, 0x0B, 0xB5, 0x0A, 0xB0, 0x73, 0x81,
  0x43, 0x3B, 0x07, 0x1B, 0x81, 0xB0, 0xBB, 0x60, 0xAB, 0x07, 0x40, 0x3B, 0x07, 0x1B, 0x81, 0xB0,
  0xBB, 0x70, 0xAB, 0x07, 0x30, 0x2B, 0x07, 0x1B, 0x81, 0xB0, 0xBB, 0x71, 0x0A, 0xB0, 0x73, 0x04,
  0xA0, 0x71, 0xB8, 0x1B, 0x0B, 0xB7, 0x20, 0xAB, 0x07, 0x38, 0x14, 0xF7, 0x1B, 0x81, 0xB0, 0xBB,
  0x73, 0x0B, 0xB0, 0x73, 0x04, 0x07, 0x1B, 0x81, 0xB0, 0xBB, 0x73, 0x07, 0xC0, 0x75, 0xB8, 0x1B,
  0x0B, 0xB7, 0x30, 0x7D, 0x07, 0x4C, 0x09, 0xC7, 0x30, 0x7E, 0x07, 0x30, 0x4F, 0x95, 0x02, 0x40,
  0x7F, 0x07, 0x30, 0x4F, 0x48, 0x29, 0xFE, 0x72, 0x07, 0xF9, 0x07, 0x30, 0x4E, 0x30, 0x9C, 0x81,
  0xD5, 0x7F, 0xA0, 0x73, 0x04, 0xD3, 0x05, 0xFF, 0xB0, 0x73, 0x04, 0xC4, 0x06, 0xFF, 0xB0, 0x73,
  0x04, 0xB5, 0x07, 0xFF, 0xB0, 0x73, 0x04, 0xA6, 0x07, 0xFF, 0xB0, 0x73, 0x04, 0x97, 0x08, 0xFF,
  0xB0, 0x73, 0x04, 0x71, 0x09, 0xFF, 0xB0, 0x77, 0x50, 0xAF, 0xFB, 0x07, 0x75, 0x0A, 0xFF, 0xB0,
  0x77, 0x50, 0xBF, 0xFB, 0x07, 0x75, 0x0C, 0xFF, 0xB0, 0x77, 0x40, 0x10, 0xCF, 0xFB, 0x01, 0x75,
  0x07, 0x0D, 0xFB, 0x83, 0xD7, 0xBF, 0xD7, 0x77, 0x70, 0x30, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_do_not_touch() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 1, 31, 33), Box(0, 0, 35, 35),
      ic_round_36_places_do_not_touch_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_dry 36x36, 4-bit Alpha,  RLE, 209 bytes.
static const uint8_t ic_round_36_places_dry_data[] PROGMEM = {
  0x77, 0x48, 0x12, 0xDC, 0x38, 0x12, 0xDC, 0x77, 0x72, 0x07, 0xA0, 0x42, 0x07, 0xA0, 0x47, 0x77,
  0x10, 0x6A, 0x07, 0x20, 0x6A, 0x07, 0x77, 0x71, 0x02, 0xA0, 0xD2, 0x02, 0xA0, 0xD7, 0x77, 0x20,
  0xBA, 0x09, 0x20, 0xBA, 0x0A, 0x77, 0x81, 0x5D, 0x85, 0x02, 0x0E, 0xA8, 0x26, 0x02, 0xEA, 0x06,
  0x75, 0x06, 0xB0, 0x75, 0x04, 0xA0, 0xE2, 0x04, 0xA0, 0xE7, 0x40, 0x7C, 0x0A, 0x60, 0xAA, 0x04,
  0x20, 0xAA, 0x04, 0x72, 0x08, 0xD0, 0x46, 0x06, 0xA0, 0x62, 0x06, 0xA0, 0x77, 0x10, 0x9D, 0x0B,
  0x70, 0x3A, 0x05, 0x20, 0x3A, 0x06, 0x70, 0xAE, 0x02, 0x71, 0x04, 0x05, 0x40, 0x40, 0x57, 0x0A,
  0xE0, 0x87, 0x77, 0x20, 0xBF, 0xFF, 0x90, 0xE0, 0x55, 0x01, 0x0B, 0xFF, 0xFB, 0x0E, 0x40, 0x10,
  0xCF, 0xFF, 0xC0, 0xD4, 0x0B, 0xFF, 0x90, 0xD8, 0x05, 0xB0, 0xA0, 0x23, 0x03, 0xFF, 0xA0, 0x17,
  0x70, 0x7F, 0xFA, 0x0D, 0x80, 0x90, 0xB8, 0x1A, 0x27, 0xFF, 0xFF, 0xA0, 0xD0, 0x7F, 0xFF, 0xFA,
  0x0E, 0x07, 0xFF, 0xFF, 0x98, 0x1D, 0x57, 0xFF, 0xA0, 0x27, 0x70, 0x7F, 0xFA, 0x0A, 0x80, 0x77,
  0x03, 0x20, 0x7F, 0xFF, 0xF9, 0x81, 0x30, 0x7F, 0xFF, 0xF9, 0x81, 0x70, 0x7F, 0xFF, 0xF8, 0x2D,
  0x10, 0x7F, 0xFA, 0x06, 0x80, 0x73, 0x30, 0x6F, 0xFA, 0x06, 0x80, 0x43, 0x60, 0x2F, 0xFF, 0xC0,
  0xE0, 0x25, 0x09, 0xFF, 0xFC, 0x07, 0x60, 0xAF, 0xFF, 0xB0, 0x37, 0x02, 0x06, 0x80, 0xA1, 0x70,
  0x35,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_dry() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 32, 34), Box(0, 0, 35, 35),
      ic_round_36_places_dry_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_elevator 36x36, 4-bit Alpha,  RLE, 171 bytes.
static const uint8_t ic_round_36_places_elevator_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x27, 0x04, 0x30, 0x9F, 0xFF, 0xB8, 0x19, 0x04, 0xFF, 0xFD, 0x04, 0x07, 0xFF,
  0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xE8, 0x28, 0x03, 0xDF, 0xFA, 0x00, 0x7D, 0x0E, 0x30, 0x7F,
  0xFA, 0x00, 0x7E, 0x01, 0x20, 0x8F, 0x0A, 0x04, 0xF0, 0x07, 0xE8, 0x1B, 0x47, 0xF8, 0x2E, 0x10,
  0x7E, 0x00, 0x7F, 0xFA, 0x05, 0x30, 0xCD, 0x00, 0x7D, 0x84, 0xB5, 0x34, 0x7E, 0xC0, 0xB4, 0x03,
  0xD0, 0x07, 0xC0, 0x95, 0x02, 0xC0, 0x35, 0x0A, 0xC0, 0x07, 0xC0, 0x26, 0x0A, 0xB0, 0xA8, 0x01,
  0x70, 0xEC, 0x00, 0x7C, 0x70, 0x7F, 0xF0, 0x07, 0xC7, 0x07, 0xFF, 0x00, 0x7C, 0x70, 0x8B, 0x0A,
  0x80, 0x17, 0x0E, 0xC0, 0x07, 0xC0, 0x75, 0x02, 0x0D, 0xB0, 0x35, 0x0B, 0xC0, 0x07, 0xD0, 0x74,
  0xD0, 0xB4, 0x04, 0xD0, 0x07, 0xD0, 0x74, 0xE0, 0x53, 0x0D, 0xD0, 0x07, 0xD0, 0x74, 0xE8, 0x2E,
  0x10, 0x7E, 0x00, 0x7D, 0x07, 0x4F, 0x0A, 0x04, 0xF0, 0x07, 0xD0, 0x84, 0xFF, 0xA0, 0x07, 0xD0,
  0xD0, 0x22, 0x07, 0xFF, 0xA0, 0x07, 0xFF, 0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x70, 0x4F, 0xFF, 0xD8,
  0x14, 0x09, 0xFF, 0xFB, 0x09, 0x30, 0x48, 0x0A, 0x27, 0x04, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_elevator() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_round_36_places_elevator_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_escalator 36x36, 4-bit Alpha,  RLE, 157 bytes.
static const uint8_t ic_round_36_places_escalator_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x27, 0x04, 0x30, 0x9F, 0xFF, 0xB8, 0x19, 0x04, 0xFF, 0xFD, 0x04, 0x07, 0xFF,
  0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0x90, 0x65, 0x04, 0x0E, 0xB0, 0x07, 0xFF, 0x0A, 0x70,
  0x6B, 0x00, 0x7F, 0xF0, 0x27, 0x04, 0xB0, 0x07, 0xFE, 0x09, 0x71, 0x0A, 0xB0, 0x07, 0xFD, 0x0E,
  0x01, 0x38, 0x31, 0x77, 0x8C, 0xC0, 0x07, 0xFD, 0x07, 0x40, 0x9F, 0x90, 0x07, 0xFC, 0x0D, 0x40,
  0x2F, 0xA0, 0x07, 0xFC, 0x05, 0x40, 0xBF, 0xA0, 0x07, 0xFB, 0x0C, 0x40, 0x4F, 0xB0, 0x07, 0xFB,
  0x04, 0x40, 0xCF, 0xB0, 0x07, 0xFA, 0x0B, 0x40, 0x5F, 0xC0, 0x07, 0xFA, 0x02, 0x40, 0xDF, 0xC0,
  0x07, 0xF9, 0x09, 0x40, 0x7F, 0xD0, 0x07, 0xC8, 0x3C, 0x87, 0x71, 0x30, 0x10, 0xEF, 0xD0, 0x07,
  0xB0, 0xA7, 0x10, 0x9F, 0xE0, 0x07, 0xB0, 0x47, 0x02, 0xFF, 0x00, 0x7B, 0x06, 0x70, 0xAF, 0xF0,
  0x07, 0xB0, 0xE0, 0x45, 0x06, 0xFF, 0x90, 0x07, 0xFF, 0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x70, 0x4F,
  0xFF, 0xD8, 0x14, 0x09, 0xFF, 0xFB, 0x09, 0x30, 0x48, 0x0A, 0x27, 0x04, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_escalator() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_round_36_places_escalator_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_escalator_warning 36x36, 4-bit Alpha,  RLE, 186 bytes.
static const uint8_t ic_round_36_places_escalator_warning_data[] PROGMEM = {
  0x38, 0x31, 0xAE, 0xD5, 0x77, 0x70, 0xCC, 0x04, 0x77, 0x50, 0x2D, 0x0A, 0x77, 0x50, 0x2D, 0x0A,
  0x77, 0x60, 0xCC, 0x04, 0x77, 0x68, 0x31, 0xAE, 0xD5, 0x80, 0xD2, 0x00, 0x48, 0x01, 0x70, 0x60,
  0x17, 0x73, 0x09, 0xF0, 0xE0, 0x37, 0x71, 0x04, 0xFA, 0x0D, 0x71, 0x83, 0x1B, 0xEB, 0x12, 0x07,
  0xFB, 0x06, 0x70, 0x8B, 0x08, 0x20, 0x7F, 0xB0, 0xE0, 0x16, 0x0A, 0xB0, 0xA2, 0x07, 0xFC, 0x09,
  0x60, 0x4B, 0x04, 0x20, 0x7F, 0xD0, 0x26, 0x81, 0x37, 0x33, 0x07, 0xFA, 0x0D, 0xA0, 0xB7, 0x50,
  0x7F, 0xA0, 0x6B, 0x05, 0x20, 0x10, 0xBD, 0x81, 0xC2, 0x7F, 0xA0, 0x30, 0x8A, 0x0D, 0x20, 0xCF,
  0x0C, 0x07, 0xFA, 0x81, 0x30, 0xEA, 0x07, 0x08, 0xFA, 0x05, 0xFA, 0x81, 0x30, 0x6A, 0x0E, 0xFB,
  0x10, 0x50, 0x9F, 0x03, 0x20, 0xCC, 0x0D, 0xF2, 0x03, 0xF0, 0x32, 0x03, 0x0D, 0xA0, 0x90, 0x7F,
  0x20, 0x3F, 0x03, 0x70, 0x7E, 0x0D, 0x20, 0x3F, 0x03, 0x70, 0x7D, 0x0B, 0x02, 0x20, 0x3F, 0x03,
  0x70, 0x7D, 0x07, 0x30, 0x3F, 0x03, 0x70, 0x7D, 0x07, 0x30, 0x3F, 0x03, 0x70, 0x7D, 0x07, 0x30,
  0x3F, 0x03, 0x70, 0x7D, 0x07, 0x30, 0x3F, 0x03, 0x70, 0x7D, 0x07, 0x30, 0x3F, 0x03, 0x70, 0x7D,
  0x07, 0x40, 0xBD, 0x0B, 0x71, 0x02, 0x0D, 0xB0, 0xD0, 0x21,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_escalator_warning() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 3, 29, 32), Box(0, 0, 35, 35),
      ic_round_36_places_escalator_warning_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_family_restroom 36x36, 4-bit Alpha,  RLE, 236 bytes.
static const uint8_t ic_round_36_places_family_restroom_data[] PROGMEM = {
  0x38, 0x35, 0xDE, 0xA1, 0x77, 0x82, 0x8E, 0xE8, 0x70, 0x4C, 0x0C, 0x76, 0x08, 0xC0, 0x86, 0x0A,
  0xD0, 0x27, 0x50, 0xDC, 0x0D, 0x60, 0xAD, 0x02, 0x75, 0x0D, 0xC0, 0xD6, 0x04, 0xC0, 0xC7, 0x60,
  0x8C, 0x08, 0x78, 0x35, 0xDE, 0xA1, 0x77, 0x82, 0x8E, 0xE8, 0x80, 0xC1, 0x00, 0x10, 0x68, 0x01,
  0x70, 0x47, 0x68, 0x22, 0x66, 0x25, 0x03, 0x0E, 0xF0, 0x97, 0x40, 0x4C, 0x04, 0x40, 0xBF, 0xA0,
  0x44, 0x03, 0x01, 0x40, 0xDC, 0x0D, 0x4F, 0xB0, 0x73, 0x0C, 0xA0, 0x52, 0x03, 0xE0, 0x33, 0xFB,
  0x07, 0x20, 0x6B, 0x0D, 0x20, 0x9E, 0x09, 0x3F, 0xB0, 0x72, 0x06, 0xB0, 0xD2, 0x0E, 0xE0, 0xE3,
  0xFB, 0x07, 0x30, 0xCA, 0x82, 0x50, 0x1D, 0xF0, 0x32, 0xFB, 0x07, 0x40, 0x30, 0x13, 0x01, 0x0D,
  0xE0, 0x92, 0xFB, 0x07, 0x20, 0x18, 0x00, 0x33, 0x03, 0xE0, 0xE2, 0xFB, 0x81, 0x70, 0x5D, 0x0C,
  0x30, 0xBE, 0x03, 0x1F, 0xB8, 0x17, 0x0D, 0xE0, 0x62, 0x08, 0xE8, 0x19, 0x0D, 0xFA, 0x05, 0x1F,
  0x07, 0x20, 0x7E, 0x83, 0xE0, 0x27, 0xDD, 0x09, 0x05, 0x2F, 0x07, 0x20, 0x7F, 0x01, 0x20, 0xBD,
  0x03, 0x3F, 0x07, 0x20, 0x7E, 0x0A, 0x30, 0xBD, 0x03, 0x3F, 0x07, 0x20, 0x7C, 0x60, 0xBD, 0x03,
  0x3F, 0x07, 0x20, 0x7C, 0x60, 0xBD, 0x03, 0x30, 0x8D, 0x0D, 0x02, 0x20, 0x7C, 0x60, 0xBD, 0x03,
  0x40, 0x7C, 0x40, 0x7C, 0x60, 0xBD, 0x03, 0x40, 0x7C, 0x40, 0x7C, 0x60, 0xBD, 0x03, 0x40, 0x7C,
  0x40, 0x7C, 0x60, 0xBD, 0x03, 0x40, 0x7C, 0x40, 0x7C, 0x60, 0xBD, 0x03, 0x40, 0x7C, 0x40, 0x7C,
  0x60, 0x40, 0xEB, 0x0B, 0x50, 0x20, 0xDA, 0x08, 0x40, 0x7B, 0x08, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_family_restroom() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 33, 32), Box(0, 0, 35, 35),
      ic_round_36_places_family_restroom_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_fence 36x36, 4-bit Alpha,  RLE, 202 bytes.
static const uint8_t ic_round_36_places_fence_data[] PROGMEM = {
  0x70, 0x03, 0x40, 0x03, 0x40, 0x03, 0x76, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x77,
  0x40, 0x7C, 0x00, 0x7C, 0x00, 0x7C, 0x07, 0x72, 0x07, 0xFF, 0xC0, 0x77, 0x05, 0xB0, 0x0B, 0xC0,
  0x0B, 0xC0, 0x0B, 0xB0, 0x56, 0x07, 0xA0, 0xB2, 0x0B, 0xA0, 0xB2, 0x0B, 0xA0, 0xB2, 0x0B, 0xA0,
  0x76, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x72,
  0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07,
  0xA0, 0x72, 0x07, 0xA0, 0x73, 0x02, 0x0D, 0xFF, 0xFB, 0x81, 0xD2, 0x6F, 0xFF, 0xD8, 0x16, 0x2D,
  0xFF, 0xFB, 0x0D, 0x02, 0x30, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x60, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x60, 0x7A, 0x07, 0x20,
  0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x30, 0x20, 0xDF, 0xFF, 0xB8, 0x1D, 0x26, 0xFF,
  0xFD, 0x81, 0x62, 0xDF, 0xFF, 0xB0, 0xD0, 0x23, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x76,
  0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x76, 0x07, 0xFF, 0xE0, 0x76,
  0x07, 0xFF, 0xE0, 0x76, 0x02, 0x0D, 0xFF, 0xC0, 0xD0, 0x23,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_fence() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 6, 31, 29), Box(0, 0, 35, 35),
      ic_round_36_places_fence_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_fire_extinguisher 36x36, 4-bit Alpha,  RLE, 127 bytes.
static const uint8_t ic_round_36_places_fire_extinguisher_data[] PROGMEM = {
  0x72, 0x82, 0x36, 0x62, 0x30, 0x17, 0x30, 0xAC, 0x84, 0xAA, 0xDF, 0xE3, 0x70, 0xAF, 0xB0, 0x72,
  0x82, 0x25, 0x8C, 0xC0, 0x09, 0xE8, 0x17, 0x3E, 0xF0, 0x92, 0x0A, 0xD8, 0x17, 0x3E, 0xF0, 0x92,
  0x09, 0xD0, 0x72, 0x82, 0x25, 0x8C, 0xC0, 0x09, 0xE0, 0x77, 0x0A, 0xFB, 0x07, 0x70, 0x20, 0xED,
  0x83, 0xBD, 0xFE, 0x36, 0x06, 0x0E, 0xE8, 0x1E, 0x61, 0x70, 0x7F, 0xB0, 0x76, 0x04, 0xFD, 0x03,
  0x50, 0xCF, 0xD0, 0xC4, 0x02, 0xFF, 0x02, 0x77, 0x71, 0x03, 0x80, 0x92, 0x70, 0x33, 0x07, 0xFF,
  0x07, 0x30, 0x7F, 0xF0, 0x73, 0x07, 0xFF, 0x07, 0x30, 0x7F, 0xF0, 0x73, 0x07, 0xFF, 0x07, 0x30,
  0x7F, 0xF0, 0x73, 0x07, 0xFF, 0x07, 0x77, 0x71, 0x03, 0x80, 0x92, 0x70, 0x33, 0x07, 0xFF, 0x07,
  0x30, 0x6F, 0xF0, 0x63, 0x01, 0x0E, 0xFD, 0x0E, 0x01, 0x40, 0x30, 0xBF, 0xB0, 0xB0, 0x31,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_fire_extinguisher() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(7, 4, 25, 32), Box(0, 0, 35, 35),
      ic_round_36_places_fire_extinguisher_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_fitness_center 36x36, 4-bit Alpha,  RLE, 186 bytes.
static const uint8_t ic_round_36_places_fitness_center_data[] PROGMEM = {
  0x71, 0x05, 0x01, 0x20, 0x40, 0x27, 0x74, 0x01, 0x03, 0x28, 0x41, 0xDF, 0xE2, 0x9A, 0x02, 0x77,
  0x28, 0x41, 0xEF, 0x91, 0xDF, 0x04, 0x77, 0x20, 0x3B, 0x0E, 0xF0, 0x97, 0x74, 0x09, 0xFA, 0x09,
  0x77, 0x50, 0x10, 0xEF, 0x09, 0x77, 0x50, 0x10, 0xDF, 0x09, 0x77, 0x60, 0xDF, 0x0D, 0x77, 0x60,
  0x5F, 0xA0, 0x97, 0x75, 0x01, 0x0D, 0xD0, 0xDB, 0x09, 0x77, 0x50, 0x2C, 0x81, 0x90, 0x9B, 0x09,
  0x77, 0x40, 0x9B, 0x09, 0x30, 0x9B, 0x09, 0x77, 0x20, 0x4B, 0x09, 0x50, 0x9B, 0x09, 0x77, 0x10,
  0x2A, 0x09, 0x70, 0x9B, 0x09, 0x77, 0x10, 0x20, 0x47, 0x20, 0x9B, 0x09, 0x77, 0x75, 0x09, 0xB0,
  0x97, 0x20, 0x40, 0x27, 0x71, 0x09, 0xB0, 0x97, 0x09, 0xA0, 0x27, 0x71, 0x09, 0xB0, 0x95, 0x09,
  0xB0, 0x47, 0x72, 0x09, 0xB0, 0x93, 0x09, 0xB0, 0x97, 0x74, 0x09, 0xB8, 0x19, 0x09, 0xC0, 0x27,
  0x75, 0x09, 0xB0, 0xDD, 0x0D, 0x01, 0x77, 0x50, 0x9F, 0xA0, 0x57, 0x76, 0x0D, 0xF0, 0xD7, 0x76,
  0x09, 0xF0, 0xC0, 0x17, 0x75, 0x09, 0xF0, 0xE0, 0x17, 0x75, 0x09, 0xFA, 0x09, 0x77, 0x40, 0x9F,
  0x0E, 0xB0, 0x37, 0x72, 0x04, 0xF8, 0x4C, 0x19, 0xFE, 0x17, 0x72, 0x02, 0xA8, 0x49, 0x2E, 0xFC,
  0x12, 0x03, 0x01, 0x77, 0x40, 0x20, 0x42, 0x01, 0x05, 0x71,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_fitness_center() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_round_36_places_fitness_center_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_food_bank 36x36, 4-bit Alpha,  RLE, 149 bytes.
static const uint8_t ic_round_36_places_food_bank_data[] PROGMEM = {
  0x73, 0x82, 0x4A, 0xA4, 0x77, 0x50, 0x9C, 0x09, 0x77, 0x20, 0x20, 0xCE, 0x0C, 0x02, 0x76, 0x05,
  0x0E, 0xF9, 0x0E, 0x05, 0x74, 0x09, 0xFD, 0x09, 0x71, 0x02, 0x0C, 0xFF, 0x0C, 0x02, 0x50, 0x50,
  0xEF, 0xFA, 0x0E, 0x05, 0x30, 0x9F, 0xFE, 0x81, 0x90, 0x8F, 0xFF, 0x90, 0x80, 0xED, 0x89, 0x1E,
  0x5E, 0x6B, 0x99, 0xFE, 0x7C, 0xE0, 0xEE, 0x89, 0x1B, 0x0B, 0x07, 0x33, 0xE2, 0x07, 0xFE, 0x86,
  0xB0, 0xB0, 0x73, 0x39, 0x20, 0x7F, 0xE8, 0x6B, 0x0B, 0x07, 0x33, 0x72, 0x07, 0xFE, 0x86, 0xB0,
  0x80, 0x52, 0x37, 0x20, 0x7F, 0xE0, 0xE5, 0x06, 0x07, 0x20, 0x7F, 0xF0, 0x90, 0x12, 0x81, 0x4E,
  0x72, 0x07, 0xFF, 0xA1, 0x07, 0xA8, 0x2B, 0x40, 0x7F, 0xFA, 0x10, 0x7C, 0x10, 0x7F, 0xFA, 0x10,
  0x7C, 0x10, 0x7F, 0xFA, 0x10, 0x7C, 0x10, 0x7F, 0xFA, 0x10, 0x7C, 0x10, 0x7F, 0xFA, 0x02, 0x0A,
  0xC0, 0x20, 0xA8, 0x0E, 0x3F, 0x0B, 0xFF, 0xF9, 0x81, 0xB3, 0xEF, 0xFE, 0x83, 0xE3, 0x01, 0x68,
  0x09, 0x67, 0x06, 0x01, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_food_bank() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 5, 29, 31), Box(0, 0, 35, 35),
      ic_round_36_places_food_bank_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_foundation 36x36, 4-bit Alpha,  RLE, 215 bytes.
static const uint8_t ic_round_36_places_foundation_data[] PROGMEM = {
  0x75, 0x82, 0x3D, 0xD3, 0x77, 0x72, 0x04, 0x0E, 0xA0, 0xE0, 0x47, 0x77, 0x05, 0xE0, 0x57, 0x75,
  0x07, 0xF9, 0x07, 0x77, 0x30, 0x8F, 0xB0, 0x87, 0x71, 0x09, 0xB0, 0xB0, 0x8A, 0x08, 0x0B, 0xB0,
  0xA7, 0x60, 0xBB, 0x81, 0xA0, 0x7A, 0x81, 0x70, 0xAB, 0x0B, 0x73, 0x01, 0x0C, 0xB0, 0x92, 0x07,
  0xA0, 0x72, 0x09, 0xB0, 0xC0, 0x17, 0x02, 0x0D, 0xB0, 0x73, 0x07, 0xA0, 0x73, 0x07, 0xB0, 0xD0,
  0x25, 0x03, 0x0E, 0xB0, 0x54, 0x07, 0xA0, 0x74, 0x05, 0xB0, 0xE0, 0x33, 0x04, 0x0E, 0xB0, 0x85,
  0x07, 0xA0, 0x75, 0x08, 0xB8, 0x2E, 0x40, 0x5D, 0x07, 0x50, 0x7A, 0x07, 0x50, 0x7D, 0x05, 0x09,
  0xD0, 0x75, 0x07, 0xA0, 0x75, 0x07, 0xD0, 0xA3, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x75, 0x07, 0xA0,
  0x76, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x75,
  0x07, 0xA0, 0x76, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x74, 0x81, 0x57, 0xBA, 0x0B,
  0x80, 0x17, 0x0B, 0xA0, 0xB8, 0x01, 0x70, 0xBA, 0x83, 0xB7, 0x50, 0x5F, 0xFF, 0xD0, 0x05, 0xFF,
  0xFD, 0x83, 0x50, 0x57, 0xBA, 0x0B, 0x80, 0x17, 0x0B, 0xA0, 0xB8, 0x01, 0x70, 0xBA, 0x81, 0xB7,
  0x54, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x75,
  0x07, 0xA0, 0x76, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x76, 0x82, 0x2D, 0xD2, 0x58,
  0x22, 0xDD, 0x25, 0x82, 0x2D, 0xD2, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_foundation() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 5, 31, 29), Box(0, 0, 35, 35),
      ic_round_36_places_foundation_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_free_breakfast 36x36, 4-bit Alpha,  RLE, 98 bytes.
static const uint8_t ic_round_36_places_free_breakfast_data[] PROGMEM = {
  0x10, 0x10, 0x68, 0x0A, 0x17, 0x83, 0x61, 0x03, 0xEF, 0xFF, 0xA8, 0x1E, 0x3B, 0xFF, 0xFC, 0x0B,
  0xFF, 0xF0, 0xF7, 0xFF, 0xFB, 0x3F, 0xFF, 0xB3, 0xFF, 0xFB, 0x3F, 0xFF, 0xB3, 0xFF, 0xFF, 0x90,
  0xDF, 0xFF, 0xD0, 0x8F, 0xFF, 0xB0, 0xD0, 0x81, 0xFF, 0xF6, 0xFF, 0xF6, 0xFF, 0xF6, 0xFF, 0xF6,
  0xFF, 0xF6, 0x0D, 0xFF, 0xD0, 0xD6, 0x09, 0xFF, 0xD0, 0x96, 0x02, 0xFF, 0xD0, 0x27, 0x06, 0xFF,
  0xB0, 0x67, 0x20, 0x50, 0xDF, 0xE0, 0xD0, 0x57, 0x50, 0x48, 0x07, 0x70, 0x48, 0x0F, 0x40, 0x02,
  0x80, 0xA2, 0x70, 0x23, 0x0D, 0xFF, 0xF9, 0x0D, 0x30, 0xDF, 0xFF, 0x90, 0xD3, 0x02, 0x80, 0xA2,
  0x70, 0x23,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_free_breakfast() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 32, 31), Box(0, 0, 35, 35),
      ic_round_36_places_free_breakfast_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_gite 36x36, 4-bit Alpha,  RLE, 101 bytes.
static const uint8_t ic_round_36_places_gite_data[] PROGMEM = {
  0x78, 0x22, 0xDD, 0x27, 0x77, 0x50, 0x7A, 0x07, 0x77, 0x75, 0x07, 0xA0, 0x77, 0x77, 0x30, 0x50,
  0xDF, 0xFA, 0x0D, 0x05, 0x72, 0x07, 0xFF, 0xE0, 0x77, 0x07, 0xFF, 0xF9, 0x07, 0x50, 0x7F, 0xFF,
  0xB0, 0x73, 0x07, 0xFF, 0xF0, 0x0B, 0xB8, 0x17, 0x05, 0xFF, 0xF0, 0xB2, 0x0B, 0xB0, 0x50, 0xDF,
  0xFE, 0x0B, 0x40, 0xBA, 0x0D, 0xFF, 0xF6, 0xFF, 0xFB, 0x6E, 0x77, 0x1B, 0x6E, 0x77, 0x1B, 0x6E,
  0x77, 0x1B, 0x6E, 0x77, 0x1B, 0x6E, 0x77, 0x1B, 0x6E, 0x77, 0x1B, 0x6E, 0x77, 0x1B, 0x6E, 0x80,
  0x93, 0x7B, 0x80, 0x27, 0xB0, 0xBF, 0xFF, 0xF8, 0x1B, 0x3E, 0xFF, 0xFD, 0x83, 0xE3, 0x01, 0x68,
  0x0A, 0x47, 0x06, 0x01, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_gite() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 32, 28), Box(0, 0, 35, 35),
      ic_round_36_places_gite_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_golf_course 36x36, 4-bit Alpha,  RLE, 163 bytes.
static const uint8_t ic_round_36_places_golf_course_data[] PROGMEM = {
  0x78, 0x32, 0xEE, 0x81, 0x77, 0x70, 0x7B, 0x81, 0xE8, 0x17, 0x75, 0x07, 0xE0, 0x80, 0x17, 0x73,
  0x07, 0xF9, 0x09, 0x77, 0x20, 0x7F, 0xA0, 0x87, 0x71, 0x07, 0xFA, 0x06, 0x77, 0x10, 0x7F, 0x0D,
  0x06, 0x77, 0x20, 0x7D, 0x0E, 0x06, 0x77, 0x40, 0x7B, 0x0E, 0x07, 0x77, 0x60, 0x7A, 0x0A, 0x77,
  0x71, 0x07, 0xA0, 0x77, 0x77, 0x10, 0x7A, 0x07, 0x77, 0x71, 0x07, 0xA0, 0x77, 0x77, 0x10, 0x7A,
  0x07, 0x77, 0x71, 0x07, 0xA0, 0x77, 0x77, 0x10, 0x7A, 0x07, 0x77, 0x71, 0x07, 0xA0, 0x77, 0x77,
  0x10, 0x7A, 0x07, 0x77, 0x71, 0x07, 0xA0, 0x77, 0x77, 0x10, 0x7A, 0x07, 0x77, 0x71, 0x07, 0xA0,
  0x77, 0x77, 0x10, 0x7A, 0x07, 0x77, 0x71, 0x07, 0xA0, 0x77, 0x73, 0x81, 0x15, 0x42, 0x07, 0xA8,
  0x4E, 0xDB, 0x95, 0x15, 0x85, 0x3C, 0xE8, 0x01, 0x9A, 0x08, 0x20, 0x8F, 0x90, 0x90, 0x13, 0x0C,
  0xB0, 0x40, 0xCB, 0x82, 0xD2, 0x2D, 0xFA, 0x0C, 0x30, 0xEB, 0x06, 0x0C, 0xFF, 0xA0, 0xC3, 0x08,
  0xA8, 0x2E, 0x11, 0x9F, 0xF0, 0x90, 0x14, 0x81, 0x46, 0x13, 0x83, 0x15, 0x8B, 0xDC, 0x83, 0xDB,
  0x85, 0x17, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_golf_course() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 31, 32), Box(0, 0, 35, 35),
      ic_round_36_places_golf_course_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_grass 36x36, 4-bit Alpha,  RLE, 177 bytes.
static const uint8_t ic_round_36_places_grass_data[] PROGMEM = {
  0x71, 0x02, 0x08, 0x77, 0x77, 0x82, 0x5F, 0xC1, 0x77, 0x76, 0x81, 0xDF, 0xC7, 0x38, 0x11, 0x62,
  0x77, 0x07, 0xA0, 0x97, 0x01, 0x09, 0xA0, 0x67, 0x70, 0x2B, 0x04, 0x50, 0x40, 0xEA, 0x09, 0x77,
  0x20, 0xEA, 0x0B, 0x40, 0x6B, 0x0B, 0x77, 0x30, 0xBA, 0x0E, 0x30, 0x5B, 0x0E, 0x01, 0x77, 0x30,
  0x9A, 0x08, 0x20, 0x10, 0xEB, 0x06, 0x77, 0x40, 0x8A, 0x01, 0x20, 0x9B, 0x0D, 0x77, 0x58, 0x18,
  0xFB, 0x20, 0x1B, 0x0E, 0x05, 0x77, 0x58, 0x11, 0xA7, 0x20, 0x6A, 0x0A, 0x01, 0x75, 0x84, 0x9E,
  0xDA, 0x61, 0x78, 0x1A, 0xF7, 0x48, 0x41, 0x7A, 0xDF, 0x94, 0x04, 0x0E, 0xC0, 0x90, 0x15, 0x0D,
  0x05, 0x30, 0x10, 0x9C, 0x0E, 0x04, 0x50, 0x10, 0xAC, 0x0E, 0x04, 0x40, 0x63, 0x05, 0x0E, 0xC0,
  0xA0, 0x17, 0x10, 0x9D, 0x06, 0x60, 0x6D, 0x09, 0x74, 0x0A, 0xD0, 0x44, 0x05, 0xD0, 0xA7, 0x50,
  0x10, 0xEC, 0x0E, 0x01, 0x20, 0x10, 0xEC, 0x0E, 0x01, 0x76, 0x05, 0xD0, 0x92, 0x01, 0xD0, 0x57,
  0x71, 0x0E, 0xD0, 0x12, 0x0B, 0xB0, 0xE7, 0x72, 0x08, 0xD0, 0x62, 0x06, 0xB0, 0x87, 0x10, 0x8F,
  0xE0, 0xB2, 0x03, 0xFC, 0x08, 0x0E, 0xFE, 0x0D, 0x20, 0x2F, 0xC0, 0xE0, 0x8F, 0xE0, 0xE3, 0xFC,
  0x08,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_grass() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 7, 32, 29), Box(0, 0, 35, 35),
      ic_round_36_places_grass_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_holiday_village 36x36, 4-bit Alpha,  RLE, 162 bytes.
static const uint8_t ic_round_36_places_holiday_village_data[] PROGMEM = {
  0x71, 0x00, 0x35, 0x82, 0x3D, 0xC1, 0x58, 0x19, 0xE6, 0x73, 0x07, 0xA0, 0x74, 0x08, 0xA0, 0xD0,
  0x13, 0x01, 0xB0, 0x77, 0x10, 0x7C, 0x07, 0x30, 0x3B, 0x0D, 0x01, 0x30, 0xAB, 0x07, 0x60, 0x7E,
  0x07, 0x30, 0x4B, 0x0D, 0x01, 0x30, 0xBB, 0x06, 0x40, 0x7F, 0x90, 0x73, 0x04, 0xB0, 0xD0, 0x13,
  0x0B, 0xA0, 0xE3, 0x07, 0xFB, 0x07, 0x30, 0x4B, 0x0D, 0x01, 0x20, 0x1B, 0x20, 0x7F, 0xD0, 0x73,
  0x04, 0xB0, 0xC3, 0xB1, 0x07, 0xFF, 0x07, 0x30, 0x5B, 0x3B, 0x07, 0xFF, 0xA0, 0x73, 0xB3, 0xB0,
  0xEF, 0xFA, 0x0E, 0x3B, 0x3F, 0xC0, 0x09, 0xF9, 0x3B, 0x3F, 0xB0, 0x92, 0x09, 0xF3, 0xB3, 0xFB,
  0x09, 0x20, 0x9F, 0x3B, 0x3F, 0xC0, 0x09, 0xF9, 0x3B, 0x3F, 0xFF, 0x3B, 0x3F, 0xFF, 0x3B, 0x3F,
  0xC0, 0x09, 0xF9, 0x3B, 0x3F, 0xB0, 0x92, 0x09, 0xF3, 0xB3, 0xFB, 0x07, 0x20, 0x7F, 0x3B, 0x3F,
  0xB0, 0x72, 0x07, 0xF3, 0xB3, 0xFB, 0x07, 0x20, 0x7F, 0x3B, 0x3F, 0xB0, 0x72, 0x07, 0xF3, 0xB3,
  0xFB, 0x07, 0x20, 0x7F, 0x3B, 0x3B, 0x08, 0xE0, 0x72, 0x07, 0xE0, 0x83, 0x81, 0x8E, 0x83, 0x81,
  0x8E, 0x80,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_holiday_village() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 32, 29), Box(0, 0, 35, 35),
      ic_round_36_places_holiday_village_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_hot_tub 36x36, 4-bit Alpha,  RLE, 255 bytes.
static const uint8_t ic_round_36_places_hot_tub_data[] PROGMEM = {
  0x77, 0x18, 0x12, 0x71, 0x38, 0x12, 0x71, 0x77, 0x78, 0x1D, 0xFB, 0x38, 0x1D, 0xFB, 0x74, 0x83,
  0x3B, 0xEB, 0x35, 0x81, 0xEF, 0xD3, 0x81, 0xEF, 0xD7, 0x30, 0x10, 0xEB, 0x0E, 0x01, 0x40, 0xCA,
  0x02, 0x20, 0xCA, 0x02, 0x72, 0x06, 0xD0, 0x64, 0x07, 0xA0, 0xB2, 0x07, 0xA0, 0xB7, 0x20, 0x6D,
  0x06, 0x50, 0xDA, 0x08, 0x20, 0xDA, 0x08, 0x71, 0x01, 0x0E, 0xB0, 0xE0, 0x15, 0x03, 0x0E, 0xA8,
  0x23, 0x03, 0xEA, 0x03, 0x71, 0x83, 0x3B, 0xEB, 0x37, 0x06, 0xA0, 0xA2, 0x06, 0xA0, 0xA7, 0x77,
  0xA0, 0xD3, 0xA0, 0xD7, 0x28, 0x22, 0x66, 0x17, 0x10, 0xCA, 0x30, 0xCA, 0x71, 0x06, 0xB0, 0xE0,
  0x47, 0x81, 0x6E, 0x83, 0x81, 0x6E, 0x87, 0x02, 0xE0, 0x37, 0x77, 0x10, 0x6E, 0x0E, 0x02, 0x77,
  0x70, 0x7F, 0x0E, 0x03, 0x77, 0x20, 0x8F, 0xFF, 0xF0, 0x88, 0x0F, 0x4F, 0x82, 0xD2, 0x2D, 0xA8,
  0x2D, 0x22, 0xDA, 0x82, 0xD2, 0x2D, 0xA8, 0x2D, 0x22, 0xDF, 0x90, 0x82, 0x08, 0xA0, 0x82, 0x08,
  0xA0, 0x82, 0x08, 0xA0, 0x82, 0x08, 0xF9, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A,
  0x07, 0x20, 0x7F, 0x90, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xF9,
  0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7F, 0x90, 0x72, 0x07, 0xA0,
  0x72, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x72, 0x07, 0xF9, 0x07, 0x20, 0x7A, 0x07, 0x20, 0x7A, 0x07,
  0x20, 0x7A, 0x07, 0x20, 0x7F, 0x90, 0x82, 0x08, 0xA0, 0x82, 0x08, 0xA0, 0x82, 0x08, 0xA0, 0x82,
  0x08, 0xF9, 0x82, 0xD2, 0x2D, 0xA8, 0x2D, 0x22, 0xDA, 0x82, 0xD2, 0x2D, 0xA8, 0x2D, 0x22, 0xDC,
  0x0D, 0xFF, 0xFF, 0x0D, 0x08, 0xFF, 0xFF, 0x82, 0x80, 0x8D, 0xFF, 0xFB, 0x0D, 0x08, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_hot_tub() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 4, 32, 32), Box(0, 0, 35, 35),
      ic_round_36_places_hot_tub_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_houseboat 36x36, 4-bit Alpha,  RLE, 179 bytes.
static const uint8_t ic_round_36_places_houseboat_data[] PROGMEM = {
  0x77, 0x00, 0x37, 0x77, 0x60, 0x9A, 0x09, 0x77, 0x73, 0x03, 0x0D, 0xC0, 0xD0, 0x37, 0x77, 0x06,
  0xF9, 0x06, 0x77, 0x40, 0x10, 0xAF, 0xB0, 0xA0, 0x17, 0x71, 0x03, 0x0D, 0xFD, 0x0D, 0x03, 0x76,
  0x07, 0xFF, 0xA0, 0x77, 0x30, 0x10, 0xBF, 0xFC, 0x0B, 0x01, 0x71, 0x08, 0xFF, 0xE0, 0x87, 0x10,
  0x6A, 0x0C, 0xFF, 0x0C, 0xA0, 0x67, 0x28, 0x13, 0x27, 0xFF, 0x81, 0x72, 0x37, 0x50, 0x7D, 0x82,
  0xB7, 0x7B, 0xD0, 0x77, 0x18, 0x11, 0x41, 0x30, 0x7D, 0x07, 0x20, 0x7D, 0x07, 0x30, 0x10, 0x43,
  0x82, 0xCF, 0xD1, 0x20, 0x7D, 0x07, 0x20, 0x7D, 0x07, 0x28, 0x21, 0xDF, 0xC2, 0x0D, 0xA8, 0x2D,
  0x87, 0xBD, 0x82, 0xB7, 0x7B, 0xD8, 0x2B, 0x78, 0xDA, 0x0D, 0x20, 0x4F, 0xFF, 0xC0, 0xE0, 0x43,
  0x03, 0x0D, 0xFF, 0xF9, 0x0D, 0x03, 0x60, 0x58, 0x0A, 0x07, 0x05, 0x80, 0xC0, 0x08, 0x46, 0xCE,
  0xFC, 0x64, 0x84, 0x6C, 0xEF, 0xC6, 0x48, 0x46, 0xCE, 0xEC, 0x62, 0x04, 0x0D, 0xE8, 0x2D, 0x98,
  0xDE, 0x82, 0xD9, 0x8D, 0xE8, 0x1D, 0x4D, 0xFF, 0xFF, 0x87, 0xDB, 0xFD, 0x61, 0x16, 0xDC, 0x84,
  0xE6, 0x01, 0x6E, 0xC8, 0x90, 0xD6, 0x01, 0x6E, 0xFB, 0x03, 0x68, 0x24, 0x76, 0x46, 0x82, 0x47,
  0x64, 0x60, 0x31,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_houseboat() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 5, 32, 28), Box(0, 0, 35, 35),
      ic_round_36_places_houseboat_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_house 36x36, 4-bit Alpha,  RLE, 131 bytes.
static const uint8_t ic_round_36_places_house_data[] PROGMEM = {
  0x75, 0x82, 0x3D, 0xD3, 0x77, 0x72, 0x04, 0x0E, 0xA0, 0xE0, 0x43, 0x08, 0xA0, 0xD0, 0x27, 0x60,
  0x5E, 0x05, 0x2C, 0x07, 0x75, 0x07, 0xF9, 0x07, 0x1C, 0x07, 0x74, 0x08, 0xFB, 0x08, 0xC0, 0x77,
  0x30, 0x9F, 0xFA, 0x07, 0x72, 0x0B, 0xFF, 0xB0, 0x77, 0x01, 0x0C, 0xE8, 0x27, 0x11, 0x7F, 0x90,
  0x76, 0x02, 0x0D, 0xE0, 0x74, 0x07, 0xF0, 0x75, 0x03, 0x0E, 0xF0, 0x14, 0x01, 0xF0, 0xE0, 0x33,
  0x04, 0x0E, 0xFF, 0xF9, 0x82, 0xE4, 0x05, 0xFF, 0xFD, 0x05, 0x09, 0xFF, 0xFD, 0x0A, 0x30, 0x7F,
  0xFE, 0x07, 0x60, 0x7F, 0xFE, 0x07, 0x60, 0x7F, 0xFE, 0x07, 0x60, 0x7F, 0x6F, 0x07, 0x60, 0x7F,
  0x6F, 0x07, 0x60, 0x7F, 0x6F, 0x07, 0x60, 0x7F, 0x6F, 0x07, 0x60, 0x7F, 0x6F, 0x07, 0x60, 0x7F,
  0x6F, 0x07, 0x60, 0x7F, 0x6F, 0x07, 0x60, 0x7F, 0x6F, 0x07, 0x60, 0x20, 0xDD, 0x08, 0x60, 0x8D,
  0x0D, 0x02, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_house() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 5, 31, 29), Box(0, 0, 35, 35),
      ic_round_36_places_house_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_house_siding 36x36, 4-bit Alpha,  RLE, 145 bytes.
static const uint8_t ic_round_36_places_house_siding_data[] PROGMEM = {
  0x75, 0x82, 0x3D, 0xD3, 0x77, 0x72, 0x04, 0x0E, 0xA0, 0xE0, 0x47, 0x77, 0x05, 0xE0, 0x57, 0x75,
  0x07, 0xB0, 0x0D, 0xB0, 0x77, 0x73, 0x08, 0xB8, 0x2C, 0x11, 0xCB, 0x08, 0x77, 0x10, 0x9B, 0x0B,
  0x40, 0xBB, 0x0A, 0x76, 0x0B, 0xB0, 0xA6, 0x0A, 0xB0, 0xB7, 0x30, 0x10, 0xCF, 0xFA, 0x0C, 0x01,
  0x70, 0x20, 0xDF, 0xFC, 0x0D, 0x02, 0x50, 0x30, 0xEF, 0xFE, 0x0E, 0x03, 0x30, 0x40, 0xEB, 0x08,
  0x77, 0x08, 0xB8, 0x2E, 0x40, 0x5D, 0x07, 0x77, 0x07, 0xD0, 0x50, 0x9D, 0x07, 0x77, 0x07, 0xD0,
  0xA3, 0x07, 0xFF, 0xE0, 0x76, 0x07, 0xFF, 0xE0, 0x76, 0x07, 0xFF, 0xE0, 0x76, 0x07, 0xA0, 0x77,
  0x70, 0x7A, 0x07, 0x60, 0x7A, 0x07, 0x77, 0x07, 0xA0, 0x76, 0x07, 0xA0, 0x77, 0x70, 0x7A, 0x07,
  0x60, 0x7F, 0xFE, 0x07, 0x60, 0x7F, 0xFE, 0x07, 0x60, 0x7F, 0xFE, 0x07, 0x60, 0x7A, 0x07, 0x77,
  0x07, 0xA0, 0x76, 0x07, 0xA0, 0x77, 0x70, 0x7A, 0x07, 0x68, 0x22, 0xDD, 0x27, 0x78, 0x22, 0xDD,
  0x23,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_house_siding() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 5, 31, 29), Box(0, 0, 35, 35),
      ic_round_36_places_house_siding_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_iron 36x36, 4-bit Alpha,  RLE, 106 bytes.
static const uint8_t ic_round_36_places_iron_data[] PROGMEM = {
  0x77, 0x75, 0x82, 0x7C, 0xE8, 0x73, 0x03, 0x06, 0x80, 0x27, 0x06, 0x02, 0x50, 0xBB, 0x0E, 0x72,
  0x0A, 0xFB, 0x0A, 0x30, 0x7C, 0x08, 0x71, 0x0A, 0xFD, 0x09, 0x20, 0xCA, 0x07, 0x73, 0xB0, 0xA8,
  0x02, 0x70, 0x9B, 0x02, 0x1B, 0x74, 0x81, 0x9E, 0x77, 0x10, 0x9A, 0x06, 0x1B, 0x77, 0x71, 0x07,
  0xA0, 0x71, 0xB7, 0x04, 0x80, 0x92, 0x70, 0xBA, 0x07, 0x1B, 0x50, 0x50, 0xDF, 0xFC, 0x07, 0x1B,
  0x40, 0x6F, 0xFE, 0x07, 0x1B, 0x30, 0x2F, 0xFF, 0x07, 0x1B, 0x30, 0x9F, 0xFF, 0x08, 0x07, 0xA0,
  0xC3, 0x0D, 0xFF, 0xFC, 0x07, 0x3F, 0xFF, 0xC0, 0xB4, 0xFF, 0xFA, 0x0C, 0x07, 0x5F, 0xFF, 0x90,
  0x77, 0xFF, 0xF9, 0x07, 0x70, 0x8F, 0xFE, 0x0D, 0x02, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_iron() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 9, 32, 26), Box(0, 0, 35, 35),
      ic_round_36_places_iron_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_kitchen 36x36, 4-bit Alpha,  RLE, 109 bytes.
static const uint8_t ic_round_36_places_kitchen_data[] PROGMEM = {
  0x10, 0x80, 0xDF, 0xFC, 0x82, 0xD8, 0x08, 0xFF, 0xF9, 0x08, 0x0D, 0xFF, 0xF9, 0x0D, 0xB0, 0x77,
  0x72, 0x07, 0xE3, 0x81, 0x27, 0x27, 0x5E, 0x38, 0x1D, 0xFD, 0x75, 0xE3, 0xB7, 0x5E, 0x3B, 0x75,
  0xE3, 0x81, 0x8E, 0x87, 0x5E, 0x02, 0x77, 0x20, 0x2E, 0x0D, 0x08, 0x80, 0x92, 0x70, 0x80, 0xD8,
  0x0E, 0x2F, 0x0D, 0x80, 0x94, 0x70, 0xDE, 0x02, 0x77, 0x20, 0x2E, 0x38, 0x18, 0xE8, 0x75, 0xE3,
  0xB7, 0x5E, 0x3B, 0x75, 0xE3, 0xB7, 0x5E, 0x3B, 0x75, 0xE3, 0xB7, 0x5E, 0x38, 0x1D, 0xFD, 0x75,
  0xE3, 0x81, 0x27, 0x27, 0x5E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x07, 0x77, 0x20, 0x7B, 0x0D,
  0xFF, 0xF9, 0x0D, 0x08, 0xFF, 0xF9, 0x82, 0x80, 0x8D, 0xFF, 0xC0, 0xD0, 0x81,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_kitchen() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 3, 29, 32), Box(0, 0, 35, 35),
      ic_round_36_places_kitchen_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_meeting_room 36x36, 4-bit Alpha,  RLE, 166 bytes.
static const uint8_t ic_round_36_places_meeting_room_data[] PROGMEM = {
  0x40, 0x58, 0x07, 0x70, 0x27, 0x70, 0x5F, 0xD0, 0xD7, 0x70, 0x7F, 0xFD, 0x0D, 0x02, 0x60, 0x7F,
  0xFE, 0x07, 0x60, 0x7F, 0xFE, 0x07, 0x60, 0x7F, 0xE4, 0x07, 0xA0, 0x76, 0x07, 0xFE, 0x40, 0x7A,
  0x07, 0x60, 0x7F, 0xE4, 0x07, 0xA0, 0x76, 0x07, 0xFE, 0x40, 0x7A, 0x07, 0x60, 0x7F, 0xE4, 0x07,
  0xA0, 0x76, 0x07, 0xFE, 0x40, 0x7A, 0x07, 0x60, 0x7F, 0xE4, 0x07, 0xA0, 0x76, 0x07, 0xF8, 0x1D,
  0x8D, 0xB4, 0x07, 0xA0, 0x76, 0x07, 0xF8, 0x12, 0x02, 0xB4, 0x07, 0xA0, 0x76, 0x07, 0xF8, 0x12,
  0x02, 0xB4, 0x07, 0xA0, 0x76, 0x07, 0xF8, 0x1D, 0x8D, 0xB4, 0x07, 0xA0, 0x76, 0x07, 0xFE, 0x40,
  0x7A, 0x07, 0x60, 0x7F, 0xE4, 0x07, 0xA0, 0x76, 0x07, 0xFE, 0x40, 0x7A, 0x07, 0x60, 0x7F, 0xE4,
  0x07, 0xA0, 0x76, 0x07, 0xFE, 0x40, 0x7A, 0x07, 0x60, 0x7F, 0xE4, 0x07, 0xA0, 0x76, 0x07, 0xFE,
  0x40, 0x7A, 0x07, 0x60, 0x7F, 0xE4, 0x07, 0xA0, 0x74, 0x81, 0x57, 0xBF, 0xE4, 0x07, 0xA8, 0x3B,
  0x75, 0x05, 0xFF, 0xA4, 0x07, 0xD0, 0x05, 0xFF, 0x90, 0xD4, 0x05, 0xD8, 0x15, 0x05, 0x80, 0x92,
  0x70, 0x25, 0x83, 0x57, 0x77, 0x51,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_meeting_room() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_round_36_places_meeting_room_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_microwave 36x36, 4-bit Alpha,  RLE, 141 bytes.
static const uint8_t ic_round_36_places_microwave_data[] PROGMEM = {
  0x10, 0x80, 0xDF, 0xFF, 0xB8, 0x2D, 0x80, 0x8F, 0xFF, 0xF0, 0x80, 0xDF, 0xFF, 0xF0, 0xDB, 0x77,
  0x1F, 0xF9, 0x77, 0x1C, 0x82, 0xB7, 0x7B, 0xF7, 0x71, 0xC0, 0x72, 0x07, 0xF3, 0x83, 0x5C, 0xFD,
  0x77, 0xC0, 0x72, 0x07, 0xF2, 0x01, 0xD8, 0x2D, 0x8C, 0x83, 0xC8, 0x2B, 0x77, 0xBF, 0x20, 0x10,
  0xEF, 0x90, 0x22, 0xFF, 0x93, 0x83, 0x14, 0x16, 0xEB, 0x0C, 0x3F, 0xF9, 0x71, 0x81, 0x57, 0x44,
  0xD0, 0x09, 0xF9, 0x77, 0x1C, 0x09, 0x20, 0x9F, 0x77, 0x1C, 0x09, 0x20, 0x9F, 0x48, 0x14, 0x75,
  0x71, 0xD0, 0x09, 0xF9, 0x30, 0xCB, 0x83, 0xE6, 0x14, 0x23, 0xFF, 0x92, 0x02, 0xF9, 0x0E, 0x01,
  0x2F, 0xF9, 0x38, 0x29, 0xC8, 0xDD, 0x01, 0x2D, 0x00, 0x9F, 0x97, 0x83, 0x7D, 0xFC, 0x53, 0xC0,
  0x92, 0x09, 0xF7, 0x71, 0xC0, 0x92, 0x09, 0xF7, 0x71, 0xD0, 0x09, 0xF9, 0x77, 0x1F, 0xD0, 0xDF,
  0xFF, 0xF0, 0xD0, 0x8F, 0xFF, 0xF8, 0x28, 0x08, 0xDF, 0xFF, 0xB0, 0xD0, 0x81,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_microwave() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 6, 32, 29), Box(0, 0, 35, 35),
      ic_round_36_places_microwave_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_night_shelter 36x36, 4-bit Alpha,  RLE, 140 bytes.
static const uint8_t ic_round_36_places_night_shelter_data[] PROGMEM = {
  0x73, 0x82, 0x4A, 0xA4, 0x77, 0x50, 0x9C, 0x09, 0x77, 0x20, 0x20, 0xCE, 0x0C, 0x02, 0x76, 0x05,
  0x0E, 0xF9, 0x0E, 0x05, 0x74, 0x09, 0xFD, 0x09, 0x71, 0x02, 0x0C, 0xFF, 0x0C, 0x02, 0x50, 0x50,
  0xEF, 0xFA, 0x0E, 0x05, 0x30, 0x9F, 0xFE, 0x81, 0x90, 0x8F, 0xFF, 0x90, 0x80, 0xEF, 0xFF, 0x90,
  0xEF, 0xFF, 0xF0, 0xD0, 0xAF, 0xFF, 0x90, 0x71, 0xFF, 0xF9, 0x07, 0x1A, 0x82, 0xCE, 0xF6, 0x50,
  0x30, 0xCF, 0xA8, 0x67, 0x0F, 0x30, 0x1D, 0x36, 0x01, 0x0D, 0xF9, 0x81, 0x70, 0xC3, 0x08, 0x03,
  0x70, 0x9F, 0x98, 0x27, 0x0E, 0x12, 0x0B, 0x03, 0x70, 0x7F, 0x98, 0x67, 0x0F, 0xD8, 0xBF, 0x37,
  0x07, 0xF9, 0x07, 0x18, 0x01, 0x30, 0x17, 0x07, 0xF9, 0x07, 0x18, 0x09, 0x03, 0x10, 0x7F, 0x90,
  0x71, 0xFD, 0x10, 0x7F, 0x90, 0xA0, 0x2F, 0xD0, 0x20, 0xA8, 0x0E, 0x0F, 0x0B, 0xFF, 0xF9, 0x81,
  0xB3, 0xEF, 0xFE, 0x83, 0xE3, 0x01, 0x68, 0x09, 0x67, 0x06, 0x01, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_night_shelter() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 5, 29, 31), Box(0, 0, 35, 35),
      ic_round_36_places_night_shelter_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_no_backpack 36x36, 4-bit Alpha,  RLE, 170 bytes.
static const uint8_t ic_round_36_places_no_backpack_data[] PROGMEM = {
  0x72, 0x82, 0x8E, 0xC3, 0x68, 0x23, 0xCE, 0x87, 0x20, 0x15, 0x04, 0xB0, 0xC6, 0x0C, 0xB0, 0x46,
  0x82, 0x1D, 0xF7, 0x40, 0x7C, 0x6C, 0x07, 0x60, 0x3B, 0x07, 0x30, 0x3F, 0xF0, 0xD0, 0x56, 0x0B,
  0xB0, 0x73, 0x04, 0xFF, 0x90, 0xB0, 0x15, 0x0B, 0xB0, 0x73, 0x04, 0xFF, 0x90, 0xC6, 0x0B, 0xB0,
  0x73, 0x04, 0xFF, 0x90, 0x56, 0x0D, 0xB0, 0x73, 0x04, 0xFF, 0x0B, 0x60, 0xEC, 0x07, 0x30, 0x4F,
  0xE0, 0xE6, 0xE0, 0x73, 0x04, 0xFE, 0x6F, 0x07, 0x30, 0x4F, 0xD6, 0xF9, 0x07, 0x30, 0x4F, 0xC6,
  0xFA, 0x07, 0x30, 0x4F, 0xB6, 0xFB, 0x07, 0x30, 0x4F, 0xA6, 0xFC, 0x07, 0x30, 0x4F, 0x96, 0xB0,
  0x74, 0x0B, 0xB0, 0x77, 0x07, 0xB6, 0xB6, 0x0B, 0xB0, 0x77, 0xB6, 0xB0, 0x76, 0x0B, 0xB0, 0x76,
  0xB6, 0xFF, 0x90, 0x75, 0xB6, 0xFF, 0xA0, 0x74, 0xB6, 0xFF, 0xB0, 0x73, 0x04, 0xA6, 0xFF, 0xC0,
  0x73, 0x04, 0x96, 0xFF, 0xD0, 0x73, 0x04, 0x6F, 0xFE, 0x07, 0x72, 0xFF, 0xF0, 0x77, 0x1F, 0xFF,
  0x90, 0x77, 0xFF, 0xFA, 0x07, 0x60, 0xDF, 0xFF, 0xA0, 0x75, 0x08, 0xFF, 0xFB, 0x01, 0x50, 0x80,
  0xDF, 0xFC, 0x82, 0xEC, 0xFD, 0x77, 0x77, 0x03, 0x01, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_no_backpack() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 3, 31, 33), Box(0, 0, 35, 35),
      ic_round_36_places_no_backpack_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_no_cell 36x36, 4-bit Alpha,  RLE, 237 bytes.
static const uint8_t ic_round_36_places_no_cell_data[] PROGMEM = {
  0x70, 0x48, 0x09, 0x47, 0x03, 0x74, 0x0A, 0xFF, 0xC0, 0x97, 0x20, 0x1F, 0xFE, 0x04, 0x50, 0x13,
  0x04, 0xFF, 0xD0, 0x73, 0x82, 0x1D, 0xF7, 0x30, 0x4F, 0xFC, 0x07, 0x30, 0x3B, 0x07, 0x30, 0x4F,
  0xFB, 0x07, 0x40, 0xBB, 0x07, 0x30, 0x4F, 0xFA, 0x07, 0x50, 0xBB, 0x07, 0x30, 0x4F, 0xF9, 0x07,
  0x60, 0xBB, 0x07, 0x77, 0x10, 0x7A, 0x07, 0x70, 0xBB, 0x07, 0x77, 0x07, 0xA0, 0x77, 0x10, 0xBB,
  0x07, 0x76, 0x07, 0xA0, 0x77, 0x10, 0x7C, 0x07, 0x75, 0x07, 0xA0, 0x77, 0x10, 0x7D, 0x07, 0x74,
  0x07, 0xA0, 0x77, 0x10, 0x7E, 0x07, 0x73, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x08, 0x0B, 0xB0, 0x77,
  0x20, 0x7A, 0x07, 0x71, 0x07, 0xA8, 0x17, 0x0B, 0xB0, 0x77, 0x10, 0x7A, 0x07, 0x71, 0x07, 0xA0,
  0x72, 0x0B, 0xB0, 0x77, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x30, 0xBB, 0x07, 0x60, 0x7A, 0x07,
  0x71, 0x07, 0xA0, 0x74, 0x0B, 0xB0, 0x75, 0x07, 0xA0, 0x77, 0x10, 0x7A, 0x07, 0x50, 0xBB, 0x07,
  0x40, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x76, 0x0B, 0xB0, 0x73, 0x03, 0xA0, 0x77, 0x10, 0x7A, 0x07,
  0x70, 0xBB, 0x07, 0x38, 0x14, 0xF7, 0x71, 0x07, 0xA0, 0x77, 0x10, 0xBB, 0x07, 0x30, 0x40, 0x77,
  0x10, 0x7A, 0x07, 0x72, 0x0B, 0xB0, 0x77, 0x50, 0x7A, 0x07, 0x73, 0x0B, 0xB0, 0x77, 0x40, 0x7A,
  0x07, 0x74, 0x0B, 0xB0, 0x77, 0x30, 0x7F, 0xFD, 0x07, 0x72, 0x07, 0xFF, 0xE0, 0x77, 0x10, 0x7F,
  0xFF, 0x07, 0x70, 0x7F, 0xFF, 0x90, 0x76, 0x07, 0xFF, 0xFA, 0x01, 0x50, 0x4F, 0xFE, 0x81, 0xCF,
  0xD7, 0x09, 0xFF, 0xC8, 0x2A, 0x03, 0x17, 0x10, 0x48, 0x09, 0x47, 0x04, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_no_cell() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 1, 31, 34), Box(0, 0, 35, 35),
      ic_round_36_places_no_cell_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_no_drinks 36x36, 4-bit Alpha,  RLE, 194 bytes.
static const uint8_t ic_round_36_places_no_drinks_data[] PROGMEM = {
  0x20, 0x14, 0x80, 0xA1, 0x78, 0x42, 0x01, 0xDF, 0x73, 0x04, 0xFF, 0xE8, 0x1E, 0x23, 0xB0, 0x73,
  0x04, 0xFF, 0xE8, 0x16, 0x0A, 0xB0, 0x73, 0x03, 0x80, 0x93, 0x70, 0xDB, 0x04, 0x20, 0xAB, 0x07,
  0x77, 0x30, 0x5B, 0x09, 0x40, 0xAB, 0x07, 0x77, 0x10, 0x4B, 0x0A, 0x60, 0xAB, 0x07, 0x48, 0x06,
  0x70, 0xEA, 0x0C, 0x71, 0x0A, 0xB0, 0x73, 0x04, 0xFC, 0x0D, 0x01, 0x72, 0x0A, 0xB0, 0x73, 0x04,
  0xFA, 0x0E, 0x02, 0x74, 0x0A, 0xB0, 0x73, 0x04, 0xF0, 0xE0, 0x37, 0x60, 0xAB, 0x07, 0x30, 0x4E,
  0x04, 0x77, 0x10, 0xAB, 0x07, 0x30, 0x4C, 0x05, 0x77, 0x30, 0xAB, 0x07, 0x30, 0x4A, 0x07, 0x77,
  0x50, 0xAB, 0x07, 0x30, 0x40, 0x87, 0x77, 0x0B, 0xB0, 0x77, 0x77, 0x50, 0xCB, 0x07, 0x77, 0x74,
  0x01, 0x0D, 0xB0, 0x77, 0x77, 0x40, 0x7C, 0x07, 0x77, 0x73, 0x07, 0xD0, 0x77, 0x77, 0x20, 0x7E,
  0x07, 0x77, 0x71, 0x07, 0xA0, 0x80, 0xBB, 0x07, 0x77, 0x70, 0x7A, 0x81, 0x70, 0xBB, 0x07, 0x77,
  0x60, 0x7A, 0x07, 0x20, 0xBB, 0x07, 0x77, 0x50, 0x7A, 0x07, 0x30, 0xBB, 0x07, 0x74, 0x02, 0x80,
  0x27, 0x0B, 0xA8, 0x3B, 0x77, 0x78, 0xC0, 0x77, 0x30, 0xDF, 0xFD, 0x07, 0x72, 0x0D, 0xFF, 0xE0,
  0x77, 0x10, 0x28, 0x09, 0x47, 0x02, 0x0A, 0xB0, 0x17, 0x77, 0x58, 0x1A, 0xFD, 0x77, 0x77, 0x03,
  0x01, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_no_drinks() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 4, 31, 33), Box(0, 0, 35, 35),
      ic_round_36_places_no_drinks_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_no_flash 36x36, 4-bit Alpha,  RLE, 226 bytes.
static const uint8_t ic_round_36_places_no_flash_data[] PROGMEM = {
  0x77, 0x74, 0x0C, 0xC8, 0x27, 0x29, 0x67, 0x77, 0x1D, 0x05, 0x0B, 0xA0, 0x77, 0x77, 0xC8, 0x1D,
  0x08, 0xB0, 0x77, 0x76, 0xC0, 0x62, 0x0A, 0xB0, 0x77, 0x75, 0xB0, 0xE4, 0x0A, 0xB0, 0x77, 0x74,
  0xB8, 0x1D, 0x92, 0x30, 0xAB, 0x07, 0x77, 0x3D, 0x05, 0x40, 0xAB, 0x07, 0x77, 0x20, 0x50, 0xBA,
  0x0C, 0x60, 0xAB, 0x07, 0x77, 0x20, 0x7A, 0x04, 0x70, 0xAB, 0x07, 0x38, 0x24, 0xEC, 0x37, 0x18,
  0x17, 0xFB, 0x72, 0x0B, 0xB0, 0x73, 0x04, 0xA0, 0x47, 0x81, 0x7F, 0x23, 0x01, 0x0A, 0x80, 0x0D,
  0xD0, 0x73, 0x04, 0xA8, 0x00, 0xD8, 0x3A, 0x10, 0x79, 0x40, 0xBF, 0xC0, 0x73, 0x04, 0xE8, 0x2B,
  0x07, 0x14, 0xFE, 0x07, 0x30, 0x4E, 0x10, 0x15, 0xFF, 0x07, 0x30, 0x4D, 0x7F, 0xA8, 0x19, 0x4B,
  0xB0, 0x73, 0x04, 0xC7, 0xF0, 0xE0, 0x33, 0x0B, 0xB0, 0x73, 0x04, 0xB7, 0xF0, 0x32, 0x81, 0x5A,
  0xAC, 0x07, 0x30, 0x4A, 0x7E, 0x09, 0x20, 0xAF, 0x90, 0x73, 0x04, 0x97, 0xE8, 0x14, 0x05, 0xFB,
  0x07, 0x30, 0x47, 0xE8, 0x11, 0x0A, 0xE0, 0xA0, 0xBB, 0x07, 0x73, 0xE2, 0x0A, 0xE8, 0x1A, 0x0B,
  0xB0, 0x77, 0x2E, 0x81, 0x30, 0x5E, 0x81, 0x50, 0x4C, 0x07, 0x71, 0xE0, 0x82, 0x0A, 0xC0, 0xA2,
  0x09, 0xD0, 0x77, 0xF0, 0x22, 0x82, 0x5A, 0xA5, 0x20, 0x3F, 0x07, 0x6F, 0x0D, 0x02, 0x60, 0x30,
  0xEF, 0x90, 0x75, 0xFA, 0x84, 0x83, 0x01, 0x49, 0xFC, 0x07, 0x4F, 0xFF, 0xE0, 0x73, 0x0B, 0xFF,
  0xF9, 0x0C, 0x0B, 0xB0, 0x52, 0x02, 0x0B, 0xFF, 0xE8, 0x2B, 0x20, 0xBA, 0x09, 0x77, 0x77, 0x81,
  0x9B, 0x21,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_no_flash() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 3, 32, 33), Box(0, 0, 35, 35),
      ic_round_36_places_no_flash_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_no_food 36x36, 4-bit Alpha,  RLE, 237 bytes.
static const uint8_t ic_round_36_places_no_food_data[] PROGMEM = {
  0x77, 0x72, 0x81, 0x27, 0x27, 0x77, 0x73, 0x81, 0xDF, 0xD7, 0x20, 0x10, 0x27, 0x76, 0xB7, 0x18,
  0x21, 0xEF, 0x77, 0x75, 0xB7, 0x10, 0x4B, 0x07, 0x77, 0x4B, 0x72, 0x0B, 0xB0, 0x77, 0x73, 0xB7,
  0x30, 0xBB, 0x07, 0x72, 0x04, 0x80, 0x27, 0xB8, 0x02, 0x70, 0x44, 0x0B, 0xB0, 0x77, 0x03, 0xFF,
  0xB0, 0x34, 0x0B, 0xB0, 0x76, 0x04, 0xFF, 0xB0, 0x45, 0x0B, 0xB0, 0x75, 0x03, 0xFF, 0xB0, 0x36,
  0x0B, 0xB0, 0x74, 0x01, 0xFF, 0xB0, 0x17, 0x0B, 0xB0, 0x74, 0xFF, 0xB7, 0x20, 0xCB, 0x07, 0x30,
  0x4F, 0xF9, 0x0D, 0x68, 0x12, 0x7D, 0xD0, 0x73, 0x04, 0xFF, 0x0C, 0x50, 0x8F, 0xA0, 0x73, 0x04,
  0xFE, 0x0A, 0x30, 0x10, 0xCF, 0xC0, 0x73, 0x04, 0xFD, 0x09, 0x30, 0xCF, 0xE0, 0x73, 0x04, 0xFC,
  0x07, 0x20, 0x7F, 0xF9, 0x07, 0x30, 0x4F, 0xB0, 0x62, 0x0E, 0xFF, 0xA0, 0x73, 0x04, 0xFA, 0x81,
  0x40, 0x4F, 0xFC, 0x07, 0x30, 0x4F, 0x98, 0x13, 0x03, 0xFF, 0xD0, 0x73, 0x04, 0xF0, 0x12, 0x04,
  0x80, 0x93, 0x70, 0xBB, 0x07, 0x30, 0x4E, 0x77, 0x60, 0xBB, 0x07, 0x30, 0x4C, 0x0D, 0x77, 0x70,
  0xBB, 0x07, 0x30, 0x4B, 0x0C, 0x30, 0x58, 0x09, 0x57, 0x08, 0xC0, 0x73, 0x04, 0xA0, 0xA2, 0x05,
  0xFF, 0xFB, 0x07, 0x38, 0x14, 0xF9, 0x20, 0x5F, 0xFF, 0xC0, 0x73, 0x04, 0x07, 0x30, 0x58, 0x0A,
  0x07, 0x02, 0x0A, 0xB0, 0x77, 0x77, 0x72, 0x0A, 0xB0, 0x77, 0x77, 0x72, 0x0A, 0xB0, 0x75, 0x05,
  0x80, 0xA0, 0x70, 0x23, 0x0A, 0xB0, 0x73, 0x05, 0xFF, 0xF0, 0xD4, 0x0A, 0xB0, 0x22, 0x05, 0xFF,
  0xF0, 0xD5, 0x82, 0xAF, 0xE1, 0x30, 0x58, 0x0A, 0x07, 0x02, 0x60, 0x40, 0x13,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_no_food() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 1, 34, 34), Box(0, 0, 35, 35),
      ic_round_36_places_no_food_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_no_meeting_room 36x36, 4-bit Alpha,  RLE, 240 bytes.
static const uint8_t ic_round_36_places_no_meeting_room_data[] PROGMEM = {
  0x10, 0x27, 0x77, 0x71, 0x82, 0x8F, 0xC1, 0x30, 0x48, 0x06, 0x70, 0x27, 0x50, 0xCA, 0x0D, 0x01,
  0x30, 0xBF, 0xA0, 0xD7, 0x50, 0x4B, 0x0D, 0x01, 0x30, 0xBF, 0xF9, 0x0D, 0x02, 0x50, 0x4B, 0x0D,
  0x01, 0x30, 0xBF, 0xF9, 0x07, 0x60, 0x4B, 0x0D, 0x01, 0x30, 0xBF, 0xF0, 0x77, 0x05, 0xB0, 0xD0,
  0x13, 0x0B, 0xE4, 0x07, 0xA0, 0x77, 0x10, 0x5B, 0x0D, 0x01, 0x30, 0xBD, 0x40, 0x7A, 0x07, 0x72,
  0x08, 0xB0, 0xD0, 0x13, 0x0B, 0xC4, 0x07, 0xA0, 0x77, 0x20, 0x7C, 0x0D, 0x01, 0x30, 0xBB, 0x40,
  0x7A, 0x07, 0x72, 0x07, 0xD0, 0xD0, 0x13, 0x0B, 0xA4, 0x07, 0xA0, 0x77, 0x20, 0x7E, 0x0D, 0x01,
  0x30, 0xB9, 0x40, 0x7A, 0x07, 0x72, 0x07, 0xF0, 0xD0, 0x13, 0x0B, 0x40, 0x7A, 0x07, 0x72, 0x07,
  0xF0, 0x70, 0x57, 0x10, 0x7A, 0x07, 0x72, 0x07, 0xF3, 0x01, 0x60, 0x7A, 0x07, 0x72, 0x07, 0xF3,
  0x0D, 0x01, 0x50, 0x7A, 0x07, 0x72, 0x07, 0xF0, 0xF7, 0x90, 0xD0, 0x14, 0x07, 0xA0, 0x77, 0x20,
  0x7F, 0xD0, 0xD0, 0x13, 0x07, 0xA0, 0x77, 0x20, 0x7F, 0xE0, 0xD0, 0x13, 0x81, 0xBF, 0x77, 0x20,
  0x7F, 0xF0, 0xD0, 0x13, 0x0B, 0x07, 0x72, 0x07, 0xFF, 0x90, 0xD0, 0x13, 0x04, 0x72, 0x07, 0xFF,
  0xA0, 0xD0, 0x17, 0x50, 0x7F, 0xE0, 0x5B, 0x0D, 0x01, 0x74, 0x07, 0xFE, 0x10, 0x5B, 0x0D, 0x01,
  0x73, 0x07, 0xFE, 0x20, 0x5B, 0x0D, 0x01, 0x78, 0x15, 0x7B, 0xFE, 0x30, 0x5B, 0x0D, 0x01, 0x50,
  0x5F, 0xFA, 0x40, 0x5B, 0x0D, 0x01, 0x40, 0x5F, 0xF9, 0x0D, 0x50, 0x5B, 0x0D, 0x01, 0x40, 0x58,
  0x09, 0x27, 0x02, 0x60, 0x5B, 0x0C, 0x77, 0x76, 0x05, 0xB0, 0x27, 0x77, 0x68, 0x14, 0xC8, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_no_meeting_room() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 3, 32, 33), Box(0, 0, 35, 35),
      ic_round_36_places_no_meeting_room_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_no_photography 36x36, 4-bit Alpha,  RLE, 219 bytes.
static const uint8_t ic_round_36_places_no_photography_data[] PROGMEM = {
  0x10, 0x10, 0x27, 0x77, 0x71, 0x82, 0x1E, 0xF7, 0x71, 0x02, 0x06, 0x80, 0x27, 0x06, 0x02, 0x73,
  0x04, 0xB0, 0x76, 0x06, 0xFB, 0x05, 0x73, 0x0B, 0xB0, 0x74, 0x05, 0xFD, 0x05, 0x73, 0x0B, 0xB0,
  0x73, 0x04, 0xFE, 0x85, 0x87, 0x77, 0x76, 0x13, 0x03, 0xC0, 0x73, 0x04, 0xFF, 0xC0, 0xE0, 0x32,
  0x0B, 0xD0, 0x73, 0x04, 0xFF, 0xC0, 0xB2, 0xF0, 0x73, 0x04, 0xFF, 0xC2, 0xF9, 0x07, 0x30, 0x4F,
  0xFB, 0x2F, 0xA0, 0x73, 0x01, 0x28, 0x12, 0x7D, 0xFC, 0x2F, 0xB0, 0x77, 0x10, 0x8F, 0xB2, 0xFC,
  0x07, 0x71, 0x07, 0xFA, 0x2F, 0x90, 0xEB, 0x07, 0x71, 0x0A, 0xF9, 0x2F, 0x90, 0x30, 0xBB, 0x07,
  0x70, 0x2F, 0x92, 0xF0, 0xC2, 0x0B, 0xB0, 0x77, 0x0C, 0xF2, 0xF0, 0x92, 0x04, 0xC0, 0x76, 0x09,
  0xF2, 0xF0, 0x82, 0x07, 0xD0, 0x75, 0x08, 0xF2, 0xF0, 0x92, 0x04, 0xE0, 0x74, 0x09, 0xF2, 0xF0,
  0xC3, 0x0E, 0xE0, 0x73, 0x04, 0xF2, 0xF9, 0x02, 0x20, 0x4F, 0x07, 0x30, 0x4E, 0x2F, 0x90, 0xA3,
  0x83, 0x2A, 0xDE, 0xDB, 0x07, 0x30, 0x4D, 0x2F, 0xA0, 0x77, 0x0B, 0xB0, 0x73, 0x04, 0xC2, 0xFB,
  0x08, 0x70, 0xBB, 0x07, 0x30, 0x4B, 0x2F, 0xC8, 0x6D, 0x72, 0x01, 0x37, 0xDC, 0x07, 0x30, 0x4A,
  0x2F, 0xFF, 0xB0, 0x73, 0x04, 0x92, 0xFF, 0xFC, 0x07, 0x30, 0x42, 0x0B, 0xFF, 0xFC, 0x07, 0x50,
  0x30, 0xEF, 0xFF, 0xC0, 0x75, 0x01, 0x06, 0x80, 0xA1, 0x70, 0xBB, 0x07, 0x77, 0x77, 0x0B, 0xB0,
  0x17, 0x77, 0x78, 0x2B, 0xFE, 0x17, 0x77, 0x71, 0x04, 0x01, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_no_photography() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 32, 34), Box(0, 0, 35, 35),
      ic_round_36_places_no_photography_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_no_stroller 36x36, 4-bit Alpha,  RLE, 237 bytes.
static const uint8_t ic_round_36_places_no_stroller_data[] PROGMEM = {
  0x20, 0x17, 0x84, 0x35, 0x77, 0x53, 0x71, 0x82, 0x36, 0x63, 0x38, 0x21, 0xDF, 0x74, 0x09, 0x0E,
  0xF0, 0xA0, 0x43, 0x01, 0x0A, 0xC8, 0x2B, 0x10, 0x3B, 0x07, 0x30, 0x4F, 0xA8, 0x3E, 0x20, 0x1C,
  0xE0, 0xC2, 0x0A, 0xB0, 0x73, 0x04, 0xF9, 0x04, 0x20, 0xBB, 0x00, 0x9B, 0x07, 0x20, 0xAB, 0x07,
  0x30, 0x4E, 0x06, 0x20, 0x9B, 0x04, 0x20, 0x5A, 0x0C, 0x30, 0xAB, 0x07, 0x30, 0x4C, 0x09, 0x20,
  0x7B, 0x08, 0x48, 0x1E, 0xFC, 0x40, 0xAB, 0x07, 0x30, 0x4A, 0x0B, 0x20, 0x4C, 0x07, 0x48, 0x12,
  0x71, 0x50, 0xAB, 0x07, 0x30, 0x40, 0xC2, 0x03, 0x0E, 0xC0, 0x77, 0x60, 0xAB, 0x07, 0x50, 0x10,
  0xDD, 0x07, 0x77, 0x0A, 0xB0, 0x74, 0x0C, 0xE0, 0x77, 0x71, 0x0A, 0xB0, 0x73, 0x04, 0xE0, 0x77,
  0x72, 0x0A, 0xB0, 0x73, 0x04, 0xD0, 0x77, 0x73, 0x0A, 0xB0, 0x73, 0x04, 0xC0, 0x77, 0x74, 0x0A,
  0xB0, 0x73, 0x04, 0xB0, 0x77, 0x74, 0x03, 0xC0, 0x73, 0x04, 0xA0, 0x77, 0x73, 0x01, 0x0D, 0xD0,
  0x73, 0x81, 0x4F, 0x77, 0x73, 0x0C, 0xF0, 0x73, 0x04, 0x07, 0x77, 0x20, 0xAF, 0xA0, 0x77, 0x75,
  0x08, 0xFC, 0x07, 0x77, 0x30, 0x2F, 0xE0, 0x77, 0x72, 0x02, 0xFF, 0x07, 0x77, 0x20, 0x28, 0x06,
  0x50, 0xBB, 0x07, 0x77, 0x76, 0x0B, 0xB0, 0x77, 0x48, 0x28, 0xDD, 0x87, 0x40, 0x9C, 0x07, 0x72,
  0x08, 0xC0, 0x87, 0x20, 0x8E, 0x07, 0x71, 0x0D, 0xC0, 0xD7, 0x20, 0xEF, 0x07, 0x70, 0xDC, 0x0D,
  0x72, 0x0E, 0xF9, 0x07, 0x60, 0x8C, 0x08, 0x72, 0x08, 0xC0, 0x80, 0xBB, 0x01, 0x68, 0x28, 0xDD,
  0x87, 0x48, 0x28, 0xDD, 0x72, 0x81, 0xAF, 0xD7, 0x77, 0x71, 0x03, 0x01, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_no_stroller() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 4, 32, 33), Box(0, 0, 35, 35),
      ic_round_36_places_no_stroller_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_other_houses 36x36, 4-bit Alpha,  RLE, 149 bytes.
static const uint8_t ic_round_36_places_other_houses_data[] PROGMEM = {
  0x77, 0x82, 0x5E, 0xE5, 0x77, 0x76, 0x09, 0xC0, 0x97, 0x77, 0x30, 0x20, 0xCE, 0x0C, 0x01, 0x77,
  0x70, 0x40, 0xEF, 0x90, 0xE0, 0x47, 0x75, 0x08, 0xFD, 0x08, 0x77, 0x20, 0x10, 0xBF, 0xF0, 0xB0,
  0x17, 0x60, 0x40, 0xEF, 0xFA, 0x0E, 0x03, 0x74, 0x07, 0xFF, 0xE0, 0x77, 0x10, 0x10, 0xBF, 0xFF,
  0x90, 0xB0, 0x15, 0x03, 0x0D, 0xFF, 0xFB, 0x0D, 0x03, 0x30, 0x6F, 0xFF, 0xF8, 0x16, 0x08, 0xFF,
  0xFF, 0xA0, 0x80, 0xDA, 0x0C, 0xFF, 0xFB, 0x0C, 0xA8, 0x2D, 0x5D, 0x81, 0xFF, 0xFB, 0x18, 0x18,
  0xD5, 0x4D, 0x00, 0x9C, 0x00, 0x9C, 0x00, 0x9D, 0x71, 0xC0, 0x92, 0x09, 0xA0, 0x92, 0x09, 0xA0,
  0x92, 0x09, 0xC7, 0x1C, 0x09, 0x20, 0x9A, 0x09, 0x20, 0x9A, 0x09, 0x20, 0x9C, 0x71, 0xD0, 0x09,
  0xC0, 0x09, 0xC0, 0x09, 0xD7, 0x1F, 0xFF, 0xB7, 0x1F, 0xFF, 0xB7, 0x1F, 0xFF, 0xB7, 0x1F, 0xFF,
  0xB7, 0x1F, 0xFF, 0xB7, 0x1F, 0xFF, 0xB7, 0x1F, 0xFF, 0xB7, 0x10, 0xDF, 0xFF, 0x90, 0xD7, 0x10,
  0x28, 0x0A, 0x27, 0x02, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_other_houses() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 5, 33, 31), Box(0, 0, 35, 35),
      ic_round_36_places_other_houses_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_pool 36x36, 4-bit Alpha,  RLE, 212 bytes.
static const uint8_t ic_round_36_places_pool_data[] PROGMEM = {
  0x58, 0x13, 0x54, 0x75, 0x82, 0x36, 0x51, 0x73, 0x03, 0xC0, 0xA0, 0x37, 0x10, 0xAB, 0x0E, 0x04,
  0x72, 0x07, 0xE0, 0x86, 0x07, 0xD0, 0xE0, 0x17, 0x10, 0x20, 0xEE, 0x0A, 0x50, 0xDE, 0x05, 0x72,
  0x82, 0x16, 0x9E, 0xC0, 0xA4, 0x0E, 0xE0, 0x67, 0x50, 0x10, 0xAC, 0x0A, 0x30, 0xBE, 0x03, 0x77,
  0x08, 0xC0, 0xA2, 0x03, 0xD0, 0xA7, 0x72, 0x07, 0xC0, 0xA2, 0x83, 0x3B, 0xED, 0x77, 0x73, 0x07,
  0xD0, 0xA7, 0x77, 0x10, 0x7F, 0x0A, 0x77, 0x60, 0x7F, 0xA0, 0xA7, 0x74, 0x07, 0xFC, 0x0A, 0x77,
  0x20, 0x7D, 0x82, 0xA8, 0x8A, 0xC0, 0xA7, 0x71, 0x84, 0x19, 0xEE, 0x91, 0x48, 0x41, 0x8E, 0xE9,
  0x18, 0x09, 0x81, 0x08, 0x42, 0x8B, 0xB8, 0x34, 0x84, 0x28, 0xBB, 0x83, 0x48, 0x42, 0x8B, 0xB8,
  0x22, 0x01, 0x0A, 0xE8, 0x2A, 0x54, 0xAE, 0x82, 0xA5, 0x4A, 0xE8, 0x1A, 0x1D, 0xFF, 0xFF, 0x0C,
  0x0E, 0xA8, 0x2A, 0x44, 0xAE, 0x82, 0xA4, 0x5A, 0xE8, 0x2A, 0x45, 0xAA, 0x82, 0xD3, 0x73, 0x48,
  0x42, 0x8B, 0xB8, 0x24, 0x84, 0x38, 0xBB, 0x82, 0x48, 0x12, 0x72, 0x80, 0xF2, 0x00, 0x60, 0xCA,
  0x0C, 0x07, 0x48, 0x46, 0xCE, 0xFC, 0x74, 0x06, 0x0C, 0xA0, 0xC0, 0x62, 0x04, 0x0D, 0xE8, 0x2D,
  0x88, 0xDE, 0x82, 0xD8, 0x8D, 0xE8, 0x1D, 0x4E, 0xFF, 0xFF, 0x87, 0xEB, 0xFD, 0x60, 0x16, 0xEC,
  0x84, 0xD6, 0x01, 0x6E, 0xC8, 0x90, 0xD6, 0x01, 0x6E, 0xFB, 0x03, 0x68, 0x24, 0x77, 0x46, 0x82,
  0x47, 0x74, 0x60, 0x31,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_pool() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 4, 32, 31), Box(0, 0, 35, 35),
      ic_round_36_places_pool_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_rice_bowl 36x36, 4-bit Alpha,  RLE, 186 bytes.
static const uint8_t ic_round_36_places_rice_bowl_data[] PROGMEM = {
  0x73, 0x82, 0x38, 0xBD, 0xA8, 0x2D, 0xB8, 0x37, 0x74, 0x05, 0x0C, 0xFB, 0x0E, 0x07, 0x77, 0x02,
  0x0C, 0xFF, 0x0D, 0x05, 0x74, 0x04, 0x0E, 0xD0, 0x40, 0x22, 0x02, 0x04, 0xE0, 0x87, 0x20, 0x5B,
  0x0D, 0xB6, 0xB0, 0xDB, 0x0A, 0x70, 0x4B, 0x0A, 0x1B, 0x6B, 0x10, 0xAB, 0x08, 0x50, 0x10, 0xEA,
  0x08, 0x2B, 0x6B, 0x20, 0x8B, 0x05, 0x40, 0xAA, 0x0A, 0x3B, 0x6B, 0x30, 0xAA, 0x0D, 0x30, 0x3A,
  0x0D, 0x4B, 0x6B, 0x40, 0xDA, 0x07, 0x20, 0xAA, 0x05, 0x4B, 0x6B, 0x40, 0x5A, 0x81, 0xE0, 0x2A,
  0x0D, 0x5B, 0x6B, 0x50, 0xDA, 0x03, 0x06, 0xA0, 0x85, 0xB6, 0xB5, 0x08, 0xA0, 0x80, 0xAA, 0x04,
  0x5B, 0x6B, 0x50, 0x4A, 0x0B, 0x0D, 0xA0, 0x15, 0xB6, 0xB5, 0x01, 0xA0, 0xD0, 0xEA, 0x6B, 0x6B,
  0x6A, 0x0E, 0x0D, 0xFF, 0xFF, 0x0E, 0x0D, 0xFF, 0xFF, 0x0D, 0x0A, 0xFF, 0xFF, 0x0B, 0x06, 0xFF,
  0xFF, 0x07, 0x01, 0xFF, 0xFF, 0x81, 0x10, 0x9F, 0xFF, 0xD0, 0xA2, 0x01, 0xFF, 0xFC, 0x0E, 0x02,
  0x30, 0x6F, 0xFF, 0xB0, 0x65, 0x08, 0xFF, 0xF9, 0x09, 0x70, 0x8F, 0xFE, 0x09, 0x72, 0x05, 0x0E,
  0xFF, 0xA0, 0xE0, 0x67, 0x40, 0x10, 0x9F, 0xF0, 0xA0, 0x27, 0x70, 0x2F, 0xD0, 0x27, 0x73, 0x0C,
  0xFB, 0x0C, 0x77, 0x40, 0x30, 0xCF, 0x90, 0xC0, 0x37, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_rice_bowl() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_round_36_places_rice_bowl_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_roofing 36x36, 4-bit Alpha,  RLE, 156 bytes.
static const uint8_t ic_round_36_places_roofing_data[] PROGMEM = {
  0x75, 0x82, 0x3D, 0xD3, 0x77, 0x72, 0x04, 0x0E, 0xA0, 0xE0, 0x43, 0x08, 0xA0, 0xD0, 0x27, 0x60,
  0x5E, 0x05, 0x2C, 0x07, 0x75, 0x07, 0xB0, 0x0D, 0xB0, 0x71, 0xC0, 0x77, 0x40, 0x8B, 0x82, 0xC1,
  0x1C, 0xB0, 0x8C, 0x07, 0x73, 0x09, 0xB0, 0xB0, 0x12, 0x01, 0x0B, 0xF0, 0x77, 0x20, 0xBB, 0x0A,
  0x60, 0xAE, 0x07, 0x70, 0x10, 0xCB, 0x09, 0x71, 0x09, 0xD0, 0x76, 0x02, 0x0D, 0xB0, 0x77, 0x30,
  0x7C, 0x07, 0x50, 0x30, 0xEB, 0x06, 0x75, 0x06, 0xB0, 0xE0, 0x33, 0x04, 0x0E, 0xA0, 0xE0, 0x47,
  0x70, 0x40, 0xEA, 0x82, 0xE4, 0x05, 0xB0, 0xE0, 0x37, 0x72, 0x03, 0x0E, 0xB0, 0x40, 0x9A, 0x0C,
  0x02, 0x77, 0x40, 0x20, 0xCA, 0x09, 0x80, 0x9B, 0x10, 0x02, 0x0D, 0xE0, 0xD0, 0x27, 0x74, 0x07,
  0xF9, 0x07, 0x77, 0x40, 0x7F, 0x90, 0x77, 0x74, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x77, 0x74, 0x07,
  0xA0, 0x72, 0x07, 0xA0, 0x77, 0x74, 0x07, 0xA0, 0x72, 0x07, 0xA0, 0x77, 0x74, 0x07, 0xF9, 0x07,
  0x77, 0x40, 0x7F, 0x90, 0x77, 0x74, 0x02, 0x0D, 0xE0, 0xD0, 0x27, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_roofing() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 5, 31, 29), Box(0, 0, 35, 35),
      ic_round_36_places_roofing_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_room_preferences 36x36, 4-bit Alpha,  RLE, 217 bytes.
static const uint8_t ic_round_36_places_room_preferences_data[] PROGMEM = {
  0x40, 0x58, 0x07, 0x70, 0x27, 0x72, 0x05, 0xFD, 0x0D, 0x77, 0x20, 0x7F, 0xFD, 0x0D, 0x02, 0x71,
  0x07, 0xFF, 0xE0, 0x77, 0x10, 0x7F, 0xFE, 0x07, 0x71, 0x07, 0xFE, 0x40, 0x7A, 0x07, 0x71, 0x07,
  0xFE, 0x40, 0x7A, 0x07, 0x71, 0x07, 0xFE, 0x40, 0x7A, 0x07, 0x71, 0x07, 0xFE, 0x40, 0x7A, 0x07,
  0x71, 0x07, 0xFE, 0x40, 0x7A, 0x07, 0x71, 0x07, 0xFE, 0x40, 0x7A, 0x07, 0x71, 0x07, 0xFE, 0x77,
  0x20, 0x7F, 0x81, 0xD8, 0xDB, 0x77, 0x20, 0x7F, 0x81, 0x20, 0x2A, 0x05, 0x77, 0x20, 0x7F, 0x83,
  0x20, 0x2F, 0x45, 0x07, 0xA0, 0x77, 0x10, 0x7F, 0x82, 0xD8, 0xD7, 0x60, 0xCA, 0x0C, 0x71, 0x07,
  0xFA, 0x0C, 0x38, 0x24, 0x10, 0x7C, 0x82, 0x70, 0x14, 0x40, 0x7F, 0xA0, 0x52, 0x05, 0xA0, 0xEE,
  0x0E, 0xA0, 0x53, 0x07, 0xF9, 0x0E, 0x30, 0xDC, 0x82, 0xE9, 0x9E, 0xC0, 0xD3, 0x07, 0xF9, 0x0B,
  0x30, 0xAB, 0x0C, 0x01, 0x20, 0x10, 0xCB, 0x0A, 0x30, 0x7F, 0x90, 0x94, 0x0A, 0xA0, 0x34, 0x03,
  0xA0, 0xA4, 0x07, 0xF9, 0x08, 0x40, 0x8A, 0x6A, 0x09, 0x40, 0x7F, 0x90, 0x84, 0x0A, 0xA0, 0x34,
  0x03, 0xA0, 0xA4, 0x07, 0xF9, 0x0B, 0x30, 0xAB, 0x0C, 0x01, 0x20, 0x10, 0xCB, 0x83, 0xA0, 0x57,
  0xBF, 0x90, 0xE3, 0x0D, 0xC8, 0x2E, 0x99, 0xEC, 0x0D, 0x05, 0xFD, 0x05, 0x20, 0x5A, 0x0E, 0xE0,
  0xEA, 0x00, 0x5F, 0xD0, 0xC3, 0x82, 0x41, 0x07, 0xC8, 0x27, 0x01, 0x42, 0x05, 0x80, 0x90, 0x70,
  0x16, 0x0C, 0xA0, 0xC7, 0x77, 0x50, 0x7A, 0x07, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_room_preferences() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 33, 32), Box(0, 0, 35, 35),
      ic_round_36_places_room_preferences_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_room_service 36x36, 4-bit Alpha,  RLE, 103 bytes.
static const uint8_t ic_round_36_places_room_service_data[] PROGMEM = {
  0x76, 0x82, 0x16, 0x61, 0x77, 0x74, 0x03, 0x0E, 0xA0, 0xE0, 0x37, 0x77, 0x30, 0xBC, 0x0B, 0x77,
  0x73, 0x0E, 0xC0, 0xE7, 0x77, 0x20, 0x10, 0xDC, 0x0D, 0x01, 0x77, 0x60, 0x60, 0xCF, 0x90, 0xC0,
  0x67, 0x72, 0x04, 0x0D, 0xFD, 0x0D, 0x04, 0x76, 0x08, 0xFF, 0xA0, 0x87, 0x40, 0x9F, 0xFC, 0x09,
  0x72, 0x08, 0xFF, 0xE0, 0x87, 0x04, 0xFF, 0xF9, 0x04, 0x60, 0xDF, 0xFF, 0x90, 0xD5, 0x05, 0xFF,
  0xFB, 0x05, 0x40, 0xBF, 0xFF, 0xB0, 0xB3, 0x01, 0xFF, 0xFD, 0x01, 0x20, 0x4F, 0xFF, 0xD0, 0x42,
  0x06, 0xFF, 0xFD, 0x06, 0x77, 0x77, 0x30, 0x28, 0x0B, 0x07, 0x02, 0x0D, 0xFF, 0xFF, 0x00, 0xDF,
  0xFF, 0xF0, 0xD0, 0x28, 0x0B, 0x07, 0x02,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_room_service() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 7, 32, 28), Box(0, 0, 35, 35),
      ic_round_36_places_room_service_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_rv_hookup 36x36, 4-bit Alpha,  RLE, 146 bytes.
static const uint8_t ic_round_36_places_rv_hookup_data[] PROGMEM = {
  0x77, 0x58, 0x14, 0xC1, 0x77, 0x73, 0x82, 0x7F, 0xD1, 0x74, 0x02, 0x0D, 0xFE, 0x0D, 0x01, 0x73,
  0x06, 0xFF, 0x90, 0x87, 0x30, 0x20, 0xDF, 0xE0, 0xD0, 0x17, 0x77, 0x18, 0x27, 0xFD, 0x17, 0x77,
  0x28, 0x14, 0xC1, 0x71, 0x04, 0x01, 0x77, 0x73, 0x81, 0x7F, 0x77, 0x77, 0x20, 0x7A, 0x0B, 0x80,
  0x94, 0x70, 0x60, 0x14, 0x06, 0xFF, 0xF0, 0xE0, 0x33, 0x06, 0xFF, 0xF9, 0x0B, 0x40, 0x7A, 0x0B,
  0x80, 0x17, 0x0B, 0xC8, 0x00, 0x70, 0x80, 0xDB, 0x58, 0x17, 0xF7, 0x50, 0x7C, 0x50, 0x2B, 0x60,
  0x40, 0x15, 0x07, 0xC6, 0xB7, 0x60, 0x7C, 0x6B, 0x76, 0x07, 0xC6, 0xB3, 0x08, 0xFF, 0xFA, 0x3F,
  0xFF, 0xB3, 0xFF, 0xFB, 0x3F, 0xFF, 0xB3, 0xFF, 0xFB, 0x82, 0x77, 0x2B, 0xFF, 0xFC, 0x81, 0xD3,
  0xEF, 0x81, 0x70, 0x7F, 0xF8, 0x2D, 0x01, 0x60, 0xF7, 0xB3, 0xB8, 0x07, 0x70, 0x26, 0x0C, 0xA8,
  0x17, 0x07, 0xA0, 0xC7, 0x74, 0x07, 0xF0, 0x77, 0x75, 0x0B, 0xD0, 0xB7, 0x77, 0x83, 0x7C, 0xEC,
  0x77, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_rv_hookup() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 32, 32), Box(0, 0, 35, 35),
      ic_round_36_places_rv_hookup_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_smoke_free 36x36, 4-bit Alpha,  RLE, 231 bytes.
static const uint8_t ic_round_36_places_smoke_free_data[] PROGMEM = {
  0x77, 0x28, 0x17, 0xD6, 0x50, 0x10, 0x57, 0x75, 0x0B, 0xA0, 0xA5, 0x81, 0x9F, 0x77, 0x73, 0x08,
  0xA0, 0x75, 0x05, 0xA0, 0x57, 0x73, 0x81, 0xEF, 0x65, 0x0B, 0xA0, 0xB5, 0x04, 0x06, 0x73, 0x02,
  0xA5, 0x02, 0xB0, 0xB0, 0x23, 0x03, 0xA0, 0xB7, 0x20, 0x3A, 0x01, 0x50, 0x70, 0xDA, 0x0E, 0x04,
  0x20, 0x3B, 0x0B, 0x72, 0x81, 0xEF, 0x97, 0x83, 0x3D, 0xFE, 0x32, 0x07, 0xB0, 0xB7, 0x10, 0x8A,
  0x83, 0xA4, 0x33, 0x23, 0x82, 0x1C, 0xFD, 0x30, 0x7B, 0x0B, 0x71, 0x0A, 0xE8, 0x3E, 0x91, 0x02,
  0xA0, 0x43, 0x07, 0xB0, 0xB7, 0x18, 0x15, 0xBE, 0xD8, 0x4D, 0x20, 0xAF, 0xA4, 0x07, 0xB0, 0xB7,
  0x68, 0x66, 0xEF, 0xB0, 0x5F, 0xC5, 0x07, 0xB0, 0xB7, 0x60, 0x6A, 0x01, 0x04, 0xA6, 0x07, 0xB0,
  0xB7, 0x50, 0x1A, 0x00, 0x3A, 0x70, 0x7B, 0x0B, 0x75, 0xA0, 0x40, 0x3A, 0x71, 0x07, 0xB0, 0xB7,
  0x48, 0x4B, 0xD1, 0x1D, 0xA7, 0x20, 0x7B, 0x0B, 0x77, 0x30, 0x48, 0x04, 0x70, 0xDB, 0x0B, 0x48,
  0x15, 0x61, 0x28, 0x57, 0x71, 0x17, 0x78, 0xFF, 0x0B, 0x38, 0x22, 0xDE, 0x11, 0xA0, 0x03, 0xA0,
  0xEF, 0xF9, 0x0B, 0x38, 0x12, 0xD6, 0x1A, 0x00, 0x3A, 0x0C, 0xFF, 0xA0, 0xA3, 0x02, 0x03, 0x1A,
  0x00, 0x3A, 0x03, 0x0C, 0xFF, 0xA0, 0xA5, 0xA0, 0x03, 0xA7, 0x71, 0x07, 0xB0, 0xA7, 0x77, 0x50,
  0x7B, 0x0A, 0x77, 0x75, 0x07, 0xB0, 0xA7, 0x77, 0x50, 0x7B, 0x0A, 0x77, 0x75, 0x07, 0xB0, 0xA7,
  0x77, 0x50, 0x7B, 0x0A, 0x77, 0x75, 0x07, 0xB0, 0xA7, 0x77, 0x50, 0x7B, 0x09, 0x77, 0x75, 0x07,
  0xA0, 0xE7, 0x77, 0x68, 0x16, 0xC6, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_smoke_free() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 33), Box(0, 0, 35, 35),
      ic_round_36_places_smoke_free_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_smoking_rooms 36x36, 4-bit Alpha,  RLE, 180 bytes.
static const uint8_t ic_round_36_places_smoking_rooms_data[] PROGMEM = {
  0x77, 0x71, 0x81, 0xA9, 0x27, 0x77, 0x50, 0x2A, 0x0E, 0x04, 0x77, 0x75, 0x83, 0x4D, 0xFE, 0x17,
  0x77, 0x58, 0x21, 0xEF, 0x77, 0x76, 0x05, 0x01, 0x58, 0x18, 0xFA, 0x77, 0x48, 0x25, 0xEF, 0xA5,
  0x81, 0x8F, 0xB7, 0x73, 0x04, 0xA0, 0xE0, 0x45, 0x81, 0xDF, 0x87, 0x73, 0x81, 0xCF, 0xB5, 0x83,
  0x3C, 0xFE, 0x17, 0x72, 0x01, 0xA0, 0x24, 0x02, 0xB0, 0x87, 0x73, 0x03, 0xA5, 0x01, 0x0E, 0xB0,
  0x97, 0x72, 0x02, 0xA0, 0x46, 0x05, 0x0B, 0xA0, 0xB7, 0x72, 0x82, 0xCF, 0xD2, 0x70, 0x6A, 0x08,
  0x77, 0x10, 0x30, 0xEA, 0x84, 0xCB, 0xBA, 0x72, 0x20, 0x7A, 0x01, 0x77, 0x10, 0x30, 0xDF, 0x07,
  0x28, 0x1D, 0xF8, 0x77, 0x38, 0x43, 0x67, 0x78, 0xDA, 0x83, 0x60, 0x7F, 0xB7, 0x77, 0x28, 0x5B,
  0xFE, 0x04, 0xFE, 0x77, 0x72, 0x03, 0xA0, 0x03, 0xA7, 0x77, 0x3A, 0x04, 0x03, 0xA7, 0x77, 0x38,
  0x4E, 0xF3, 0x3F, 0xE7, 0x77, 0x30, 0x30, 0x52, 0x05, 0x03, 0x77, 0x77, 0x20, 0x30, 0xCF, 0xFC,
  0x0E, 0x08, 0x2A, 0x00, 0x3A, 0x0C, 0xFF, 0xF0, 0x41, 0xA0, 0x03, 0xA0, 0xEF, 0xFF, 0x06, 0x1A,
  0x00, 0x3A, 0x08, 0xFF, 0xE0, 0xE0, 0x11, 0xA0, 0x03, 0xA1, 0x04, 0x80, 0x96, 0x70, 0x60, 0x12,
  0x84, 0x77, 0x11, 0x77,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_smoking_rooms() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 28), Box(0, 0, 35, 35),
      ic_round_36_places_smoking_rooms_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_soap 36x36, 4-bit Alpha,  RLE, 217 bytes.
static const uint8_t ic_round_36_places_soap_data[] PROGMEM = {
  0x77, 0x71, 0x81, 0x16, 0x47, 0x77, 0x70, 0x10, 0xEA, 0x08, 0x77, 0x76, 0x06, 0xB0, 0xE7, 0x77,
  0x60, 0x4B, 0x0C, 0x77, 0x77, 0x82, 0x8E, 0xC3, 0x77, 0x74, 0x01, 0x03, 0x68, 0x28, 0xDD, 0x87,
  0x75, 0x09, 0xA0, 0xE0, 0x63, 0x08, 0xC0, 0x87, 0x48, 0x15, 0xD8, 0x30, 0x7D, 0x04, 0x28, 0x4D,
  0xF9, 0x9F, 0xD7, 0x30, 0x6B, 0x07, 0x28, 0x5D, 0xF8, 0x0B, 0xF9, 0x28, 0x4D, 0xF9, 0x9F, 0xD7,
  0x20, 0x7C, 0x0A, 0x28, 0x5E, 0xF5, 0x09, 0xFA, 0x20, 0x8C, 0x08, 0x71, 0x08, 0xD0, 0x42, 0x0A,
  0xA0, 0xCA, 0x06, 0x38, 0x28, 0xDD, 0x87, 0x10, 0x9D, 0x0B, 0x30, 0x10, 0xCB, 0x0A, 0x77, 0x10,
  0xAE, 0x02, 0x58, 0x14, 0x73, 0x77, 0x10, 0xAE, 0x08, 0x77, 0x72, 0x0B, 0xFF, 0xF9, 0x0E, 0x05,
  0x50, 0x10, 0xBF, 0xFF, 0xB0, 0xE4, 0x01, 0x0C, 0xFF, 0xFC, 0x0D, 0x40, 0xBF, 0xF9, 0x0D, 0x80,
  0x5B, 0x0A, 0x02, 0x30, 0x3F, 0xFA, 0x01, 0x77, 0x07, 0xFF, 0xA0, 0xD8, 0x09, 0x0B, 0x81, 0xA2,
  0x7F, 0xFF, 0xFA, 0x0D, 0x07, 0xFF, 0xFF, 0xA0, 0xE0, 0x7F, 0xFF, 0xF9, 0x81, 0xD5, 0x7F, 0xFA,
  0x02, 0x77, 0x07, 0xFF, 0xA0, 0xA8, 0x07, 0x70, 0x32, 0x07, 0xFF, 0xFF, 0x98, 0x13, 0x07, 0xFF,
  0xFF, 0x98, 0x17, 0x07, 0xFF, 0xFF, 0x82, 0xD1, 0x07, 0xFF, 0xA0, 0x68, 0x07, 0x33, 0x06, 0xFF,
  0xA0, 0x68, 0x04, 0x36, 0x02, 0xFF, 0xFC, 0x0E, 0x02, 0x50, 0x9F, 0xFF, 0xC0, 0x76, 0x0A, 0xFF,
  0xFB, 0x03, 0x70, 0x20, 0x68, 0x0A, 0x17, 0x03, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_soap() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 1, 32, 34), Box(0, 0, 35, 35),
      ic_round_36_places_soap_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_spa 36x36, 4-bit Alpha,  RLE, 184 bytes.
static const uint8_t ic_round_36_places_spa_data[] PROGMEM = {
  0x77, 0x01, 0x02, 0x77, 0x76, 0x82, 0x3E, 0xF6, 0x77, 0x75, 0x0D, 0xA0, 0xE0, 0x27, 0x77, 0x30,
  0x9C, 0x0B, 0x77, 0x72, 0x02, 0xE0, 0x47, 0x77, 0x10, 0xAE, 0x0B, 0x77, 0x70, 0x1F, 0x90, 0x27,
  0x76, 0x06, 0xF9, 0x07, 0x77, 0x60, 0xBF, 0x90, 0xC7, 0x76, 0x0E, 0xF9, 0x0E, 0x77, 0x50, 0x1F,
  0xB0, 0x17, 0x74, 0x01, 0x0D, 0xF9, 0x0D, 0x01, 0x72, 0x84, 0x5D, 0xC9, 0x61, 0x50, 0x8E, 0x08,
  0x58, 0x51, 0x59, 0xCD, 0x5D, 0xD0, 0xB0, 0x54, 0x03, 0x0E, 0xA0, 0xE0, 0x34, 0x04, 0x0B, 0xD0,
  0xD0, 0xCF, 0x0C, 0x03, 0x38, 0x22, 0xDD, 0x23, 0x03, 0x0C, 0xF0, 0xC0, 0x9F, 0xA0, 0x83, 0x00,
  0x13, 0x08, 0xFA, 0x0A, 0x06, 0xFB, 0x0B, 0x60, 0xBF, 0xB0, 0x70, 0x1F, 0xC0, 0xC4, 0x0C, 0xFC,
  0x81, 0x20, 0xCF, 0xC0, 0xB2, 0x0B, 0xFC, 0x0C, 0x20, 0x5F, 0xD0, 0x07, 0xFD, 0x06, 0x30, 0xDF,
  0xFF, 0xB0, 0xD4, 0x05, 0xFF, 0xFB, 0x05, 0x50, 0xAF, 0xFF, 0x90, 0xA6, 0x01, 0x0D, 0xFF, 0xE0,
  0xD0, 0x17, 0x02, 0x0E, 0xFF, 0xC0, 0xE0, 0x27, 0x20, 0x20, 0xDF, 0xFA, 0x0D, 0x03, 0x74, 0x01,
  0x0C, 0xFF, 0x0C, 0x01, 0x77, 0x07, 0x0E, 0xFB, 0x0E, 0x07, 0x77, 0x38, 0x11, 0x8E, 0xE8, 0x1E,
  0x81, 0x77, 0x78, 0x55, 0x9D, 0xD9, 0x51, 0x74,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_spa() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 32), Box(0, 0, 35, 35),
      ic_round_36_places_spa_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_sports_bar 36x36, 4-bit Alpha,  RLE, 200 bytes.
static const uint8_t ic_round_36_places_sports_bar_data[] PROGMEM = {
  0x71, 0x85, 0x7B, 0xDE, 0xC7, 0x17, 0x75, 0x04, 0x0E, 0xE8, 0x3E, 0x66, 0x62, 0x77, 0x05, 0xFE,
  0x0A, 0x01, 0x74, 0x01, 0x0E, 0xA8, 0x4D, 0x51, 0x15, 0xDE, 0x0D, 0x02, 0x72, 0x05, 0x0D, 0xA0,
  0xD0, 0x14, 0x84, 0x1B, 0xB8, 0x9E, 0xA0, 0xD7, 0x10, 0x9C, 0x03, 0x73, 0x01, 0x0C, 0xA0, 0x76,
  0x07, 0xB0, 0xE0, 0x87, 0x50, 0x3A, 0x0D, 0x50, 0x10, 0xEA, 0x09, 0x71, 0x85, 0x25, 0x77, 0x77,
  0x8A, 0x0E, 0x50, 0x4A, 0x0C, 0x70, 0x10, 0xAF, 0xA0, 0xD5, 0x06, 0xA0, 0x86, 0x02, 0x0D, 0xFB,
  0x09, 0x50, 0x5A, 0x0A, 0x50, 0x10, 0xDF, 0xC8, 0x29, 0x77, 0x42, 0x02, 0xB0, 0x23, 0x01, 0x0D,
  0xFF, 0xA0, 0x92, 0x0B, 0xA8, 0x3E, 0x74, 0x7E, 0xFF, 0xC8, 0x24, 0x02, 0xEF, 0xFC, 0x82, 0xB7,
  0x7B, 0xA0, 0x72, 0x02, 0x0D, 0xFF, 0xB0, 0x72, 0x07, 0xA0, 0x74, 0x04, 0xFF, 0xA0, 0x72, 0x07,
  0xA0, 0x75, 0xFF, 0xA0, 0x72, 0x07, 0xA0, 0x75, 0xFF, 0xA0, 0x72, 0x07, 0xA0, 0x75, 0xFF, 0xA0,
  0x72, 0x07, 0xA0, 0x75, 0xFF, 0xA0, 0x72, 0x07, 0xA0, 0x75, 0xFF, 0xA0, 0x72, 0x07, 0xA0, 0x75,
  0xFF, 0xA0, 0x72, 0x07, 0xA0, 0x75, 0xFF, 0xA8, 0x2B, 0x77, 0xBA, 0x07, 0x5F, 0xFF, 0x90, 0x45,
  0xFF, 0xF0, 0x96, 0xFF, 0xA8, 0x3B, 0x77, 0x74, 0x70, 0xBF, 0xF9, 0x04, 0x74, 0x03, 0x0E, 0xFE,
  0x09, 0x76, 0x01, 0x06, 0x80, 0x77, 0x04, 0x71,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_sports_bar() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 3, 31, 31), Box(0, 0, 35, 35),
      ic_round_36_places_sports_bar_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_stairs 36x36, 4-bit Alpha,  RLE, 146 bytes.
static const uint8_t ic_round_36_places_stairs_data[] PROGMEM = {
  0x20, 0x48, 0x0A, 0x27, 0x04, 0x30, 0x9F, 0xFF, 0xB8, 0x19, 0x04, 0xFF, 0xFD, 0x04, 0x07, 0xFF,
  0xFD, 0x00, 0x7F, 0xFF, 0xD0, 0x07, 0xFF, 0x90, 0x55, 0x07, 0xC0, 0x07, 0xFF, 0x90, 0x56, 0xC0,
  0x07, 0xFF, 0x90, 0x55, 0x07, 0xC0, 0x07, 0xFF, 0x90, 0x52, 0x09, 0xF0, 0x07, 0xFF, 0x90, 0x52,
  0x09, 0xF0, 0x07, 0xFC, 0x07, 0x60, 0x9F, 0x00, 0x7F, 0xC0, 0x76, 0x09, 0xF0, 0x07, 0xFC, 0x07,
  0x60, 0x9F, 0x00, 0x7F, 0xC0, 0x72, 0x07, 0xFC, 0x00, 0x7F, 0xC0, 0x72, 0x07, 0xFC, 0x00, 0x7F,
  0x09, 0x60, 0x7F, 0xC0, 0x07, 0xF0, 0x96, 0x07, 0xFC, 0x00, 0x7F, 0x09, 0x60, 0x7F, 0xC0, 0x07,
  0xF0, 0x92, 0x05, 0xFF, 0x90, 0x07, 0xF0, 0x92, 0x05, 0xFF, 0x90, 0x07, 0xC0, 0x75, 0x05, 0xFF,
  0x90, 0x07, 0xC6, 0x05, 0xFF, 0x90, 0x07, 0xC0, 0x75, 0x05, 0xFF, 0x90, 0x07, 0xFF, 0xFD, 0x00,
  0x7F, 0xFF, 0xD0, 0x70, 0x4F, 0xFF, 0xD8, 0x14, 0x09, 0xFF, 0xFB, 0x09, 0x30, 0x48, 0x0A, 0x27,
  0x04, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_stairs() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 4, 31, 31), Box(0, 0, 35, 35),
      ic_round_36_places_stairs_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_storefront 36x36, 4-bit Alpha,  RLE, 212 bytes.
static const uint8_t ic_round_36_places_storefront_data[] PROGMEM = {
  0x30, 0x38, 0x0A, 0x27, 0x03, 0x50, 0x8F, 0xFF, 0xB0, 0x83, 0x02, 0xFF, 0xFD, 0x02, 0x20, 0x7A,
  0x82, 0xB7, 0x7B, 0xA8, 0x2B, 0x77, 0xBA, 0x82, 0xB7, 0x7B, 0xA8, 0x2B, 0x77, 0xBA, 0x07, 0x20,
  0xCA, 0x04, 0x20, 0x9A, 0x06, 0x20, 0x7A, 0x07, 0x20, 0x6A, 0x09, 0x20, 0x4A, 0x81, 0xC0, 0x1A,
  0x0E, 0x30, 0xBA, 0x03, 0x20, 0x7A, 0x07, 0x20, 0x3A, 0x0B, 0x30, 0xEA, 0x01, 0x06, 0xA0, 0xA3,
  0x0E, 0xA0, 0x12, 0x07, 0xA0, 0x72, 0x01, 0xA0, 0xE3, 0x0A, 0xA0, 0x60, 0xBA, 0x05, 0x20, 0x1A,
  0x0E, 0x30, 0x7A, 0x07, 0x30, 0xEA, 0x01, 0x20, 0x5A, 0x0B, 0x0E, 0xA0, 0x12, 0x03, 0xA0, 0xC3,
  0x07, 0xA0, 0x73, 0x0C, 0xA0, 0x32, 0x01, 0xA0, 0x0E, 0xA0, 0x12, 0x06, 0xA0, 0xC3, 0x09, 0xA0,
  0x93, 0x0C, 0xA0, 0x62, 0x01, 0xA0, 0xE0, 0xBA, 0x82, 0xA1, 0x2D, 0xB8, 0x26, 0x04, 0xEA, 0x82,
  0xE4, 0x07, 0xB8, 0x2D, 0x21, 0xAA, 0x0B, 0x04, 0xFF, 0xFF, 0x81, 0x40, 0xAF, 0xFF, 0xD0, 0x92,
  0x07, 0xFF, 0xFD, 0x07, 0x20, 0x7F, 0xFF, 0xD0, 0x72, 0x07, 0xFF, 0xFD, 0x07, 0x20, 0x7F, 0xFF,
  0xD0, 0x72, 0x07, 0xFF, 0xFD, 0x07, 0x20, 0x7F, 0xFF, 0xD0, 0x72, 0x07, 0xFF, 0xFD, 0x07, 0x20,
  0x7F, 0xFF, 0xD0, 0x72, 0x07, 0xFF, 0xFD, 0x07, 0x20, 0x7F, 0xFF, 0xD0, 0x72, 0x07, 0xFF, 0xFD,
  0x07, 0x20, 0x7F, 0xFF, 0xD0, 0x72, 0x04, 0xFF, 0xFD, 0x04, 0x30, 0x9F, 0xFF, 0xB0, 0x95, 0x04,
  0x80, 0xA2, 0x70, 0x43,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_storefront() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 4, 32, 31), Box(0, 0, 35, 35),
      ic_round_36_places_storefront_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_stroller 36x36, 4-bit Alpha,  RLE, 183 bytes.
static const uint8_t ic_round_36_places_stroller_data[] PROGMEM = {
  0x68, 0x43, 0x57, 0x75, 0x37, 0x18, 0x23, 0x66, 0x36, 0x04, 0x0A, 0xF9, 0x0A, 0x04, 0x30, 0x10,
  0xAC, 0x0B, 0x01, 0x30, 0xAF, 0xC8, 0x3E, 0x20, 0x1C, 0xE0, 0xC3, 0x0E, 0xFC, 0x04, 0x20, 0xBB,
  0x00, 0x9B, 0x07, 0x20, 0x7F, 0xB0, 0x62, 0x09, 0xB0, 0x42, 0x05, 0xA0, 0xC3, 0x07, 0xF9, 0x09,
  0x20, 0x7B, 0x08, 0x48, 0x1E, 0xFC, 0x40, 0x7E, 0x0B, 0x20, 0x5C, 0x07, 0x48, 0x12, 0x71, 0x50,
  0x7C, 0x0C, 0x20, 0x30, 0xEC, 0x07, 0x76, 0x07, 0xA8, 0x3D, 0x10, 0x1D, 0xD0, 0x77, 0x78, 0x17,
  0xE3, 0x20, 0xCE, 0x07, 0x77, 0x10, 0x22, 0x0B, 0xF0, 0x77, 0x73, 0x08, 0xF9, 0x07, 0x77, 0x20,
  0x6F, 0xA0, 0x77, 0x71, 0x04, 0xFB, 0x07, 0x77, 0x02, 0x0E, 0xFB, 0x07, 0x76, 0x01, 0x0D, 0xFC,
  0x07, 0x76, 0x0C, 0xFD, 0x07, 0x75, 0x0A, 0xFE, 0x07, 0x74, 0x08, 0xFF, 0x07, 0x73, 0x02, 0xFF,
  0x90, 0x37, 0x30, 0x1F, 0xF0, 0x97, 0x50, 0x38, 0x07, 0x70, 0x60, 0x38, 0x0C, 0x10, 0x82, 0x8D,
  0xD8, 0x74, 0x82, 0x8D, 0xD8, 0x70, 0x8C, 0x08, 0x72, 0x08, 0xC0, 0x86, 0x0D, 0xC0, 0xD7, 0x20,
  0xDC, 0x0D, 0x60, 0xDC, 0x0D, 0x72, 0x0D, 0xC0, 0xD6, 0x08, 0xC0, 0x87, 0x20, 0x8C, 0x08, 0x78,
  0x28, 0xDD, 0x87, 0x48, 0x28, 0xDD, 0x87,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_stroller() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(6, 4, 32, 32), Box(0, 0, 35, 35),
      ic_round_36_places_stroller_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_tapas 36x36, 4-bit Alpha,  RLE, 218 bytes.
static const uint8_t ic_round_36_places_tapas_data[] PROGMEM = {
  0x78, 0x12, 0x72, 0x72, 0x02, 0x80, 0x67, 0x02, 0x78, 0x1D, 0xFD, 0x72, 0x0D, 0xFB, 0x0D, 0x7B,
  0x72, 0xFD, 0x20, 0x10, 0x50, 0xF7, 0xB0, 0xF7, 0x06, 0x02, 0x4B, 0x80, 0x27, 0xB1, 0x06, 0x0E,
  0xFD, 0x07, 0x3B, 0x6B, 0x03, 0xFF, 0x90, 0x32, 0xB6, 0xB0, 0x9F, 0xF9, 0x09, 0x2B, 0x6B, 0x0A,
  0xFF, 0x90, 0xA2, 0xB6, 0xB0, 0x7F, 0xF9, 0x07, 0x2F, 0xD1, 0x0D, 0xFE, 0x0C, 0x3F, 0xD1, 0x81,
  0x19, 0xDF, 0xA8, 0x1D, 0x81, 0x3F, 0xD7, 0xB7, 0x2F, 0xD2, 0x01, 0x05, 0x0F, 0x7B, 0x0F, 0x70,
  0x50, 0x14, 0xFD, 0x10, 0x60, 0xEF, 0xC0, 0xE0, 0x63, 0xFD, 0x03, 0xFF, 0x90, 0x32, 0x0E, 0xFB,
  0x0E, 0x09, 0xFF, 0x90, 0x92, 0x0B, 0xFB, 0x0B, 0x0A, 0xFF, 0x90, 0xA2, 0x05, 0xFB, 0x05, 0x07,
  0xFF, 0x90, 0x73, 0x0C, 0xF9, 0x0C, 0x20, 0xDF, 0xE0, 0xD4, 0x01, 0x0B, 0xE0, 0xB0, 0x12, 0x81,
  0x19, 0xDF, 0xA8, 0x1D, 0x91, 0x60, 0x50, 0xDA, 0x0D, 0x05, 0x73, 0xB7, 0x60, 0x7A, 0x07, 0x74,
  0xB7, 0x60, 0x7A, 0x07, 0x74, 0xB7, 0x60, 0x7A, 0x07, 0x74, 0xB7, 0x60, 0x7A, 0x07, 0x74, 0xB7,
  0x60, 0x7A, 0x07, 0x74, 0xB7, 0x60, 0x7A, 0x07, 0x74, 0xB7, 0x60, 0x7A, 0x07, 0x74, 0xB7, 0x60,
  0x7A, 0x07, 0x74, 0xB7, 0x60, 0x7A, 0x07, 0x74, 0xB7, 0x60, 0x7A, 0x07, 0x74, 0xB7, 0x48, 0x15,
  0x7B, 0xA8, 0x1B, 0x75, 0x72, 0xB7, 0x30, 0x5F, 0x90, 0x57, 0x18, 0x1D, 0xFD, 0x73, 0x05, 0xF9,
  0x05, 0x71, 0x81, 0x27, 0x27, 0x40, 0x58, 0x02, 0x70, 0x52,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_tapas() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 1, 32, 34), Box(0, 0, 35, 35),
      ic_round_36_places_tapas_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_tty 36x36, 4-bit Alpha,  RLE, 228 bytes.
static const uint8_t ic_round_36_places_tty_data[] PROGMEM = {
  0x01, 0x80, 0x37, 0x03, 0x77, 0x70, 0xCF, 0x90, 0x27, 0x76, 0x0D, 0xF9, 0x06, 0x38, 0xA0, 0x2D,
  0xD2, 0x08, 0xE8, 0x02, 0xDD, 0x20, 0x8E, 0x8C, 0xF9, 0x09, 0x30, 0x6A, 0x85, 0x60, 0xEF, 0xE0,
  0x6A, 0x84, 0x60, 0xEF, 0xEA, 0xF9, 0x0C, 0x38, 0xA0, 0x2D, 0xD2, 0x08, 0xE8, 0x02, 0xDD, 0x20,
  0x8E, 0x87, 0xFA, 0x77, 0x60, 0x4F, 0xA0, 0x36, 0x00, 0x52, 0x81, 0x27, 0x22, 0x00, 0x53, 0xFA,
  0x05, 0x50, 0x5A, 0x85, 0x50, 0xDF, 0xD0, 0x5A, 0x05, 0x20, 0xBF, 0x0D, 0x60, 0x5A, 0x85, 0x50,
  0xDF, 0xD0, 0x5A, 0x05, 0x20, 0x6E, 0x0D, 0x01, 0x70, 0x05, 0x28, 0x12, 0x72, 0x20, 0x05, 0x4D,
  0x0D, 0x01, 0x77, 0x72, 0x09, 0xB0, 0xD0, 0x15, 0x89, 0x72, 0xDD, 0x20, 0x8E, 0x80, 0x2D, 0xD2,
  0x08, 0xE8, 0x20, 0x2B, 0x05, 0x60, 0x6A, 0x85, 0x60, 0xEF, 0xE0, 0x6A, 0x83, 0x60, 0xEF, 0xE3,
  0x09, 0xA0, 0xD6, 0x89, 0x72, 0xDD, 0x20, 0x8E, 0x80, 0x2D, 0xD2, 0x08, 0xE8, 0x30, 0x10, 0xEA,
  0x08, 0x77, 0x75, 0x05, 0xB0, 0x57, 0x77, 0x50, 0xAB, 0x03, 0x77, 0x74, 0x01, 0x0C, 0xA0, 0xE0,
  0x37, 0x84, 0x1B, 0xC9, 0x63, 0x75, 0x01, 0x0D, 0xA0, 0xE0, 0x45, 0x01, 0x0D, 0xE0, 0xC0, 0x57,
  0x30, 0x20, 0xEB, 0x06, 0x30, 0x10, 0xDF, 0x90, 0xE7, 0x40, 0x20, 0xDB, 0x82, 0xB1, 0x1D, 0xFB,
  0x75, 0x01, 0x0C, 0xB0, 0xE0, 0xDF, 0xC7, 0x70, 0x7F, 0xF9, 0x77, 0x10, 0x30, 0xCF, 0xE7, 0x73,
  0x05, 0x0D, 0xFC, 0x77, 0x50, 0x50, 0xAF, 0xA7, 0x77, 0x82, 0x16, 0xAD, 0xC0, 0xD7, 0x77, 0x48,
  0x31, 0x35, 0x61, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_tty() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 4, 32, 31), Box(0, 0, 35, 35),
      ic_round_36_places_tty_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_umbrella 36x36, 4-bit Alpha,  RLE, 177 bytes.
static const uint8_t ic_round_36_places_umbrella_data[] PROGMEM = {
  0x72, 0x82, 0x15, 0x74, 0x76, 0x04, 0x0E, 0xB0, 0xB7, 0x40, 0x10, 0xED, 0x08, 0x73, 0x05, 0xA0,
  0xC0, 0x8A, 0x0D, 0x73, 0x07, 0xA8, 0x37, 0x09, 0xE6, 0x73, 0x07, 0xA0, 0x77, 0x70, 0x7A, 0x07,
  0x77, 0x08, 0xA0, 0x87, 0x81, 0x38, 0x43, 0x09, 0xC0, 0x93, 0x82, 0x48, 0x38, 0xB0, 0x0C, 0xE0,
  0x0C, 0xB0, 0x80, 0x3F, 0xFA, 0x81, 0x30, 0xDD, 0x0C, 0xA0, 0xCD, 0x0D, 0x20, 0x8A, 0x82, 0xC8,
  0x37, 0xA8, 0x27, 0x38, 0xCA, 0x08, 0x20, 0x3A, 0x0E, 0x20, 0x7A, 0x07, 0x20, 0xEA, 0x03, 0x30,
  0xDA, 0x81, 0x40, 0x7A, 0x81, 0x70, 0x4A, 0x0D, 0x40, 0x8A, 0x81, 0x90, 0x7A, 0x81, 0x70, 0x9A,
  0x08, 0x40, 0x3A, 0x81, 0xE0, 0x7A, 0x81, 0x70, 0xEA, 0x03, 0x50, 0xDA, 0x04, 0x07, 0xA0, 0x70,
  0x4A, 0x0D, 0x60, 0x8A, 0x09, 0x07, 0xA0, 0x70, 0x9A, 0x08, 0x60, 0x3A, 0x0E, 0x07, 0xA0, 0x70,
  0xEA, 0x03, 0x70, 0xDA, 0x0B, 0xA0, 0xBA, 0x0D, 0x71, 0x08, 0xF9, 0x08, 0x71, 0x03, 0xF9, 0x03,
  0x72, 0x0D, 0xE0, 0xD7, 0x30, 0x8E, 0x08, 0x73, 0x03, 0xE0, 0x37, 0x40, 0xDC, 0x0D, 0x75, 0x08,
  0xC0, 0x87, 0x50, 0x3C, 0x03, 0x76, 0x0D, 0xA0, 0xD7, 0x70, 0x8A, 0x08, 0x77, 0x82, 0x2D, 0xD2,
  0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_umbrella() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(9, 1, 26, 32), Box(0, 0, 35, 35),
      ic_round_36_places_umbrella_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_vape_free 36x36, 4-bit Alpha,  RLE, 258 bytes.
static const uint8_t ic_round_36_places_vape_free_data[] PROGMEM = {
  0x77, 0x72, 0x81, 0xA9, 0x27, 0x01, 0x77, 0x50, 0x2A, 0x0E, 0x04, 0x48, 0x21, 0xDF, 0x77, 0x75,
  0x83, 0x4D, 0xFE, 0x13, 0x03, 0xB0, 0x77, 0x75, 0x82, 0x1E, 0xF7, 0x40, 0xBB, 0x07, 0x75, 0x05,
  0x01, 0x58, 0x18, 0xFA, 0x50, 0xBB, 0x07, 0x72, 0x82, 0x5E, 0xFA, 0x58, 0x18, 0xFB, 0x60, 0xBB,
  0x07, 0x70, 0x4A, 0x0E, 0x04, 0x58, 0x1D, 0xF8, 0x70, 0xBB, 0x07, 0x68, 0x1C, 0xFB, 0x58, 0x33,
  0xCF, 0xE1, 0x71, 0x0B, 0xB0, 0x74, 0x01, 0xA0, 0x24, 0x02, 0xB0, 0x87, 0x30, 0xBB, 0x07, 0x30,
  0x2A, 0x50, 0x10, 0xEB, 0x09, 0x73, 0x0B, 0xB0, 0x73, 0x81, 0x4F, 0x46, 0x05, 0x0B, 0xA0, 0xB7,
  0x30, 0xBB, 0x07, 0x38, 0x14, 0xD2, 0x70, 0x6A, 0x08, 0x73, 0x0B, 0xB0, 0x73, 0x86, 0x4E, 0xCB,
  0xBA, 0x72, 0x20, 0x7A, 0x01, 0x73, 0x0B, 0xB0, 0x73, 0x04, 0xE0, 0x72, 0x81, 0xDF, 0x87, 0x40,
  0xBB, 0x07, 0x38, 0x33, 0x77, 0x8D, 0xA8, 0x36, 0x07, 0xFB, 0x75, 0x0B, 0xB0, 0x77, 0x85, 0xBF,
  0xE0, 0x4F, 0xE7, 0x60, 0xBB, 0x07, 0x60, 0x3A, 0x00, 0x3A, 0x77, 0x0B, 0xB0, 0x76, 0xA0, 0x40,
  0x3A, 0x77, 0x10, 0xBB, 0x07, 0x58, 0x4E, 0xF3, 0x3F, 0xE7, 0x72, 0x0B, 0xB0, 0x74, 0x03, 0x05,
  0x20, 0x50, 0x37, 0x73, 0x0B, 0xB0, 0x77, 0x48, 0x53, 0x45, 0x69, 0xC7, 0x1F, 0xD0, 0x73, 0x04,
  0xA8, 0x2C, 0x30, 0xBE, 0x07, 0x1B, 0x0A, 0x0D, 0xF9, 0x07, 0x30, 0x4A, 0x81, 0xC0, 0xEE, 0x07,
  0x1B, 0x02, 0x0A, 0xFA, 0x07, 0x38, 0x74, 0xFE, 0x04, 0xBC, 0xDE, 0xA0, 0x71, 0xFF, 0x90, 0x73,
  0x04, 0x08, 0x68, 0x11, 0x43, 0x18, 0x09, 0x07, 0x0B, 0xB0, 0x77, 0x77, 0x60, 0xAB, 0x07, 0x77,
  0x76, 0x0A, 0xB0, 0x77, 0x77, 0x60, 0xAB, 0x01, 0x77, 0x76, 0x81, 0xAF, 0xD7, 0x77, 0x71, 0x03,
  0x01, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_vape_free() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 3, 32, 33), Box(0, 0, 35, 35),
      ic_round_36_places_vape_free_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_vaping_rooms 36x36, 4-bit Alpha,  RLE, 180 bytes.
static const uint8_t ic_round_36_places_vaping_rooms_data[] PROGMEM = {
  0x77, 0x71, 0x81, 0xA9, 0x27, 0x77, 0x50, 0x2A, 0x0E, 0x04, 0x77, 0x75, 0x83, 0x4D, 0xFE, 0x17,
  0x77, 0x58, 0x21, 0xEF, 0x77, 0x76, 0x05, 0x01, 0x58, 0x18, 0xFA, 0x77, 0x48, 0x25, 0xEF, 0xA5,
  0x81, 0x8F, 0xB7, 0x73, 0x04, 0xA0, 0xE0, 0x45, 0x81, 0xDF, 0x87, 0x73, 0x81, 0xCF, 0xB5, 0x83,
  0x3C, 0xFE, 0x17, 0x72, 0x01, 0xA0, 0x24, 0x02, 0xB0, 0x87, 0x73, 0x03, 0xA5, 0x01, 0x0E, 0xB0,
  0x97, 0x72, 0x02, 0xA0, 0x46, 0x05, 0x0B, 0xA0, 0xB7, 0x72, 0x82, 0xCF, 0xD2, 0x70, 0x6A, 0x08,
  0x77, 0x10, 0x30, 0xEA, 0x84, 0xCB, 0xBA, 0x72, 0x20, 0x7A, 0x01, 0x77, 0x10, 0x30, 0xDF, 0x07,
  0x28, 0x1D, 0xF8, 0x77, 0x38, 0x43, 0x67, 0x78, 0xDA, 0x83, 0x60, 0x7F, 0xB7, 0x77, 0x28, 0x5B,
  0xFE, 0x04, 0xFE, 0x77, 0x72, 0x03, 0xA0, 0x03, 0xA7, 0x77, 0x3A, 0x04, 0x03, 0xA7, 0x77, 0x38,
  0x4E, 0xF3, 0x3F, 0xE7, 0x77, 0x30, 0x30, 0x52, 0x05, 0x03, 0x77, 0x77, 0x38, 0x53, 0x45, 0x69,
  0xC7, 0x1F, 0xFD, 0x81, 0xC3, 0xBE, 0x07, 0x1B, 0x0A, 0x0D, 0xFF, 0x90, 0xC0, 0xEE, 0x07, 0x1B,
  0x02, 0x0A, 0xFF, 0x98, 0x4E, 0x4B, 0xCD, 0xEA, 0x07, 0x1F, 0xFE, 0x08, 0x58, 0x11, 0x43, 0x18,
  0x09, 0x77, 0x04, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_vaping_rooms() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 32, 28), Box(0, 0, 35, 35),
      ic_round_36_places_vaping_rooms_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_villa 36x36, 4-bit Alpha,  RLE, 159 bytes.
static const uint8_t ic_round_36_places_villa_data[] PROGMEM = {
  0x77, 0x28, 0x22, 0x8B, 0x57, 0x77, 0x10, 0x60, 0xBB, 0x0E, 0x77, 0x58, 0x13, 0x9E, 0xE7, 0x72,
  0x81, 0x17, 0xDF, 0xA7, 0x70, 0x40, 0xAF, 0xD7, 0x48, 0x12, 0x8E, 0xFF, 0x72, 0x05, 0x0C, 0xFF,
  0xB7, 0x10, 0x5F, 0xFD, 0x71, 0x07, 0xFF, 0xD7, 0x10, 0x7F, 0xFD, 0x71, 0x07, 0xD0, 0xD0, 0x27,
  0x78, 0x53, 0xBE, 0xB3, 0x07, 0xD0, 0x87, 0x70, 0x10, 0xEB, 0x81, 0xE1, 0x7D, 0x07, 0x77, 0x06,
  0xD0, 0x60, 0x7D, 0x07, 0x20, 0x20, 0xDF, 0xFA, 0x00, 0x7D, 0x07, 0x20, 0x7F, 0xFB, 0x00, 0x7D,
  0x07, 0x20, 0x7F, 0xFB, 0x00, 0x7D, 0x07, 0x20, 0x7F, 0xFB, 0x00, 0x7D, 0x07, 0x20, 0x7F, 0xFB,
  0x00, 0x7D, 0x07, 0x20, 0x7F, 0xFB, 0x00, 0x7D, 0x07, 0x20, 0x7F, 0x81, 0x70, 0x7F, 0x00, 0x7D,
  0x07, 0x20, 0x7F, 0x3F, 0x00, 0x7D, 0x07, 0x20, 0x7F, 0x3F, 0x00, 0x7D, 0x07, 0x20, 0x7F, 0x3F,
  0x00, 0x7D, 0x07, 0x20, 0x7F, 0x3F, 0x00, 0x7D, 0x07, 0x20, 0x7F, 0x3F, 0x07, 0x05, 0xD0, 0x72,
  0x05, 0xF3, 0xF8, 0x65, 0x05, 0x77, 0x77, 0x33, 0x05, 0x80, 0x27, 0x38, 0x02, 0x70, 0x51,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_villa() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 5, 31, 31), Box(0, 0, 35, 35),
      ic_round_36_places_villa_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_wash 36x36, 4-bit Alpha,  RLE, 200 bytes.
static const uint8_t ic_round_36_places_wash_data[] PROGMEM = {
  0x77, 0x74, 0x81, 0x1E, 0x87, 0x77, 0x71, 0x0C, 0xA0, 0x47, 0x77, 0x60, 0x7B, 0x0E, 0x01, 0x77,
  0x74, 0x01, 0x0E, 0xC0, 0x87, 0x77, 0x40, 0x8D, 0x0E, 0x01, 0x77, 0x73, 0x0D, 0xE0, 0x57, 0x58,
  0x15, 0xD8, 0x48, 0x18, 0xE2, 0x20, 0xEE, 0x06, 0x74, 0x06, 0xB0, 0x72, 0x04, 0xA0, 0xB2, 0x0B,
  0xE0, 0x37, 0x30, 0x7C, 0x0A, 0x20, 0xCB, 0x81, 0x40, 0x3D, 0x0A, 0x73, 0x08, 0xD0, 0x42, 0x0E,
  0xB0, 0x62, 0x83, 0x3B, 0xED, 0x77, 0x30, 0x9D, 0x0B, 0x30, 0x8A, 0x0E, 0x01, 0x77, 0x20, 0xAE,
  0x02, 0x48, 0x14, 0x61, 0x77, 0x20, 0xAE, 0x08, 0x77, 0x72, 0x0B, 0xFF, 0xF9, 0x0E, 0x05, 0x50,
  0x10, 0xBF, 0xFF, 0xB0, 0xE4, 0x01, 0x0C, 0xFF, 0xFC, 0x0D, 0x40, 0xBF, 0xF9, 0x0D, 0x80, 0x5B,
  0x0A, 0x02, 0x30, 0x3F, 0xFA, 0x01, 0x77, 0x07, 0xFF, 0xA0, 0xD8, 0x09, 0x0B, 0x81, 0xA2, 0x7F,
  0xFF, 0xFA, 0x0D, 0x07, 0xFF, 0xFF, 0xA0, 0xE0, 0x7F, 0xFF, 0xF9, 0x81, 0xD5, 0x7F, 0xFA, 0x02,
  0x77, 0x07, 0xFF, 0xA0, 0xA8, 0x07, 0x70, 0x32, 0x07, 0xFF, 0xFF, 0x98, 0x13, 0x07, 0xFF, 0xFF,
  0x98, 0x17, 0x07, 0xFF, 0xFF, 0x82, 0xD1, 0x07, 0xFF, 0xA0, 0x68, 0x07, 0x33, 0x06, 0xFF, 0xA0,
  0x68, 0x04, 0x36, 0x02, 0xFF, 0xFC, 0x0E, 0x02, 0x50, 0x9F, 0xFF, 0xC0, 0x76, 0x0A, 0xFF, 0xFB,
  0x03, 0x70, 0x20, 0x68, 0x0A, 0x17, 0x03, 0x50,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_wash() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 2, 32, 34), Box(0, 0, 35, 35),
      ic_round_36_places_wash_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_water_damage 36x36, 4-bit Alpha,  RLE, 136 bytes.
static const uint8_t ic_round_36_places_water_damage_data[] PROGMEM = {
  0x75, 0x82, 0x3D, 0xD3, 0x77, 0x72, 0x04, 0x0E, 0xA0, 0xE0, 0x47, 0x77, 0x05, 0xE0, 0x57, 0x75,
  0x07, 0xF9, 0x07, 0x77, 0x30, 0x8F, 0xB0, 0x87, 0x71, 0x09, 0xFD, 0x0A, 0x76, 0x0B, 0xFF, 0x0B,
  0x73, 0x01, 0x0C, 0xFF, 0xA0, 0xC0, 0x17, 0x02, 0x0D, 0xFF, 0xC0, 0xD0, 0x25, 0x03, 0x0E, 0xFF,
  0xE0, 0xE0, 0x33, 0x04, 0x0E, 0xFB, 0x00, 0xCF, 0xB8, 0x2E, 0x40, 0x5F, 0xC8, 0x2E, 0x11, 0xEF,
  0xC0, 0x50, 0x9F, 0xC0, 0x62, 0x06, 0xFC, 0x0A, 0x30, 0x7F, 0x0D, 0x40, 0xDF, 0x07, 0x60, 0x7F,
  0x06, 0x40, 0x6F, 0x07, 0x60, 0x7F, 0x01, 0x40, 0x1F, 0x07, 0x60, 0x7F, 0x01, 0x40, 0x1F, 0x07,
  0x60, 0x7F, 0x07, 0x40, 0x7F, 0x07, 0x60, 0x7F, 0x98, 0x27, 0x11, 0x7F, 0x90, 0x76, 0x07, 0xFF,
  0xE0, 0x76, 0x07, 0xFF, 0xE0, 0x76, 0x07, 0xFF, 0xE0, 0x76, 0x07, 0xFF, 0xE0, 0x76, 0x07, 0xFF,
  0xE0, 0x76, 0x02, 0x0D, 0xFF, 0xC0, 0xD0, 0x23,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_water_damage() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 5, 31, 29), Box(0, 0, 35, 35),
      ic_round_36_places_water_damage_data, Alpha4(color::Black));
  return value;
}

// Image file ic_round_36_places_wheelchair_pickup 36x36, 4-bit Alpha,  RLE, 237 bytes.
static const uint8_t ic_round_36_places_wheelchair_pickup_data[] PROGMEM = {
  0x38, 0x31, 0xAE, 0xD5, 0x77, 0x74, 0x0C, 0xC0, 0x47, 0x77, 0x20, 0x2D, 0x0A, 0x77, 0x72, 0x02,
  0xD0, 0xA7, 0x77, 0x30, 0xCC, 0x04, 0x77, 0x73, 0x83, 0x1A, 0xED, 0x58, 0x0E, 0x20, 0x04, 0x80,
  0x17, 0x06, 0x01, 0x77, 0x70, 0x9F, 0x0E, 0x03, 0x77, 0x50, 0x4F, 0xA0, 0xB4, 0x82, 0x2D, 0xD2,
  0x74, 0x07, 0xFB, 0x40, 0x7A, 0x07, 0x74, 0x07, 0xFB, 0x40, 0x7A, 0x07, 0x74, 0x07, 0xFB, 0x40,
  0x7A, 0x07, 0x74, 0x07, 0xFA, 0x0C, 0x40, 0x7A, 0x07, 0x74, 0x07, 0xF9, 0x08, 0x50, 0x7A, 0x07,
  0x74, 0x07, 0xF0, 0x84, 0x81, 0x60, 0x7A, 0x07, 0x74, 0x07, 0xE0, 0xB3, 0x83, 0x3D, 0xF0, 0x7A,
  0x07, 0x74, 0x07, 0xE0, 0x12, 0x04, 0xB1, 0x07, 0xA0, 0x77, 0x40, 0x5D, 0x09, 0x20, 0x10, 0xEA,
  0x81, 0xE0, 0x7F, 0xA0, 0x85, 0x81, 0x57, 0xBA, 0x03, 0x20, 0x9A, 0x82, 0xD1, 0x07, 0xFB, 0x04,
  0x60, 0x7A, 0x30, 0xEA, 0x04, 0x20, 0x20, 0xDF, 0xA0, 0xD0, 0x15, 0x81, 0x7F, 0xD2, 0x02, 0xA0,
  0xD7, 0x40, 0x10, 0xDA, 0x09, 0x58, 0x17, 0xFC, 0x20, 0x3A, 0x0C, 0x71, 0x83, 0x27, 0x75, 0x4B,
  0x04, 0x48, 0x17, 0xFD, 0x20, 0x2A, 0x0E, 0x71, 0x07, 0xA8, 0x1A, 0x09, 0xA0, 0xD4, 0x81, 0x7F,
  0xE3, 0x0E, 0xA0, 0x47, 0x0C, 0xA8, 0x26, 0x01, 0xDA, 0x04, 0x30, 0x7A, 0x03, 0x20, 0x9A, 0x0D,
  0x01, 0x50, 0x7B, 0x01, 0x28, 0x14, 0xEB, 0x40, 0x7A, 0x08, 0x20, 0x10, 0xEA, 0x84, 0xE6, 0x20,
  0x3A, 0xB0, 0x87, 0x30, 0x7A, 0x0E, 0x01, 0x20, 0x4F, 0xB0, 0xB7, 0x40, 0x7B, 0x0A, 0x30, 0x40,
  0xEF, 0x09, 0x75, 0x02, 0x0D, 0xB0, 0x74, 0x85, 0x7B, 0xEF, 0xD9, 0x37, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_round_36_places_wheelchair_pickup() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 3, 33, 32), Box(0, 0, 35, 35),
      ic_round_36_places_wheelchair_pickup_data, Alpha4(color::Black));
  return value;
}
