#include "hardware.h"

using namespace roo_display;

// Image file ic_24_hardware_cast_connected 24x24, 4-bit Alpha,  RLE, 124 bytes 
static const uint8_t ic_24_hardware_cast_connected_data[] PROGMEM = {
  0x80, 0x98, 0x50, 0x04, 0x0E, 0xFF, 0xC0, 0xE0, 0x42, 0x0E, 0xFF, 0xE0, 0xE2, 0xA7, 0x74, 0xA2,
  0xA7, 0x74, 0xA2, 0xA2, 0xFF, 0x2A, 0x60, 0xCF, 0xE2, 0xA7, 0x03, 0x0B, 0xFC, 0x2A, 0x29, 0x82,
  0xDA, 0x61, 0x20, 0x60, 0xEF, 0xA2, 0xA2, 0xC0, 0xE0, 0x72, 0x03, 0x0E, 0xF9, 0x2A, 0x38, 0x12,
  0x5B, 0xA8, 0x2C, 0x20, 0x3F, 0x92, 0xA6, 0x85, 0x3D, 0xFD, 0x20, 0x6F, 0x2A, 0x29, 0x81, 0xC8,
  0x12, 0x81, 0xBF, 0xC2, 0x0B, 0xE2, 0xA2, 0xB0, 0xE0, 0x52, 0x83, 0xDF, 0x70, 0x3E, 0x2A, 0x30,
  0x30, 0xAA, 0x86, 0x50, 0x3F, 0xE1, 0x0C, 0xD2, 0xA5, 0x86, 0x7F, 0xE1, 0x0B, 0xF6, 0x72, 0xA2,
  0x0E, 0x09, 0x28, 0x5A, 0xF8, 0x05, 0xFA, 0x72, 0xA2, 0xA8, 0x78, 0x03, 0xFC, 0x02, 0xFD, 0x2F,
  0x90, 0xE2, 0xA0, 0xE2, 0xA2, 0xA2, 0xF0, 0xE0, 0x48, 0x09, 0x85, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_cast_connected() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_cast_connected_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_laptop 24x24, 4-bit Alpha,  RLE, 59 bytes 
static const uint8_t ic_24_hardware_laptop_data[] PROGMEM = {
  0x80, 0x9B, 0x60, 0x04, 0x0E, 0xFF, 0xA0, 0xE0, 0x44, 0x0E, 0xFF, 0xC0, 0xE4, 0xA7, 0x72, 0xA4,
  0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7,
  0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0x0E, 0xFF, 0xC0, 0xE4, 0x04,
  0x0E, 0xFF, 0xA0, 0xE0, 0x42, 0x80, 0xD4, 0xF8, 0x09, 0xB4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_laptop() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_laptop_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_laptop_chromebook 24x24, 4-bit Alpha,  RLE, 50 bytes 
static const uint8_t ic_24_hardware_laptop_chromebook_data[] PROGMEM = {
  0x80, 0x98, 0x60, 0xFF, 0xE4, 0xFF, 0xE4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4,
  0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7,
  0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xFF, 0xE4, 0xFF, 0xE4, 0xF9, 0x4F, 0x92, 0x80, 0xD4, 0xF8, 0x09,
  0xB4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_laptop_chromebook() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_laptop_chromebook_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_sim_card 24x24, 4-bit Alpha,  RLE, 76 bytes 
static const uint8_t ic_24_hardware_sim_card_data[] PROGMEM = {
  0x80, 0xE5, 0x00, 0x7F, 0x90, 0xE0, 0x47, 0x50, 0x7F, 0xB0, 0xD7, 0x40, 0x7F, 0xD7, 0x30, 0x7F,
  0xE7, 0x20, 0x7F, 0xF7, 0x10, 0x7F, 0xF9, 0x71, 0xFF, 0xA7, 0x1F, 0xFA, 0x71, 0xFF, 0xA7, 0x1B,
  0x2A, 0x2A, 0x2B, 0x71, 0xB2, 0xA2, 0xA2, 0xB7, 0x1B, 0x2E, 0x2B, 0x71, 0xB2, 0xE2, 0xB7, 0x1F,
  0x2F, 0x71, 0xF2, 0xF7, 0x1B, 0x2A, 0x2A, 0x2B, 0x71, 0xB2, 0xA2, 0xA2, 0xB7, 0x1F, 0xFA, 0x71,
  0x0E, 0xFF, 0x0E, 0x71, 0x04, 0x0E, 0xFD, 0x0E, 0x04, 0x80, 0xE0, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_sim_card() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_sim_card_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_watch 24x24, 4-bit Alpha,  RLE, 128 bytes 
static const uint8_t ic_24_hardware_watch_data[] PROGMEM = {
  0x70, 0x1F, 0x90, 0x17, 0x70, 0x3F, 0x90, 0x37, 0x70, 0x6F, 0x90, 0x67, 0x70, 0x9F, 0x90, 0x97,
  0x70, 0xBF, 0x90, 0xB7, 0x70, 0xEF, 0x90, 0xE7, 0x60, 0xBA, 0x08, 0x03, 0x20, 0x30, 0x8A, 0x0B,
  0x74, 0x82, 0x9F, 0xD2, 0x68, 0x22, 0xDF, 0x97, 0x20, 0x3A, 0x02, 0x71, 0x02, 0xA0, 0x27, 0x18,
  0x19, 0xF8, 0x73, 0x81, 0x8F, 0x97, 0x18, 0x1D, 0xF3, 0x73, 0x81, 0x3F, 0xD7, 0x1A, 0x75, 0xA7,
  0x1A, 0x75, 0xA7, 0x18, 0x1D, 0xF3, 0x73, 0x81, 0x3F, 0xD7, 0x18, 0x19, 0xF8, 0x73, 0x81, 0x8F,
  0x97, 0x10, 0x2A, 0x02, 0x71, 0x02, 0xA0, 0x27, 0x28, 0x29, 0xFD, 0x26, 0x82, 0x2D, 0xF8, 0x74,
  0x0B, 0xA0, 0x80, 0x32, 0x03, 0x08, 0xA0, 0xB7, 0x60, 0xEF, 0x90, 0xE7, 0x70, 0xBF, 0x90, 0xB7,
  0x70, 0x9F, 0x90, 0x97, 0x70, 0x6F, 0x90, 0x67, 0x70, 0x3F, 0x90, 0x37, 0x70, 0x1F, 0x90, 0x17,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_watch() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_watch_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_keyboard_voice 24x24, 4-bit Alpha,  RLE, 90 bytes 
static const uint8_t ic_24_hardware_keyboard_voice_data[] PROGMEM = {
  0x80, 0x99, 0x60, 0x82, 0x9E, 0xE9, 0x77, 0x50, 0x9C, 0x08, 0x77, 0x40, 0xEC, 0x0E, 0x77, 0x4E,
  0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x90, 0xB2, 0x0E, 0xC0, 0xE2,
  0x0B, 0x97, 0x30, 0xC0, 0xE2, 0x09, 0xC0, 0x82, 0x0E, 0x0C, 0x73, 0x81, 0x7F, 0x52, 0x82, 0x8E,
  0xE8, 0x28, 0x16, 0xF7, 0x74, 0x81, 0xDE, 0x36, 0x81, 0x3E, 0xD7, 0x58, 0x33, 0xEF, 0x81, 0x28,
  0x32, 0x8F, 0xE3, 0x76, 0x02, 0x0C, 0xA0, 0x0E, 0xA0, 0xC0, 0x27, 0x72, 0x04, 0x09, 0xA0, 0x90,
  0x47, 0x76, 0xA7, 0x77, 0x1A, 0x77, 0x71, 0xA8, 0x0E, 0x70,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_keyboard_voice() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_keyboard_voice_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_speaker_group 24x24, 4-bit Alpha,  RLE, 123 bytes 
static const uint8_t ic_24_hardware_speaker_group_data[] PROGMEM = {
  0x77, 0x77, 0x40, 0x60, 0xEF, 0x90, 0xE0, 0x67, 0x50, 0xEF, 0xB0, 0xE7, 0x5C, 0x82, 0xA1, 0x1A,
  0xC7, 0x5C, 0x01, 0x20, 0x1C, 0x71, 0xA2, 0xC0, 0x12, 0x01, 0xC7, 0x1A, 0x2C, 0x82, 0xA1, 0x1A,
  0xC7, 0x1A, 0x2F, 0xD7, 0x1A, 0x2C, 0x82, 0xC8, 0x8C, 0xC7, 0x1A, 0x2B, 0x06, 0x40, 0x6B, 0x71,
  0xA2, 0xA8, 0x68, 0x07, 0xEE, 0x70, 0x8A, 0x71, 0xA2, 0xA0, 0x20, 0x4C, 0x04, 0x02, 0xA7, 0x1A,
  0x2A, 0x10, 0x7C, 0x07, 0x1A, 0x71, 0xA2, 0xA0, 0x20, 0x4C, 0x04, 0x02, 0xA7, 0x1A, 0x2A, 0x86,
  0x80, 0x7E, 0xE7, 0x08, 0xA7, 0x1A, 0x2B, 0x06, 0x40, 0x6B, 0x71, 0xA2, 0xC8, 0x2C, 0x88, 0xCC,
  0x71, 0xA2, 0x0E, 0xFB, 0x0E, 0x71, 0xA2, 0x06, 0x0E, 0xF9, 0x0E, 0x05, 0x71, 0xA7, 0x77, 0x1A,
  0x77, 0x71, 0x0E, 0xFC, 0x75, 0x04, 0x0E, 0xFB, 0x77, 0x77, 0x40,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_speaker_group() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_speaker_group_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_desktop_windows 24x24, 4-bit Alpha,  RLE, 69 bytes 
static const uint8_t ic_24_hardware_desktop_windows_data[] PROGMEM = {
  0x80, 0xD5, 0x00, 0x40, 0xEF, 0xFC, 0x0E, 0x04, 0x20, 0xEF, 0xFE, 0x0E, 0x2A, 0x77, 0x4A, 0x2A,
  0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77,
  0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A,
  0x20, 0xEF, 0xFE, 0x0E, 0x20, 0x40, 0xEF, 0xFC, 0x0E, 0x04, 0x74, 0xC7, 0x76, 0xC7, 0x74, 0xF9,
  0x77, 0x2F, 0x98, 0x0E, 0x40,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_desktop_windows() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_desktop_windows_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_tablet_mac 24x24, 4-bit Alpha,  RLE, 83 bytes 
static const uint8_t ic_24_hardware_tablet_mac_data[] PROGMEM = {
  0x20, 0x20, 0xBF, 0xF9, 0x0B, 0x02, 0x50, 0xBF, 0xFB, 0x0B, 0x5F, 0xFD, 0x5A, 0x77, 0x1A, 0x5A,
  0x77, 0x1A, 0x5A, 0x77, 0x1A, 0x5A, 0x77, 0x1A, 0x5A, 0x77, 0x1A, 0x5A, 0x77, 0x1A, 0x5A, 0x77,
  0x1A, 0x5A, 0x77, 0x1A, 0x5A, 0x77, 0x1A, 0x5A, 0x77, 0x1A, 0x5A, 0x77, 0x1A, 0x5A, 0x77, 0x1A,
  0x5A, 0x77, 0x1A, 0x5A, 0x77, 0x1A, 0x5A, 0x77, 0x1A, 0x5A, 0x77, 0x1A, 0x5F, 0xFD, 0x5F, 0x98,
  0x16, 0x07, 0xF9, 0x5F, 0x93, 0xF9, 0x50, 0xBF, 0x81, 0x70, 0x7F, 0x0B, 0x50, 0x20, 0xBF, 0xF9,
  0x0B, 0x02, 0x30,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_tablet_mac() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_tablet_mac_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_headset_mic 24x24, 4-bit Alpha,  RLE, 99 bytes 
static const uint8_t ic_24_hardware_headset_mic_data[] PROGMEM = {
  0x77, 0x77, 0x48, 0x14, 0x9D, 0xA8, 0x1D, 0x94, 0x77, 0x02, 0x0C, 0xF9, 0x0C, 0x02, 0x74, 0x84,
  0x4E, 0xFD, 0x72, 0x28, 0x42, 0x7D, 0xFE, 0x37, 0x28, 0x22, 0xEF, 0x97, 0x18, 0x2A, 0xFE, 0x27,
  0x18, 0x1C, 0xF9, 0x73, 0x81, 0xAF, 0xC7, 0x81, 0x4F, 0xD7, 0x58, 0x1E, 0xF4, 0x68, 0x19, 0xF7,
  0x75, 0x81, 0x7F, 0x96, 0x81, 0xDF, 0x27, 0x58, 0x12, 0xFD, 0x6A, 0x77, 0xA6, 0xA7, 0x7A, 0x6A,
  0x77, 0xA6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0x0E, 0xD6, 0xE6, 0x09,
  0xD6, 0xE7, 0x08, 0x0E, 0xB6, 0xE7, 0x77, 0x19, 0x0E, 0x77, 0x1F, 0x90, 0x87, 0x71, 0xE0, 0xE0,
  0x87, 0x77, 0x70,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_headset_mic() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_headset_mic_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_security 24x24, 4-bit Alpha,  RLE, 115 bytes 
static const uint8_t ic_24_hardware_security_data[] PROGMEM = {
  0x77, 0x77, 0x68, 0x25, 0xCC, 0x57, 0x74, 0x06, 0x0D, 0xC0, 0xD0, 0x67, 0x68, 0x11, 0x8E, 0xA0,
  0xD0, 0x6C, 0x81, 0xE8, 0x17, 0x10, 0x30, 0xAB, 0x0B, 0x04, 0x2F, 0x0A, 0x03, 0x6B, 0x09, 0x02,
  0x4F, 0xA6, 0xA0, 0x16, 0xFA, 0x6A, 0x7F, 0xA6, 0xA7, 0xFA, 0x6A, 0x7F, 0xA6, 0xA7, 0xFA, 0x6A,
  0x7F, 0xA6, 0x0D, 0xF9, 0x68, 0x11, 0xFD, 0x60, 0xBF, 0x96, 0x81, 0x4F, 0xB6, 0x07, 0xF9, 0x68,
  0x19, 0xF7, 0x60, 0x2F, 0x95, 0x82, 0x1E, 0xF2, 0x70, 0xBF, 0x58, 0x19, 0xFA, 0x71, 0x02, 0xF4,
  0x04, 0xA0, 0x27, 0x20, 0x7E, 0x38, 0x23, 0xEF, 0x77, 0x40, 0xAD, 0x28, 0x25, 0xEF, 0xA7, 0x60,
  0xAC, 0x04, 0x0B, 0xA0, 0x97, 0x71, 0x06, 0x0E, 0xC0, 0xE0, 0x67, 0x73, 0x84, 0x17, 0xDD, 0x71,
  0x77, 0x77, 0x50,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_security() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_security_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_smartphone 24x24, 4-bit Alpha,  RLE, 74 bytes 
static const uint8_t ic_24_hardware_smartphone_data[] PROGMEM = {
  0x77, 0x77, 0x10, 0x40, 0xEF, 0xB0, 0xE0, 0x47, 0x30, 0xEF, 0xD0, 0xE7, 0x3F, 0xF7, 0x3F, 0xF7,
  0x3A, 0x73, 0xA7, 0x3A, 0x73, 0xA7, 0x3A, 0x73, 0xA7, 0x3A, 0x73, 0xA7, 0x3A, 0x73, 0xA7, 0x3A,
  0x73, 0xA7, 0x3A, 0x73, 0xA7, 0x3A, 0x73, 0xA7, 0x3A, 0x73, 0xA7, 0x3A, 0x73, 0xA7, 0x3A, 0x73,
  0xA7, 0x3A, 0x73, 0xA7, 0x3A, 0x73, 0xA7, 0x3A, 0x73, 0xA7, 0x3F, 0xF7, 0x3F, 0xF7, 0x30, 0xEF,
  0xD0, 0xE7, 0x30, 0x40, 0xEF, 0xB0, 0xE0, 0x47, 0x77, 0x71,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_smartphone() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_smartphone_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_dock 24x24, 4-bit Alpha,  RLE, 68 bytes 
static const uint8_t ic_24_hardware_dock_data[] PROGMEM = {
  0x77, 0x77, 0x20, 0x40, 0xEF, 0x90, 0xE0, 0x47, 0x50, 0xEF, 0xB0, 0xE7, 0x5F, 0xD7, 0x5F, 0xD7,
  0x5A, 0x71, 0xA7, 0x5A, 0x71, 0xA7, 0x5A, 0x71, 0xA7, 0x5A, 0x71, 0xA7, 0x5A, 0x71, 0xA7, 0x5A,
  0x71, 0xA7, 0x5A, 0x71, 0xA7, 0x5A, 0x71, 0xA7, 0x5A, 0x71, 0xA7, 0x5A, 0x71, 0xA7, 0x5F, 0xD7,
  0x5F, 0xD7, 0x50, 0xEF, 0xB0, 0xE7, 0x50, 0x40, 0xEF, 0x90, 0xE0, 0x48, 0x0F, 0x20, 0xF9, 0x77,
  0x2F, 0x97, 0x77, 0x74,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_dock() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_dock_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_keyboard_arrow_left 24x24, 4-bit Alpha,  RLE, 60 bytes 
static const uint8_t ic_24_hardware_keyboard_arrow_left_data[] PROGMEM = {
  0x80, 0xA8, 0x10, 0x00, 0x17, 0x77, 0x82, 0x1D, 0xD1, 0x77, 0x58, 0x21, 0xDF, 0xB7, 0x75, 0x82,
  0x1D, 0xFB, 0x77, 0x58, 0x21, 0xDF, 0xB7, 0x75, 0x82, 0x1D, 0xFB, 0x77, 0x60, 0xBA, 0x01, 0x77,
  0x68, 0x21, 0xDF, 0xC7, 0x77, 0x82, 0x1D, 0xFC, 0x77, 0x78, 0x21, 0xDF, 0xC7, 0x77, 0x82, 0x1D,
  0xFC, 0x77, 0x78, 0x21, 0xDD, 0x17, 0x77, 0x00, 0x18, 0x0A, 0xA5, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_keyboard_arrow_left() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_keyboard_arrow_left_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_device_hub 24x24, 4-bit Alpha,  RLE, 73 bytes 
static const uint8_t ic_24_hardware_device_hub_data[] PROGMEM = {
  0x80, 0x99, 0x60, 0x82, 0x9E, 0xE9, 0x77, 0x50, 0x9C, 0x08, 0x77, 0x40, 0xEC, 0x0E, 0x77, 0x40,
  0xEC, 0x0E, 0x77, 0x40, 0x8C, 0x08, 0x77, 0x50, 0x8A, 0x08, 0x77, 0x7A, 0x77, 0x71, 0xA7, 0x77,
  0x1A, 0x77, 0x70, 0x7A, 0x07, 0x77, 0x50, 0x7C, 0x07, 0x77, 0x30, 0x7A, 0x00, 0x4A, 0x07, 0x77,
  0x10, 0x7A, 0x05, 0x20, 0x5A, 0x07, 0x73, 0xE0, 0x54, 0x05, 0xE6, 0xD0, 0x66, 0x06, 0xD6, 0xD7,
  0x1D, 0x6D, 0x71, 0xD6, 0xD7, 0x1D, 0x80, 0x98, 0x70,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_device_hub() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_device_hub_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_headset 24x24, 4-bit Alpha,  RLE, 93 bytes 
static const uint8_t ic_24_hardware_headset_data[] PROGMEM = {
  0x77, 0x77, 0x48, 0x14, 0x9D, 0xA8, 0x1D, 0x94, 0x77, 0x02, 0x0C, 0xF9, 0x0C, 0x02, 0x74, 0x84,
  0x4E, 0xFD, 0x72, 0x28, 0x42, 0x7D, 0xFE, 0x37, 0x28, 0x22, 0xEF, 0x97, 0x18, 0x2A, 0xFE, 0x27,
  0x18, 0x1C, 0xF9, 0x73, 0x81, 0xAF, 0xC7, 0x81, 0x4F, 0xD7, 0x58, 0x1E, 0xF4, 0x68, 0x19, 0xF7,
  0x75, 0x81, 0x7F, 0x96, 0x81, 0xDF, 0x27, 0x58, 0x12, 0xFD, 0x6A, 0x77, 0xA6, 0xA7, 0x7A, 0x6A,
  0x77, 0xA6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0xE6, 0x0E, 0xD6, 0xD0, 0xE6,
  0x09, 0xD6, 0xD0, 0x87, 0x08, 0x0E, 0xB6, 0xB0, 0xE0, 0x88, 0x09, 0xC0, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_headset() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_headset_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_tablet_android 24x24, 4-bit Alpha,  RLE, 104 bytes 
static const uint8_t ic_24_hardware_tablet_android_data[] PROGMEM = {
  0x40, 0x90, 0xEF, 0xD0, 0xE0, 0x97, 0x09, 0xFF, 0xA0, 0x86, 0x0E, 0xFF, 0xA0, 0xE6, 0x90, 0xB7,
  0x70, 0xB9, 0x69, 0x0B, 0x77, 0x0B, 0x96, 0x90, 0xB7, 0x70, 0xB9, 0x69, 0x0B, 0x77, 0x0B, 0x96,
  0x90, 0xB7, 0x70, 0xB9, 0x69, 0x0B, 0x77, 0x0B, 0x96, 0x90, 0xB7, 0x70, 0xB9, 0x69, 0x0B, 0x77,
  0x0B, 0x96, 0x90, 0xB7, 0x70, 0xB9, 0x69, 0x0B, 0x77, 0x0B, 0x96, 0x90, 0xB7, 0x70, 0xB9, 0x69,
  0x0B, 0x77, 0x0B, 0x96, 0x90, 0xB7, 0x70, 0xB9, 0x69, 0x0B, 0x77, 0x0B, 0x96, 0x90, 0xB7, 0x70,
  0xB9, 0x69, 0x0B, 0x77, 0x0B, 0x96, 0xFF, 0xC6, 0xFF, 0xC6, 0x0E, 0xE4, 0xE0, 0xE6, 0x09, 0xFF,
  0xA0, 0x87, 0x08, 0x0E, 0xFD, 0x0E, 0x08, 0x40,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_tablet_android() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_tablet_android_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_laptop_mac 24x24, 4-bit Alpha,  RLE, 71 bytes 
static const uint8_t ic_24_hardware_laptop_mac_data[] PROGMEM = {
  0x80, 0x98, 0x60, 0x04, 0x0E, 0xFF, 0xA0, 0xE0, 0x44, 0x0E, 0xFF, 0xC0, 0xE4, 0xA7, 0x72, 0xA4,
  0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7,
  0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0x0E, 0xFF,
  0xC0, 0xD4, 0x04, 0x0E, 0xF0, 0x03, 0xF0, 0xE0, 0x42, 0x0E, 0xFB, 0x00, 0x3F, 0xB8, 0x1E, 0x4E,
  0xFF, 0xE0, 0xE0, 0x48, 0x09, 0xB4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_laptop_mac() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_laptop_mac_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_power_input 24x24, 4-bit Alpha,  RLE, 18 bytes 
static const uint8_t ic_24_hardware_power_input_data[] PROGMEM = {
  0x80, 0xBA, 0x60, 0xFF, 0xD5, 0xFF, 0xD8, 0x0E, 0x10, 0xD2, 0xD2, 0xD5, 0xD2, 0xD2, 0xD8, 0x0B,
  0xA7, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_power_input() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_power_input_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_keyboard_tab 24x24, 4-bit Alpha,  RLE, 58 bytes 
static const uint8_t ic_24_hardware_keyboard_tab_data[] PROGMEM = {
  0x80, 0xAB, 0x00, 0x00, 0x76, 0xA7, 0x60, 0x2A, 0x07, 0x5A, 0x77, 0x05, 0xA0, 0x74, 0xA7, 0x71,
  0x05, 0xA0, 0x73, 0xA7, 0x72, 0x05, 0xA0, 0x72, 0xA3, 0xFF, 0xB0, 0x71, 0xA3, 0xFF, 0xB0, 0x71,
  0xA7, 0x72, 0x05, 0xA0, 0x72, 0xA7, 0x71, 0x05, 0xA0, 0x73, 0xA7, 0x70, 0x5A, 0x07, 0x4A, 0x76,
  0x02, 0xA0, 0x75, 0xA7, 0x70, 0x07, 0x6A, 0x80, 0xA9, 0x60,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_keyboard_tab() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_keyboard_tab_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_keyboard 24x24, 4-bit Alpha,  RLE, 63 bytes 
static const uint8_t ic_24_hardware_keyboard_data[] PROGMEM = {
  0x80, 0x9E, 0x60, 0x04, 0x0E, 0xFF, 0xA0, 0xE0, 0x44, 0x0E, 0xFF, 0xC0, 0xE4, 0xFF, 0xE4, 0xB2,
  0x92, 0x92, 0x92, 0x92, 0xB4, 0xB2, 0x92, 0x92, 0x92, 0x92, 0xB4, 0xFF, 0xE4, 0xB2, 0x92, 0x92,
  0x92, 0x92, 0xB4, 0xB2, 0x92, 0x92, 0x92, 0x92, 0xB4, 0xFF, 0xE4, 0xFF, 0xE4, 0xE7, 0x1E, 0x4E,
  0x71, 0xE4, 0x0E, 0xFF, 0xC0, 0xE4, 0x04, 0x0E, 0xFF, 0xA0, 0xE0, 0x48, 0x09, 0xE6, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_keyboard() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_keyboard_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_keyboard_hide 24x24, 4-bit Alpha,  RLE, 78 bytes 
static const uint8_t ic_24_hardware_keyboard_hide_data[] PROGMEM = {
  0x80, 0x98, 0x60, 0x04, 0x0E, 0xFF, 0xA0, 0xE0, 0x44, 0x0E, 0xFF, 0xC0, 0xE4, 0xFF, 0xE4, 0xB2,
  0x92, 0x92, 0x92, 0x92, 0xB4, 0xB2, 0x92, 0x92, 0x92, 0x92, 0xB4, 0xFF, 0xE4, 0xB2, 0x92, 0x92,
  0x92, 0x92, 0xB4, 0xB2, 0x92, 0x92, 0x92, 0x92, 0xB4, 0xFF, 0xE4, 0xFF, 0xE4, 0xE7, 0x1E, 0x4E,
  0x71, 0xE4, 0x0E, 0xFF, 0xC0, 0xE4, 0x04, 0x0E, 0xFF, 0xA0, 0xE0, 0x48, 0x0E, 0x60, 0x07, 0xE0,
  0x77, 0x73, 0x07, 0xC0, 0x77, 0x75, 0x07, 0xA0, 0x77, 0x77, 0x00, 0x77, 0x77, 0x77,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_keyboard_hide() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_keyboard_hide_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_desktop_mac 24x24, 4-bit Alpha,  RLE, 76 bytes 
static const uint8_t ic_24_hardware_desktop_mac_data[] PROGMEM = {
  0x80, 0xD5, 0x00, 0x40, 0xEF, 0xFC, 0x0E, 0x04, 0x20, 0xEF, 0xFE, 0x0E, 0x2A, 0x77, 0x4A, 0x2A,
  0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77,
  0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2A, 0x77, 0x4A, 0x2F, 0xFF, 0x92, 0xFF, 0xF9, 0x20,
  0xEF, 0xFE, 0x0E, 0x20, 0x40, 0xEF, 0xFC, 0x0E, 0x04, 0x73, 0x05, 0xC0, 0x57, 0x73, 0x01, 0x0E,
  0xC0, 0xE0, 0x17, 0x72, 0x0A, 0xE0, 0xA7, 0x72, 0xF9, 0x80, 0xE4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_desktop_mac() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_desktop_mac_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_phonelink_off 24x24, 4-bit Alpha,  RLE, 116 bytes 
static const uint8_t ic_24_hardware_phonelink_off_data[] PROGMEM = {
  0x77, 0x74, 0x01, 0x77, 0x71, 0x81, 0x1D, 0xB7, 0x77, 0x18, 0x1B, 0xFB, 0x77, 0x71, 0x81, 0xCF,
  0xB2, 0x0A, 0xFF, 0x40, 0xEA, 0x0B, 0x20, 0xAF, 0xE4, 0xA8, 0x1B, 0xFB, 0x77, 0x5A, 0x18, 0x1B,
  0xFB, 0x77, 0x4A, 0x28, 0x1B, 0xFB, 0x70, 0xCE, 0x0C, 0x2A, 0x38, 0x1B, 0xFB, 0x6F, 0x92, 0xA4,
  0x81, 0xBF, 0xB5, 0xA4, 0xA2, 0xA5, 0x81, 0xBF, 0xB4, 0xA4, 0xA2, 0xA6, 0x81, 0xBF, 0xB3, 0xA4,
  0xA2, 0xA7, 0x81, 0xBF, 0xB2, 0x0A, 0x94, 0xA2, 0xA7, 0x18, 0x1B, 0xFB, 0x20, 0xA4, 0xA2, 0xA7,
  0x28, 0x1B, 0xFB, 0x6A, 0x2A, 0x73, 0x81, 0xBF, 0xB5, 0xFF, 0xD0, 0xB2, 0x0A, 0xFF, 0xF0, 0xB2,
  0x0A, 0xFF, 0xF0, 0xB2, 0x0A, 0x0B, 0x77, 0x48, 0x1B, 0xFB, 0x77, 0x71, 0x81, 0xBC, 0x17, 0x77,
  0x10, 0x17, 0x77, 0x60,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_phonelink_off() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_phonelink_off_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_scanner 24x24, 4-bit Alpha,  RLE, 74 bytes 
static const uint8_t ic_24_hardware_scanner_data[] PROGMEM = {
  0x80, 0x9F, 0x00, 0x81, 0xC8, 0x27, 0x76, 0x05, 0xB8, 0x1C, 0x61, 0x77, 0x48, 0x13, 0x9E, 0xB0,
  0xA0, 0x57, 0x75, 0x05, 0x0A, 0xB8, 0x1E, 0x93, 0x77, 0x48, 0x11, 0x6C, 0xB8, 0x1D, 0x72, 0x77,
  0x48, 0x12, 0x8D, 0xB0, 0xC0, 0x67, 0x75, 0x81, 0x39, 0xEA, 0x0B, 0x60, 0x50, 0xEF, 0xFA, 0x60,
  0xEF, 0xFB, 0x6F, 0xFC, 0x6A, 0x2A, 0x73, 0xA6, 0xA2, 0xA7, 0x3A, 0x6F, 0xFC, 0x60, 0xEF, 0xFA,
  0x0E, 0x60, 0x40, 0xEF, 0xF0, 0xE0, 0x48, 0x09, 0xB7, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_scanner() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_scanner_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_router 24x24, 4-bit Alpha,  RLE, 84 bytes 
static const uint8_t ic_24_hardware_router_data[] PROGMEM = {
  0x80, 0x9A, 0x00, 0x81, 0x18, 0xDA, 0x81, 0xC8, 0x17, 0x71, 0x89, 0x05, 0xEB, 0x63, 0x36, 0xBE,
  0x57, 0x78, 0x90, 0x85, 0x06, 0xAA, 0x60, 0x58, 0x77, 0x18, 0x61, 0xDC, 0x88, 0xCD, 0x17, 0x73,
  0x04, 0x40, 0x48, 0x0D, 0x00, 0xA7, 0x77, 0x1A, 0x77, 0x71, 0xA7, 0x77, 0x1A, 0x73, 0x05, 0x0E,
  0xFF, 0x0E, 0x04, 0x60, 0xEF, 0xFA, 0x0E, 0x6F, 0xFC, 0x6B, 0x29, 0x81, 0x70, 0x79, 0x2E, 0x6B,
  0x29, 0x81, 0x70, 0x79, 0x2E, 0x6F, 0xFC, 0x60, 0xEF, 0xFA, 0x0E, 0x60, 0x40, 0xEF, 0xF0, 0xE0,
  0x48, 0x09, 0x87, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_router() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_router_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_mouse 24x24, 4-bit Alpha,  RLE, 86 bytes 
static const uint8_t ic_24_hardware_mouse_data[] PROGMEM = {
  0x77, 0x77, 0x48, 0x13, 0x9D, 0x28, 0x1D, 0x93, 0x77, 0x10, 0x9B, 0x2B, 0x09, 0x76, 0x0B, 0xC2,
  0xC0, 0xB7, 0x40, 0x9D, 0x2D, 0x09, 0x72, 0x03, 0xE2, 0xE0, 0x27, 0x10, 0x9E, 0x2E, 0x09, 0x71,
  0x0D, 0xE2, 0xE0, 0xD7, 0x1F, 0x2F, 0x80, 0xE4, 0x0F, 0xFA, 0x71, 0xFF, 0xA7, 0x1F, 0xFA, 0x71,
  0xFF, 0xA7, 0x1F, 0xFA, 0x71, 0x0D, 0xFF, 0x0D, 0x71, 0x09, 0xFF, 0x08, 0x71, 0x02, 0xFF, 0x02,
  0x72, 0x09, 0xFD, 0x09, 0x74, 0x0B, 0xFB, 0x0B, 0x76, 0x09, 0xF9, 0x09, 0x77, 0x18, 0x12, 0x9D,
  0xA8, 0x1D, 0x82, 0x77, 0x77, 0x40,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_mouse() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_mouse_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_keyboard_capslock 24x24, 4-bit Alpha,  RLE, 61 bytes 
static const uint8_t ic_24_hardware_keyboard_capslock_data[] PROGMEM = {
  0x80, 0x9F, 0x70, 0x00, 0x17, 0x77, 0x82, 0x1C, 0xC1, 0x77, 0x50, 0x10, 0xCA, 0x0C, 0x01, 0x77,
  0x38, 0x61, 0xCF, 0xCC, 0xFC, 0x17, 0x71, 0x89, 0x01, 0xCF, 0xC1, 0x1C, 0xFC, 0x17, 0x68, 0x31,
  0xCF, 0xC1, 0x28, 0x31, 0xCF, 0xC1, 0x75, 0x82, 0xBF, 0xC1, 0x48, 0x21, 0xCF, 0xB7, 0x58, 0x12,
  0xB1, 0x68, 0x11, 0xB2, 0x80, 0x9A, 0x00, 0xFD, 0x75, 0xFD, 0x80, 0xAA, 0x20,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_keyboard_capslock() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_keyboard_capslock_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_keyboard_arrow_up 24x24, 4-bit Alpha,  RLE, 46 bytes 
static const uint8_t ic_24_hardware_keyboard_arrow_up_data[] PROGMEM = {
  0x80, 0xB8, 0x70, 0x00, 0x77, 0x77, 0x07, 0xA0, 0x77, 0x75, 0x07, 0xC0, 0x77, 0x73, 0x07, 0xA0,
  0x05, 0xA0, 0x77, 0x71, 0x07, 0xA0, 0x52, 0x05, 0xA0, 0x77, 0x60, 0x7A, 0x05, 0x40, 0x5A, 0x07,
  0x75, 0x81, 0x7F, 0x56, 0x81, 0x5F, 0x77, 0x60, 0x27, 0x10, 0x28, 0x0B, 0x83, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_keyboard_arrow_up() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_keyboard_arrow_up_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_gamepad 24x24, 4-bit Alpha,  RLE, 85 bytes 
static const uint8_t ic_24_hardware_gamepad_data[] PROGMEM = {
  0x80, 0xE5, 0x0E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x40, 0xDC, 0x0D, 0x77,
  0x40, 0x10, 0xDA, 0x0D, 0x01, 0x74, 0xD8, 0x90, 0xD1, 0x01, 0xDD, 0x10, 0x1D, 0xD4, 0xE8, 0x6D,
  0x10, 0x11, 0x01, 0xDE, 0x4F, 0x0D, 0x01, 0x20, 0x10, 0xDF, 0x4F, 0x0D, 0x01, 0x20, 0x10, 0xDF,
  0x4E, 0x86, 0xD1, 0x01, 0x10, 0x1D, 0xE4, 0xD8, 0x90, 0xD1, 0x01, 0xDD, 0x10, 0x1D, 0xD7, 0x40,
  0x10, 0xDA, 0x0D, 0x01, 0x77, 0x40, 0xDC, 0x0D, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E, 0x77, 0x4E,
  0x77, 0x4E, 0x80, 0xE5, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_gamepad() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_gamepad_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_developer_board 24x24, 4-bit Alpha,  RLE, 73 bytes 
static const uint8_t ic_24_hardware_developer_board_data[] PROGMEM = {
  0x80, 0x98, 0x60, 0x04, 0x0E, 0xFF, 0x0E, 0x04, 0x60, 0xEF, 0xFA, 0x0E, 0x6A, 0x77, 0xA6, 0xA7,
  0x7A, 0x6A, 0x2D, 0x1C, 0x2C, 0x4A, 0x2D, 0x1C, 0x2C, 0x4A, 0x2D, 0x1C, 0x2A, 0x6A, 0x2D, 0x7A,
  0x6A, 0x2D, 0x1C, 0x2C, 0x4A, 0x71, 0xC2, 0xC4, 0xA2, 0xD1, 0xC2, 0xA6, 0xA2, 0xD1, 0xC2, 0xA6,
  0xA2, 0xD1, 0xC2, 0xC4, 0xA2, 0xD1, 0xC2, 0xC4, 0xA7, 0x7A, 0x6A, 0x77, 0xA6, 0x0E, 0xFF, 0xA0,
  0xE6, 0x04, 0x0E, 0xFF, 0x0E, 0x04, 0x80, 0x99, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_developer_board() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_developer_board_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_toys 24x24, 4-bit Alpha,  RLE, 101 bytes 
static const uint8_t ic_24_hardware_toys_data[] PROGMEM = {
  0x77, 0x77, 0x50, 0x50, 0xC9, 0x77, 0x60, 0xAB, 0x77, 0x50, 0x9C, 0x77, 0x40, 0x1D, 0x77, 0x40,
  0x6D, 0x77, 0x40, 0x7D, 0x38, 0x31, 0x67, 0x61, 0x73, 0x06, 0xD2, 0x09, 0xD0, 0x87, 0x20, 0x1D,
  0x10, 0xAF, 0x0A, 0x72, 0x08, 0xC0, 0x5F, 0xA0, 0x57, 0x20, 0xAB, 0x0C, 0xFA, 0x0C, 0x73, 0x05,
  0x0C, 0xFD, 0x2F, 0xD0, 0xC0, 0x57, 0x30, 0xCF, 0xA0, 0xCB, 0x0A, 0x72, 0x05, 0xFA, 0x05, 0xC0,
  0x87, 0x20, 0xAF, 0x0A, 0x1D, 0x01, 0x72, 0x08, 0xD0, 0x82, 0xD0, 0x67, 0x38, 0x31, 0x67, 0x61,
  0x3D, 0x07, 0x77, 0x4D, 0x06, 0x77, 0x4D, 0x01, 0x77, 0x4C, 0x08, 0x77, 0x5B, 0x0A, 0x77, 0x69,
  0x0C, 0x05, 0x77, 0x77, 0x50,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_toys() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_toys_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_keyboard_arrow_right 24x24, 4-bit Alpha,  RLE, 53 bytes 
static const uint8_t ic_24_hardware_keyboard_arrow_right_data[] PROGMEM = {
  0x80, 0xAA, 0x50, 0x00, 0xB7, 0x77, 0x82, 0x2E, 0xFB, 0x77, 0x78, 0x22, 0xEF, 0xB7, 0x77, 0x82,
  0x2E, 0xFB, 0x77, 0x78, 0x22, 0xEF, 0xB7, 0x77, 0x02, 0xA0, 0xA7, 0x76, 0x09, 0xA0, 0x47, 0x75,
  0x09, 0xA0, 0x47, 0x75, 0x09, 0xA0, 0x47, 0x75, 0x09, 0xA0, 0x47, 0x75, 0x02, 0xA0, 0x47, 0x77,
  0x00, 0x48, 0x0A, 0xB1, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_keyboard_arrow_right() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_keyboard_arrow_right_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_laptop_windows 24x24, 4-bit Alpha,  RLE, 61 bytes 
static const uint8_t ic_24_hardware_laptop_windows_data[] PROGMEM = {
  0x80, 0x98, 0x60, 0x04, 0x0E, 0xFF, 0xA0, 0xE0, 0x44, 0x0E, 0xFF, 0xC0, 0xE4, 0xA7, 0x72, 0xA4,
  0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7,
  0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0x0E, 0xFF, 0xC0, 0xD4, 0x04,
  0x0E, 0xFF, 0xA0, 0xE0, 0x46, 0xFF, 0xA4, 0x80, 0xD4, 0xF8, 0x09, 0xB4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_laptop_windows() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_laptop_windows_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_speaker 24x24, 4-bit Alpha,  RLE, 111 bytes 
static const uint8_t ic_24_hardware_speaker_data[] PROGMEM = {
  0x80, 0xE1, 0x00, 0x40, 0xEF, 0xB0, 0xE0, 0x47, 0x30, 0xEF, 0xD0, 0xE7, 0x3D, 0x82, 0xA1, 0x1A,
  0xD7, 0x3D, 0x01, 0x20, 0x1D, 0x73, 0xD0, 0x12, 0x01, 0xD7, 0x3D, 0x82, 0xA1, 0x1A, 0xD7, 0x3F,
  0xF7, 0x3F, 0xF7, 0x3C, 0x0A, 0x03, 0x20, 0x30, 0xAC, 0x73, 0xB0, 0x66, 0x07, 0xB7, 0x3A, 0x0A,
  0x28, 0x29, 0xEE, 0x92, 0x0A, 0xA7, 0x3A, 0x81, 0x30, 0x9C, 0x81, 0x80, 0x3A, 0x73, 0xA2, 0x0E,
  0xC0, 0xE2, 0xA7, 0x3A, 0x20, 0xEC, 0x0E, 0x2A, 0x73, 0xA8, 0x13, 0x09, 0xC8, 0x18, 0x03, 0xA7,
  0x3A, 0x0A, 0x28, 0x28, 0xEE, 0x82, 0x0A, 0xA7, 0x3B, 0x07, 0x60, 0x7B, 0x73, 0xC0, 0xA0, 0x32,
  0x03, 0x0A, 0xC7, 0x30, 0xEF, 0xD0, 0xE7, 0x30, 0x40, 0xDF, 0xB0, 0xE0, 0x48, 0x0E, 0x10,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_speaker() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_speaker_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_keyboard_return 24x24, 4-bit Alpha,  RLE, 51 bytes 
static const uint8_t ic_24_hardware_keyboard_return_data[] PROGMEM = {
  0x80, 0xAA, 0x30, 0x00, 0x77, 0x77, 0x07, 0xA0, 0x27, 0x2A, 0x71, 0x07, 0xA0, 0x57, 0x3A, 0x70,
  0x7A, 0x05, 0x74, 0xA6, 0x07, 0xA0, 0x57, 0x5A, 0x50, 0x7F, 0xFC, 0x50, 0x7F, 0xFC, 0x60, 0x7A,
  0x05, 0x77, 0x70, 0x7A, 0x05, 0x77, 0x70, 0x7A, 0x05, 0x77, 0x70, 0x7A, 0x02, 0x77, 0x70, 0x07,
  0x80, 0xAB, 0x30,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_keyboard_return() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_keyboard_return_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_videogame_asset 24x24, 4-bit Alpha,  RLE, 64 bytes 
static const uint8_t ic_24_hardware_videogame_asset_data[] PROGMEM = {
  0x80, 0xA9, 0x50, 0x04, 0x0E, 0xFF, 0xC0, 0xE0, 0x42, 0x0E, 0xFF, 0xE0, 0xE2, 0xD2, 0xFF, 0x92,
  0xD2, 0xFB, 0x81, 0x81, 0x8A, 0x2D, 0x2F, 0xB8, 0x11, 0x01, 0xA2, 0xA7, 0x1F, 0x81, 0x81, 0x8A,
  0x2A, 0x71, 0xB8, 0x18, 0x18, 0xE2, 0xD2, 0xE8, 0x11, 0x01, 0xE2, 0xD2, 0xE8, 0x18, 0x18, 0xE2,
  0xD2, 0xFF, 0x92, 0x0E, 0xFF, 0xE0, 0xE2, 0x04, 0x0E, 0xFF, 0xC0, 0xE0, 0x48, 0x0A, 0x95, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_videogame_asset() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_videogame_asset_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_phone_iphone 24x24, 4-bit Alpha,  RLE, 80 bytes 
static const uint8_t ic_24_hardware_phone_iphone_data[] PROGMEM = {
  0x77, 0x77, 0x10, 0x20, 0xBF, 0xA0, 0xB0, 0x27, 0x40, 0xBF, 0xC0, 0xB7, 0x4F, 0xE7, 0x4A, 0x72,
  0xA7, 0x4A, 0x72, 0xA7, 0x4A, 0x72, 0xA7, 0x4A, 0x72, 0xA7, 0x4A, 0x72, 0xA7, 0x4A, 0x72, 0xA7,
  0x4A, 0x72, 0xA7, 0x4A, 0x72, 0xA7, 0x4A, 0x72, 0xA7, 0x4A, 0x72, 0xA7, 0x4A, 0x72, 0xA7, 0x4A,
  0x72, 0xA7, 0x4A, 0x72, 0xA7, 0x4A, 0x72, 0xA7, 0x4F, 0xE7, 0x4D, 0x81, 0x60, 0x7D, 0x74, 0xD3,
  0xD7, 0x40, 0xBC, 0x81, 0x70, 0x7C, 0x0B, 0x74, 0x02, 0x0B, 0xFA, 0x0B, 0x02, 0x77, 0x77, 0x20,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_phone_iphone() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_phone_iphone_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_cast 24x24, 4-bit Alpha,  RLE, 109 bytes 
static const uint8_t ic_24_hardware_cast_data[] PROGMEM = {
  0x80, 0x98, 0x50, 0x04, 0x0E, 0xFF, 0xC0, 0xE0, 0x42, 0x0E, 0xFF, 0xE0, 0xE2, 0xA7, 0x74, 0xA2,
  0xA7, 0x74, 0xA2, 0xA7, 0x74, 0xA7, 0x77, 0x1A, 0x77, 0x71, 0xA2, 0x98, 0x2D, 0xA6, 0x17, 0x71,
  0xA2, 0xC0, 0xE0, 0x77, 0x7A, 0x38, 0x12, 0x5B, 0xA0, 0xC0, 0x27, 0x5A, 0x68, 0x33, 0xDF, 0xD2,
  0x74, 0xA2, 0x98, 0x1C, 0x81, 0x28, 0x1B, 0xFC, 0x74, 0xA2, 0xB0, 0xE0, 0x52, 0x81, 0xDF, 0x77,
  0x3A, 0x30, 0x30, 0xAA, 0x84, 0x50, 0x3F, 0xE1, 0x72, 0xA5, 0x86, 0x7F, 0xE1, 0x0B, 0xF6, 0x72,
  0xA2, 0x0E, 0x09, 0x28, 0x5A, 0xF8, 0x05, 0xFA, 0x72, 0xA2, 0xA8, 0x78, 0x03, 0xFC, 0x02, 0xFD,
  0x2F, 0x90, 0xE2, 0xA0, 0xE2, 0xA2, 0xA2, 0xF0, 0xE0, 0x48, 0x09, 0x85, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_cast() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_cast_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_phone_android 24x24, 4-bit Alpha,  RLE, 107 bytes 
static const uint8_t ic_24_hardware_phone_android_data[] PROGMEM = {
  0x77, 0x77, 0x20, 0x90, 0xEF, 0x90, 0xE0, 0x97, 0x40, 0x9F, 0xD0, 0x87, 0x30, 0xEF, 0xD0, 0xE7,
  0x39, 0x0B, 0x73, 0x0B, 0x97, 0x39, 0x0B, 0x73, 0x0B, 0x97, 0x39, 0x0B, 0x73, 0x0B, 0x97, 0x39,
  0x0B, 0x73, 0x0B, 0x97, 0x39, 0x0B, 0x73, 0x0B, 0x97, 0x39, 0x0B, 0x73, 0x0B, 0x97, 0x39, 0x0B,
  0x73, 0x0B, 0x97, 0x39, 0x0B, 0x73, 0x0B, 0x97, 0x39, 0x0B, 0x73, 0x0B, 0x97, 0x39, 0x0B, 0x73,
  0x0B, 0x97, 0x39, 0x0B, 0x73, 0x0B, 0x97, 0x39, 0x0B, 0x73, 0x0B, 0x97, 0x39, 0x0B, 0x73, 0x0B,
  0x97, 0x39, 0x0B, 0x73, 0x0B, 0x97, 0x3F, 0xF7, 0x3F, 0xF7, 0x30, 0xEC, 0x4C, 0x0E, 0x73, 0x09,
  0xFD, 0x08, 0x74, 0x08, 0x0E, 0xF9, 0x0E, 0x08, 0x77, 0x77, 0x20,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_phone_android() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_phone_android_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_tablet 24x24, 4-bit Alpha,  RLE, 56 bytes 
static const uint8_t ic_24_hardware_tablet_data[] PROGMEM = {
  0x80, 0x9B, 0x50, 0x04, 0x0E, 0xFF, 0xC0, 0xE0, 0x42, 0x0E, 0xFF, 0xE0, 0xE2, 0xC7, 0x7C, 0x2C,
  0x77, 0xC2, 0xC7, 0x7C, 0x2C, 0x77, 0xC2, 0xC7, 0x7C, 0x2C, 0x77, 0xC2, 0xC7, 0x7C, 0x2C, 0x77,
  0xC2, 0xC7, 0x7C, 0x2C, 0x77, 0xC2, 0xC7, 0x7C, 0x2C, 0x77, 0xC2, 0x0E, 0xFF, 0xE0, 0xD2, 0x04,
  0x0E, 0xFF, 0xC0, 0xE0, 0x48, 0x09, 0xB5, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_tablet() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_tablet_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_keyboard_arrow_down 24x24, 4-bit Alpha,  RLE, 46 bytes 
static const uint8_t ic_24_hardware_keyboard_arrow_down_data[] PROGMEM = {
  0x80, 0xB8, 0x20, 0x81, 0x4D, 0x26, 0x81, 0x2D, 0x47, 0x58, 0x2A, 0xFE, 0x24, 0x82, 0x2E, 0xFA,
  0x76, 0x82, 0xBF, 0xE2, 0x28, 0x22, 0xEF, 0xB7, 0x71, 0x86, 0xBF, 0xE2, 0x2E, 0xFB, 0x77, 0x38,
  0x4B, 0xFE, 0xEF, 0xB7, 0x75, 0x0B, 0xA0, 0xB7, 0x77, 0x00, 0xB8, 0x0B, 0xB7, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_keyboard_arrow_down() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_keyboard_arrow_down_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_devices_other 24x24, 4-bit Alpha,  RLE, 83 bytes 
static const uint8_t ic_24_hardware_devices_other_data[] PROGMEM = {
  0x80, 0x9B, 0x50, 0x04, 0x0E, 0xFF, 0xC4, 0x0E, 0xFF, 0xD4, 0xA7, 0x77, 0x1A, 0x77, 0x71, 0xA7,
  0x50, 0xBE, 0x0B, 0x2A, 0x75, 0xF9, 0x2A, 0x75, 0xA4, 0xA2, 0xA7, 0x5A, 0x4A, 0x2A, 0x6C, 0x2A,
  0x4A, 0x2A, 0x6C, 0x2A, 0x4A, 0x2A, 0x58, 0x49, 0xF9, 0x9F, 0x81, 0xA4, 0xA2, 0xA5, 0x0E, 0x09,
  0x20, 0x90, 0xE1, 0xA4, 0xA2, 0xA5, 0x0E, 0x09, 0x20, 0x90, 0xE1, 0xA4, 0xA2, 0xA5, 0x84, 0x8F,
  0x99, 0xF8, 0x1A, 0x4A, 0x20, 0xED, 0x2C, 0x2F, 0x92, 0x04, 0x0E, 0xC2, 0xC2, 0x0B, 0xE0, 0xB8,
  0x09, 0xB5, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_devices_other() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_devices_other_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_keyboard_backspace 24x24, 4-bit Alpha,  RLE, 49 bytes 
static const uint8_t ic_24_hardware_keyboard_backspace_data[] PROGMEM = {
  0x80, 0xAA, 0x40, 0x00, 0x77, 0x77, 0x07, 0xA0, 0x27, 0x75, 0x07, 0xA0, 0x57, 0x75, 0x07, 0xA0,
  0x57, 0x75, 0x07, 0xA0, 0x57, 0x75, 0x07, 0xFF, 0xB6, 0x07, 0xFF, 0xB7, 0x07, 0xA0, 0x57, 0x77,
  0x07, 0xA0, 0x57, 0x77, 0x07, 0xA0, 0x57, 0x77, 0x07, 0xA0, 0x27, 0x77, 0x00, 0x78, 0x0A, 0xB2,
  0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_keyboard_backspace() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_keyboard_backspace_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_computer 24x24, 4-bit Alpha,  RLE, 59 bytes 
static const uint8_t ic_24_hardware_computer_data[] PROGMEM = {
  0x80, 0x9B, 0x60, 0x04, 0x0E, 0xFF, 0xA0, 0xE0, 0x44, 0x0E, 0xFF, 0xC0, 0xE4, 0xA7, 0x72, 0xA4,
  0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7,
  0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0x0E, 0xFF, 0xC0, 0xD4, 0x04,
  0x0E, 0xFF, 0xA0, 0xE0, 0x42, 0x80, 0xD4, 0xF8, 0x09, 0xB4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_computer() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_computer_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_phonelink 24x24, 4-bit Alpha,  RLE, 59 bytes 
static const uint8_t ic_24_hardware_phonelink_data[] PROGMEM = {
  0x80, 0x9B, 0x60, 0x04, 0x0E, 0xFF, 0xC4, 0x0E, 0xFF, 0xD4, 0xA7, 0x77, 0x1A, 0x77, 0x71, 0xA7,
  0x50, 0xCE, 0x0C, 0x2A, 0x75, 0xF9, 0x2A, 0x75, 0xA4, 0xA2, 0xA7, 0x5A, 0x4A, 0x2A, 0x75, 0xA4,
  0xA2, 0xA7, 0x5A, 0x4A, 0x2A, 0x75, 0xA4, 0xA2, 0xA7, 0x5A, 0x4A, 0x2A, 0x75, 0xA4, 0xFF, 0xA2,
  0xFF, 0xF9, 0x2F, 0xFF, 0x92, 0x0C, 0xE0, 0xB8, 0x09, 0xB4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_phonelink() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_phonelink_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_memory 24x24, 4-bit Alpha,  RLE, 70 bytes 
static const uint8_t ic_24_hardware_memory_data[] PROGMEM = {
  0x80, 0x99, 0x50, 0xA2, 0xA7, 0x74, 0xA2, 0xA7, 0x70, 0x40, 0xEF, 0xB0, 0xE0, 0x47, 0x30, 0xEF,
  0xD0, 0xE7, 0x3A, 0x73, 0xA7, 0x3A, 0x73, 0xA7, 0x1C, 0x2E, 0x2C, 0x6C, 0x2E, 0x2C, 0x71, 0xA2,
  0xA2, 0xA2, 0xA7, 0x3A, 0x2A, 0x2A, 0x2A, 0x71, 0xC2, 0xE2, 0xC6, 0xC2, 0xE2, 0xC7, 0x1A, 0x73,
  0xA7, 0x3A, 0x73, 0xA7, 0x30, 0xEF, 0xD0, 0xE7, 0x30, 0x40, 0xEF, 0xB0, 0xE0, 0x47, 0x7A, 0x2A,
  0x77, 0x4A, 0x2A, 0x80, 0x99, 0x50,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_memory() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_memory_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_hardware_tv 24x24, 4-bit Alpha,  RLE, 66 bytes 
static const uint8_t ic_24_hardware_tv_data[] PROGMEM = {
  0x80, 0x98, 0x50, 0x04, 0x0E, 0xFF, 0xC0, 0xE0, 0x42, 0x0E, 0xFF, 0xE0, 0xE2, 0xA7, 0x74, 0xA2,
  0xA7, 0x74, 0xA2, 0xA7, 0x74, 0xA2, 0xA7, 0x74, 0xA2, 0xA7, 0x74, 0xA2, 0xA7, 0x74, 0xA2, 0xA7,
  0x74, 0xA2, 0xA7, 0x74, 0xA2, 0xA7, 0x74, 0xA2, 0xA7, 0x74, 0xA2, 0xA7, 0x74, 0xA2, 0xA7, 0x74,
  0xA2, 0x0E, 0xFF, 0xE0, 0xD2, 0x04, 0x0E, 0xFF, 0xC0, 0xE0, 0x47, 0x2F, 0x97, 0x72, 0xF9, 0x80,
  0x99, 0x40,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_hardware_tv() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_hardware_tv_data, Alpha4(color::Black));
  return value;
}

