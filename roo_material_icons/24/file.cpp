#include "file.h"

using namespace roo_display;

// Image file ic_24_file_attachment 24x24, 4-bit Alpha,  RLE, 80 bytes 
static const uint8_t ic_24_file_attachment_data[] PROGMEM = {
  0x80, 0xAD, 0x00, 0x81, 0x29, 0xEF, 0xC8, 0x1E, 0xA2, 0x60, 0x4F, 0xFA, 0x0E, 0x02, 0x40, 0x2A,
  0x0A, 0x02, 0x74, 0x82, 0x1A, 0xFA, 0x48, 0x19, 0xFA, 0x20, 0x20, 0xCF, 0x92, 0x81, 0x1F, 0xE4,
  0x81, 0xEF, 0x22, 0x0C, 0xFA, 0x28, 0x11, 0xFE, 0x4A, 0x3A, 0x01, 0x71, 0x82, 0x1A, 0xFA, 0x48,
  0x1E, 0xF2, 0x20, 0xCF, 0xD0, 0xE0, 0x24, 0x81, 0x9F, 0xA2, 0x02, 0x0B, 0xFA, 0x81, 0xEA, 0x25,
  0x83, 0x2E, 0xFA, 0x27, 0x76, 0x04, 0x0E, 0xFD, 0x74, 0x81, 0x29, 0xDF, 0xB8, 0x0A, 0xA3, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_attachment() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_attachment_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_cloud_done 24x24, 4-bit Alpha,  RLE, 99 bytes 
static const uint8_t ic_24_file_cloud_done_data[] PROGMEM = {
  0x80, 0x9C, 0x40, 0x81, 0x28, 0xDA, 0x81, 0xD8, 0x27, 0x71, 0x07, 0xF9, 0x07, 0x76, 0x09, 0xFB,
  0x08, 0x74, 0x05, 0xFD, 0x04, 0x71, 0x07, 0x0C, 0xFE, 0x0D, 0x60, 0x10, 0xCF, 0xC0, 0xA0, 0x5B,
  0x03, 0x50, 0xDF, 0xC0, 0xA2, 0x0A, 0xA8, 0x1E, 0xB4, 0x20, 0x7F, 0xC0, 0xA2, 0x07, 0xE8, 0x18,
  0x0C, 0xE0, 0x70, 0xAA, 0x09, 0x20, 0x7F, 0x90, 0x4E, 0x0B, 0x20, 0xA0, 0x92, 0x07, 0xFA, 0x0B,
  0xF0, 0x74, 0x07, 0xFB, 0x0E, 0x0C, 0xF0, 0x72, 0x07, 0xFC, 0x0E, 0x06, 0xF9, 0x00, 0x7F, 0xD8,
  0x1B, 0x0C, 0xFF, 0xF8, 0x24, 0x01, 0xCF, 0xFD, 0x08, 0x48, 0x16, 0xCE, 0xFE, 0x81, 0xEB, 0x48,
  0x09, 0xB6, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_cloud_done() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_cloud_done_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_folder_shared 24x24, 4-bit Alpha,  RLE, 72 bytes 
static const uint8_t ic_24_file_folder_shared_data[] PROGMEM = {
  0x80, 0x9B, 0x60, 0x04, 0x0E, 0xE0, 0x77, 0x71, 0x0E, 0xF9, 0x07, 0x77, 0xFF, 0xC0, 0xE0, 0x44,
  0xFF, 0xD0, 0xE4, 0xFF, 0xE4, 0xFC, 0x82, 0xA1, 0x1A, 0xD4, 0xFC, 0x01, 0x20, 0x1D, 0x4F, 0xC0,
  0x12, 0x01, 0xD4, 0xFC, 0x82, 0xA1, 0x1A, 0xD4, 0xFF, 0xE4, 0xFA, 0x81, 0xE7, 0x22, 0x81, 0x37,
  0xEB, 0x4F, 0xA0, 0x26, 0x02, 0xB4, 0xFA, 0x71, 0xB4, 0xFF, 0xE4, 0x0E, 0xFF, 0xC0, 0xE4, 0x04,
  0x0E, 0xFF, 0xA0, 0xE0, 0x48, 0x09, 0xB6, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_folder_shared() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_folder_shared_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_cloud_upload 24x24, 4-bit Alpha,  RLE, 89 bytes 
static const uint8_t ic_24_file_cloud_upload_data[] PROGMEM = {
  0x80, 0x9C, 0x40, 0x81, 0x28, 0xDA, 0x81, 0xD8, 0x27, 0x71, 0x07, 0xF9, 0x07, 0x76, 0x09, 0xFB,
  0x08, 0x74, 0x05, 0xFD, 0x04, 0x71, 0x07, 0x0C, 0xE0, 0x07, 0xD0, 0xD6, 0x01, 0x0C, 0xF0, 0x72,
  0x07, 0xD0, 0x35, 0x0D, 0xF0, 0x74, 0x07, 0xC8, 0x1E, 0xB4, 0x20, 0x7F, 0x07, 0x60, 0x7E, 0x81,
  0x80, 0xCE, 0x07, 0x71, 0x07, 0xE0, 0x4F, 0xB4, 0xFA, 0x0B, 0xFB, 0x4F, 0xA0, 0xE0, 0xCF, 0xA4,
  0xFA, 0x0E, 0x06, 0xFA, 0x4F, 0xA8, 0x1B, 0x0C, 0xFF, 0xF8, 0x24, 0x01, 0xCF, 0xFD, 0x08, 0x48,
  0x16, 0xCE, 0xFE, 0x81, 0xEB, 0x48, 0x09, 0xB6, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_cloud_upload() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_cloud_upload_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_file_download 24x24, 4-bit Alpha,  RLE, 49 bytes 
static const uint8_t ic_24_file_file_download_data[] PROGMEM = {
  0x80, 0x99, 0x50, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x70, 0x7F,
  0xD0, 0x77, 0x40, 0x7F, 0xB0, 0x77, 0x60, 0x7F, 0x90, 0x77, 0x71, 0x07, 0xE0, 0x77, 0x73, 0x07,
  0xC0, 0x77, 0x75, 0x07, 0xA0, 0x77, 0x77, 0x00, 0x78, 0x0F, 0x40, 0xFF, 0x73, 0xFF, 0x80, 0x9C,
  0x10,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_file_download() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_file_download_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_cloud_off 24x24, 4-bit Alpha,  RLE, 138 bytes 
static const uint8_t ic_24_file_cloud_off_data[] PROGMEM = {
  0x80, 0x9B, 0x70, 0x04, 0x0A, 0x38, 0x12, 0x9D, 0xA8, 0x1D, 0x82, 0x74, 0x81, 0xAF, 0xB2, 0x0A,
  0xF0, 0x77, 0x48, 0x1B, 0xFB, 0x20, 0x70, 0x32, 0x03, 0x09, 0xA0, 0x87, 0x48, 0x1B, 0xFB, 0x70,
  0x4A, 0x04, 0x71, 0x07, 0x0C, 0xB0, 0xB7, 0x81, 0x6F, 0xD6, 0x01, 0x0C, 0xE0, 0xB7, 0x81, 0xDF,
  0x35, 0x82, 0xCF, 0xC4, 0x38, 0x1B, 0xFB, 0x68, 0x39, 0xFE, 0xB4, 0x28, 0x16, 0xFC, 0x68, 0x1B,
  0xFB, 0x50, 0x7C, 0x83, 0x80, 0xCF, 0x47, 0x81, 0xBF, 0xB7, 0x06, 0xA0, 0x4A, 0x72, 0x81, 0xBF,
  0xB7, 0x81, 0x6F, 0xBA, 0x73, 0x81, 0xBF, 0xB7, 0x98, 0x2E, 0xCF, 0x47, 0x38, 0x1B, 0xFB, 0x58,
  0x41, 0xFE, 0x6F, 0xD7, 0x48, 0x1B, 0xFB, 0x48, 0x66, 0xFB, 0x0C, 0xFD, 0x47, 0x38, 0x1B, 0xFB,
  0x20, 0x3A, 0x82, 0x40, 0x1C, 0xFF, 0x90, 0xB2, 0x0A, 0x07, 0x48, 0x16, 0xCE, 0xFE, 0x0B, 0x77,
  0x71, 0x81, 0xBF, 0xA7, 0x77, 0x10, 0xA0, 0x48, 0x0D, 0x70,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_cloud_off() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_cloud_off_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_cloud_circle 24x24, 4-bit Alpha,  RLE, 110 bytes 
static const uint8_t ic_24_file_cloud_circle_data[] PROGMEM = {
  0x80, 0xE4, 0x08, 0x15, 0xAD, 0xA8, 0x1D, 0xA5, 0x77, 0x05, 0x0D, 0xF9, 0x0D, 0x05, 0x74, 0x09,
  0xFD, 0x09, 0x72, 0x09, 0xFF, 0x09, 0x70, 0x5F, 0xFA, 0x05, 0x60, 0xDD, 0x0C, 0x04, 0x20, 0x40,
  0xDD, 0x0D, 0x50, 0x5D, 0x0C, 0x60, 0xDD, 0x05, 0x40, 0xAD, 0x04, 0x60, 0x4D, 0x0A, 0x40, 0xDB,
  0x06, 0x72, 0xD0, 0xD4, 0xB0, 0x67, 0x40, 0x30, 0xDB, 0x4B, 0x76, 0x03, 0xB4, 0x0D, 0xA7, 0x7A,
  0x0D, 0x40, 0xAA, 0x06, 0x75, 0x03, 0xA0, 0xA4, 0x05, 0xB0, 0x67, 0x30, 0x30, 0xDA, 0x05, 0x50,
  0xDF, 0xFA, 0x0D, 0x60, 0x5F, 0xFA, 0x05, 0x70, 0x9F, 0xF0, 0x87, 0x20, 0x9F, 0xD0, 0x87, 0x40,
  0x50, 0xDF, 0x90, 0xD0, 0x57, 0x78, 0x15, 0xAD, 0xA8, 0x1D, 0xA5, 0x80, 0xE4, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_cloud_circle() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_cloud_circle_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_file_upload 24x24, 4-bit Alpha,  RLE, 49 bytes 
static const uint8_t ic_24_file_file_upload_data[] PROGMEM = {
  0x80, 0x99, 0x70, 0x00, 0x77, 0x77, 0x07, 0xA0, 0x77, 0x75, 0x07, 0xC0, 0x77, 0x73, 0x07, 0xE0,
  0x77, 0x71, 0x07, 0xF9, 0x07, 0x76, 0x07, 0xFB, 0x07, 0x74, 0x07, 0xFD, 0x07, 0x77, 0xE7, 0x74,
  0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE7, 0x74, 0xE8, 0x0F, 0x20, 0xFF, 0x73, 0xFF, 0x80, 0x9C,
  0x10,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_file_upload() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_file_upload_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_folder 24x24, 4-bit Alpha,  RLE, 52 bytes 
static const uint8_t ic_24_file_folder_data[] PROGMEM = {
  0x80, 0x9B, 0x60, 0x04, 0x0E, 0xE0, 0x77, 0x71, 0x0E, 0xF9, 0x07, 0x77, 0xFF, 0xC0, 0xE0, 0x44,
  0xFF, 0xD0, 0xE4, 0xFF, 0xE4, 0xFF, 0xE4, 0xFF, 0xE4, 0xFF, 0xE4, 0xFF, 0xE4, 0xFF, 0xE4, 0xFF,
  0xE4, 0xFF, 0xE4, 0xFF, 0xE4, 0xFF, 0xE4, 0x0E, 0xFF, 0xC0, 0xE4, 0x04, 0x0E, 0xFF, 0xA0, 0xE0,
  0x48, 0x09, 0xB6, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_folder() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_folder_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_cloud_download 24x24, 4-bit Alpha,  RLE, 90 bytes 
static const uint8_t ic_24_file_cloud_download_data[] PROGMEM = {
  0x80, 0x9C, 0x40, 0x81, 0x28, 0xDA, 0x81, 0xD8, 0x27, 0x71, 0x07, 0xF9, 0x07, 0x76, 0x09, 0xFB,
  0x08, 0x74, 0x05, 0xFD, 0x04, 0x71, 0x07, 0x0C, 0xFE, 0x0D, 0x60, 0x10, 0xCF, 0x4D, 0x03, 0x50,
  0xDF, 0x94, 0xD8, 0x1E, 0xB4, 0x20, 0x7F, 0xA4, 0xF9, 0x81, 0x80, 0xCF, 0xA4, 0xFA, 0x04, 0xF0,
  0x77, 0x10, 0x7E, 0x0B, 0xF9, 0x07, 0x60, 0x7F, 0x0E, 0x0C, 0xF9, 0x07, 0x40, 0x7F, 0x90, 0xE0,
  0x6F, 0xA0, 0x72, 0x07, 0xFA, 0x81, 0xB0, 0xCF, 0xA0, 0x07, 0xFB, 0x82, 0x40, 0x1C, 0xFF, 0xD0,
  0x84, 0x81, 0x6C, 0xEF, 0xE8, 0x1E, 0xB4, 0x80, 0x9B, 0x60,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_cloud_download() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_cloud_download_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_cloud 24x24, 4-bit Alpha,  RLE, 77 bytes 
static const uint8_t ic_24_file_cloud_data[] PROGMEM = {
  0x80, 0x9C, 0x40, 0x81, 0x28, 0xDA, 0x81, 0xD8, 0x27, 0x71, 0x07, 0xF9, 0x07, 0x76, 0x09, 0xFB,
  0x08, 0x74, 0x05, 0xFD, 0x04, 0x71, 0x07, 0x0C, 0xFE, 0x0D, 0x60, 0x10, 0xCF, 0xFA, 0x03, 0x50,
  0xDF, 0xFB, 0x81, 0xEB, 0x42, 0x07, 0xFF, 0xF8, 0x18, 0x0C, 0xFF, 0xF9, 0x04, 0xFF, 0xFA, 0x0B,
  0xFF, 0xFA, 0x0E, 0x0C, 0xFF, 0xF9, 0x0E, 0x06, 0xFF, 0xF9, 0x81, 0xB0, 0xCF, 0xFF, 0x82, 0x40,
  0x1C, 0xFF, 0xD0, 0x84, 0x81, 0x6C, 0xEF, 0xE8, 0x1E, 0xB4, 0x80, 0x9B, 0x60,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_cloud() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_cloud_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_folder_open 24x24, 4-bit Alpha,  RLE, 62 bytes 
static const uint8_t ic_24_file_folder_open_data[] PROGMEM = {
  0x80, 0x9B, 0x60, 0x04, 0x0E, 0xE0, 0x77, 0x71, 0x0E, 0xF9, 0x07, 0x77, 0xFF, 0xC0, 0xE0, 0x44,
  0xFF, 0xD0, 0xE4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7,
  0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72, 0xA4, 0xA7, 0x72,
  0xA4, 0x0E, 0xFF, 0xC0, 0xE4, 0x04, 0x0E, 0xFF, 0xA0, 0xE0, 0x48, 0x09, 0xB6, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_folder_open() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_folder_open_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_cloud_queue 24x24, 4-bit Alpha,  RLE, 105 bytes 
static const uint8_t ic_24_file_cloud_queue_data[] PROGMEM = {
  0x80, 0x9C, 0x40, 0x81, 0x28, 0xDA, 0x81, 0xD8, 0x27, 0x71, 0x07, 0xF9, 0x07, 0x76, 0x09, 0xA0,
  0x90, 0x32, 0x03, 0x09, 0xA0, 0x87, 0x40, 0x5A, 0x04, 0x60, 0x4A, 0x04, 0x71, 0x07, 0x0C, 0xA0,
  0x67, 0x18, 0x16, 0xFD, 0x60, 0x10, 0xCB, 0x0D, 0x73, 0x81, 0xDF, 0x35, 0x82, 0xDF, 0xC4, 0x75,
  0x83, 0x9F, 0xEB, 0x42, 0x81, 0x7F, 0xC7, 0x70, 0x7C, 0x83, 0x80, 0xCF, 0x47, 0x73, 0x06, 0xA0,
  0x4A, 0x77, 0x58, 0x16, 0xFB, 0xA7, 0x76, 0x98, 0x2E, 0xCF, 0x47, 0x74, 0x84, 0x1F, 0xE6, 0xFD,
  0x77, 0x48, 0x66, 0xFB, 0x0C, 0xFD, 0x47, 0x70, 0x10, 0x6A, 0x82, 0x40, 0x1C, 0xFF, 0xD0, 0x84,
  0x81, 0x6C, 0xEF, 0xE8, 0x1E, 0xB4, 0x80, 0x9B, 0x60,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_cloud_queue() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_cloud_queue_data, Alpha4(color::Black));
  return value;
}

// Image file ic_24_file_create_new_folder 24x24, 4-bit Alpha,  RLE, 57 bytes 
static const uint8_t ic_24_file_create_new_folder_data[] PROGMEM = {
  0x80, 0x9B, 0x60, 0x05, 0x0E, 0xE0, 0x77, 0x71, 0x0E, 0xF9, 0x07, 0x77, 0xFF, 0xC0, 0xE0, 0x44,
  0xFF, 0xD0, 0xE4, 0xFF, 0xE4, 0xFD, 0x2E, 0x4F, 0xD2, 0xE4, 0xFD, 0x2E, 0x4F, 0xA7, 0x1B, 0x4F,
  0xA7, 0x1B, 0x4F, 0xD2, 0xE4, 0xFD, 0x2E, 0x4F, 0xD2, 0xE4, 0xFF, 0xE4, 0x0E, 0xFF, 0xC0, 0xE4,
  0x04, 0x0E, 0xFF, 0xA0, 0xE0, 0x48, 0x09, 0xB6, 0x00,
};

const RleImage4bppxPolarized<Alpha4, PrgMemResource>& ic_24_file_create_new_folder() {
  static RleImage4bppxPolarized<Alpha4, PrgMemResource> value(
      24, 24, ic_24_file_create_new_folder_data, Alpha4(color::Black));
  return value;
}

