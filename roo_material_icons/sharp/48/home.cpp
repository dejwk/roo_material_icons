#include "home.h"

using namespace roo_display;

// Image file ic_sharp_48_home_auto_mode 48x48, 4-bit Alpha,  RLE, 384 bytes.
static const uint8_t ic_sharp_48_home_auto_mode_data[] PROGMEM = {
  0x77, 0x28, 0x24, 0x7A, 0xC4, 0x82, 0xCA, 0x74, 0x77, 0x77, 0x18, 0x13, 0x9E, 0xC4, 0xC8, 0x1E,
  0x93, 0x77, 0x73, 0x03, 0x0B, 0xF4, 0xF0, 0xB0, 0x37, 0x76, 0x01, 0x0A, 0xFA, 0x4F, 0xA0, 0xA0,
  0x17, 0x73, 0x04, 0x0E, 0xE8, 0x2E, 0x96, 0x34, 0x82, 0x36, 0x9E, 0xE0, 0xE0, 0x47, 0x72, 0x0A,
  0xD0, 0xA0, 0x37, 0x50, 0x30, 0xAD, 0x0A, 0x77, 0x30, 0xAA, 0x0B, 0x03, 0x77, 0x20, 0x30, 0xBA,
  0x0A, 0x77, 0x50, 0x90, 0x77, 0x76, 0x07, 0x09, 0x77, 0x04, 0x0A, 0x77, 0x77, 0x40, 0xA0, 0x47,
  0x82, 0x1E, 0xFA, 0x77, 0x77, 0x28, 0x2A, 0xFE, 0x16, 0x0A, 0xB0, 0x97, 0x77, 0x70, 0x9B, 0x0A,
  0x50, 0x3C, 0x07, 0x77, 0x77, 0x07, 0xC0, 0x34, 0x0B, 0xB0, 0xB7, 0x70, 0x03, 0x77, 0x0B, 0xB0,
  0xB3, 0x03, 0xC0, 0x37, 0x70, 0x0A, 0x77, 0x03, 0xC0, 0x32, 0x09, 0xB0, 0xA7, 0x70, 0x2A, 0x02,
  0x77, 0x0A, 0xB0, 0x92, 0x0E, 0xB0, 0x37, 0x70, 0x9A, 0x09, 0x77, 0x03, 0xB8, 0x1E, 0x04, 0xB0,
  0xD7, 0x70, 0x10, 0xEA, 0x0E, 0x01, 0x77, 0x0D, 0xB0, 0x40, 0x7B, 0x09, 0x77, 0x07, 0xC0, 0x77,
  0x70, 0x9B, 0x07, 0x09, 0xB0, 0x67, 0x70, 0xEC, 0x0E, 0x77, 0x06, 0xB0, 0x90, 0xCB, 0x03, 0x74,
  0x81, 0x17, 0xEE, 0x81, 0xE7, 0x17, 0x40, 0x3B, 0x0C, 0x77, 0x81, 0x29, 0xEF, 0xB8, 0x1E, 0x92,
  0x77, 0x75, 0x03, 0x0A, 0xFF, 0xA0, 0xA0, 0x37, 0x77, 0x30, 0x30, 0xAF, 0xFA, 0x0A, 0x03, 0x77,
  0x75, 0x81, 0x29, 0xEF, 0xB8, 0x1E, 0x92, 0x77, 0x77, 0x28, 0x11, 0x7E, 0xE8, 0x1E, 0x71, 0x77,
  0x77, 0x70, 0xEC, 0x0E, 0x80, 0xC2, 0x00, 0x7C, 0x07, 0x80, 0xC2, 0x00, 0x10, 0xEA, 0x0E, 0x01,
  0x77, 0x5F, 0xD7, 0x10, 0x9A, 0x09, 0x77, 0x83, 0x4D, 0xA6, 0x21, 0xFD, 0x71, 0x02, 0xA0, 0x27,
  0x70, 0xBB, 0x09, 0x1F, 0xD7, 0x20, 0x0A, 0x77, 0x02, 0xC0, 0x31, 0xFD, 0x72, 0x00, 0x37, 0x70,
  0xCB, 0x0C, 0x2F, 0x07, 0x77, 0x77, 0x06, 0xC0, 0x42, 0xF9, 0x03, 0x77, 0x75, 0x04, 0xC0, 0xA3,
  0xC0, 0xEB, 0x0E, 0x03, 0x77, 0x73, 0x02, 0x0E, 0xB0, 0xE0, 0x13, 0xC0, 0x4C, 0x0E, 0x03, 0x77,
  0x71, 0x03, 0x0E, 0xC0, 0x44, 0xC1, 0x07, 0xD0, 0x67, 0x76, 0x06, 0xD0, 0x65, 0xC2, 0x08, 0xD0,
  0xB0, 0x27, 0x72, 0x02, 0x0C, 0xD0, 0x86, 0xC3, 0x07, 0xE0, 0xA0, 0x37, 0x50, 0x40, 0xAE, 0x07,
  0x7C, 0x40, 0x40, 0xEE, 0x83, 0xD9, 0x52, 0x12, 0x83, 0x13, 0x59, 0xDE, 0x0E, 0x05, 0x77, 0x30,
  0x10, 0xAF, 0xFF, 0x90, 0xA0, 0x17, 0x76, 0x04, 0x0C, 0xFF, 0xC0, 0xC0, 0x47, 0x77, 0x38, 0x14,
  0xAE, 0xFD, 0x81, 0xEA, 0x37, 0x77, 0x71, 0x83, 0x47, 0xAD, 0xDA, 0x83, 0xDC, 0xA7, 0x37, 0x72,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_auto_mode() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(2, 2, 45, 45), Box(0, 0, 47, 47),
      ic_sharp_48_home_auto_mode_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_blinds_closed 48x48, 4-bit Alpha,  RLE, 152 bytes.
static const uint8_t ic_sharp_48_home_blinds_closed_data[] PROGMEM = {
  0x4F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1C, 0x77,
  0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7, 0x1C, 0x77, 0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7,
  0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1C, 0x77,
  0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7, 0x1C, 0x77, 0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7,
  0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1C, 0x77,
  0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7, 0x1C, 0x77, 0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7,
  0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1C, 0x77,
  0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7, 0x1C, 0x77, 0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC4,
  0x80, 0xAB, 0x4F, 0x77, 0x71, 0x06, 0xE0, 0x67, 0x77, 0x74, 0x02, 0xE0, 0x27, 0x77, 0x75, 0x05,
  0xC0, 0x57, 0x77, 0x77, 0x82, 0x26, 0x62, 0x75,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_blinds_closed() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(4, 6, 43, 45), Box(0, 0, 47, 47),
      ic_sharp_48_home_blinds_closed_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_blinds 48x48, 4-bit Alpha,  RLE, 148 bytes.
static const uint8_t ic_sharp_48_home_blinds_data[] PROGMEM = {
  0x4F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1C, 0x77,
  0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7, 0x1C, 0x77, 0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7,
  0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1C, 0x77,
  0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7, 0x1C, 0x77, 0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7,
  0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1C, 0x77,
  0x2C, 0x4C, 0x71, 0xC7, 0x72, 0xC4, 0xC7, 0x1C, 0x77, 0x2C, 0x4C, 0x71, 0xC7, 0x71, 0x01, 0xC0,
  0x13, 0xC7, 0x1C, 0x77, 0x10, 0xCC, 0x0C, 0x3C, 0x71, 0xC7, 0x70, 0x4E, 0x04, 0x2C, 0x71, 0xC7,
  0x70, 0x7E, 0x07, 0x2C, 0x71, 0xC7, 0x70, 0x4E, 0x04, 0x2C, 0x71, 0xC7, 0x71, 0x0C, 0xC0, 0xC3,
  0xC7, 0x1C, 0x77, 0x18, 0x41, 0x9E, 0xE9, 0x13, 0xC7, 0x1C, 0x77, 0x73, 0xC7, 0x1C, 0x77, 0x73,
  0xC4, 0x80, 0xAB, 0x4F,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_blinds() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(4, 6, 43, 41), Box(0, 0, 47, 47),
      ic_sharp_48_home_blinds_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_broadcast_on_home 48x48, 4-bit Alpha,  RLE, 331 bytes.
static const uint8_t ic_sharp_48_home_broadcast_on_home_data[] PROGMEM = {
  0x48, 0x0C, 0x0F, 0x78, 0x0C, 0x0F, 0x78, 0x0C, 0x0F, 0x78, 0x0C, 0x0F, 0x80, 0xC3, 0x0C, 0x80,
  0xC3, 0x0C, 0x80, 0xC3, 0x0C, 0x80, 0xC3, 0x0C, 0x80, 0xC3, 0x0C, 0x80, 0xC3, 0x00, 0x60, 0xDA,
  0x3F, 0xF7, 0x77, 0x30, 0x79, 0x3F, 0xF7, 0x48, 0x90, 0x27, 0xBD, 0xEE, 0xDB, 0x72, 0x40, 0x33,
  0xFF, 0x72, 0x03, 0x0B, 0xFB, 0x0B, 0x03, 0x6F, 0xF7, 0x10, 0x8F, 0xF0, 0x85, 0xC6, 0xC6, 0x01,
  0x0B, 0xC8, 0x1A, 0x52, 0x28, 0x12, 0x5A, 0xC0, 0xB0, 0x13, 0xC6, 0xC6, 0x0B, 0xB0, 0xA0, 0x27,
  0x10, 0x20, 0xAB, 0x0B, 0x3C, 0x6C, 0x50, 0x8B, 0x07, 0x28, 0x62, 0x8C, 0xEE, 0xC8, 0x22, 0x07,
  0xB0, 0x82, 0xC6, 0xC4, 0x03, 0xB0, 0x72, 0x09, 0xF9, 0x09, 0x20, 0x7B, 0x03, 0x1C, 0x6C, 0x40,
  0xBA, 0x0A, 0x20, 0xBF, 0xB0, 0xB2, 0x0A, 0xA0, 0xB1, 0xC6, 0xC3, 0x02, 0xB8, 0x12, 0x09, 0xB0,
  0xA0, 0x32, 0x03, 0x0A, 0xB8, 0x19, 0x02, 0xB0, 0x2C, 0x6C, 0x30, 0x7A, 0x81, 0xA0, 0x2B, 0x07,
  0x60, 0x7B, 0x81, 0x20, 0xAA, 0x07, 0xC6, 0xC3, 0x0B, 0xA8, 0x15, 0x08, 0xA0, 0xA3, 0x00, 0x63,
  0x0A, 0xA8, 0x18, 0x05, 0xA0, 0xBC, 0x6C, 0x30, 0xDA, 0x81, 0x20, 0xCA, 0x03, 0x20, 0xDA, 0x0D,
  0x20, 0x3A, 0x81, 0xC0, 0x2A, 0x0D, 0xC6, 0xC3, 0x0E, 0xA2, 0x0E, 0xA2, 0x06, 0xC0, 0x62, 0xA0,
  0xE2, 0xA0, 0xEC, 0x6C, 0x30, 0xEA, 0x20, 0xEA, 0x20, 0x5C, 0x05, 0x2A, 0x0E, 0x2A, 0x0E, 0xC6,
  0xC3, 0x0D, 0xA8, 0x12, 0x0C, 0xA0, 0x32, 0x0C, 0xA0, 0xC2, 0x03, 0xA8, 0x1C, 0x02, 0xA0, 0xDC,
  0x6C, 0x30, 0xBA, 0x81, 0x50, 0x8A, 0x0A, 0x20, 0x7A, 0x07, 0x20, 0xAA, 0x81, 0x80, 0x5A, 0x0B,
  0xC6, 0xC3, 0x07, 0xA8, 0x1A, 0x02, 0xB8, 0x13, 0x07, 0xA8, 0x17, 0x03, 0xB8, 0x12, 0x0A, 0xA0,
  0x7F, 0xF3, 0x02, 0xB8, 0x32, 0x08, 0xF7, 0x20, 0x7A, 0x07, 0x28, 0x37, 0xF8, 0x02, 0xB0, 0x2F,
  0xF4, 0x0B, 0xA0, 0xA2, 0x05, 0x30, 0x7A, 0x07, 0x30, 0x52, 0x0A, 0xA0, 0xB1, 0xFF, 0x40, 0x3B,
  0x06, 0x50, 0x7A, 0x07, 0x50, 0x7B, 0x03, 0x1F, 0xF5, 0x09, 0xA0, 0x75, 0x07, 0xA0, 0x75, 0x07,
  0xA0, 0x87, 0x77, 0x10, 0xB0, 0x76, 0x07, 0xA0, 0x76, 0x06, 0x0B, 0x77, 0x77, 0x30, 0x7A, 0x07,
  0x80, 0xC3, 0x00, 0x7A, 0x07, 0x80, 0xC3, 0x00, 0x7A, 0x07, 0x74,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_broadcast_on_home() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(4, 8, 46, 43), Box(0, 0, 47, 47),
      ic_sharp_48_home_broadcast_on_home_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_broadcast_on_personal 48x48, 4-bit Alpha,  RLE, 391 bytes.
static const uint8_t ic_sharp_48_home_broadcast_on_personal_data[] PROGMEM = {
  0x77, 0x10, 0x09, 0x77, 0x77, 0x70, 0x20, 0xCA, 0x0C, 0x02, 0x77, 0x77, 0x40, 0x50, 0xEC, 0x0E,
  0x05, 0x77, 0x77, 0x20, 0x9F, 0x90, 0x97, 0x77, 0x60, 0x20, 0xCF, 0xB0, 0xC0, 0x27, 0x77, 0x30,
  0x50, 0xEF, 0xD0, 0xE0, 0x57, 0x77, 0x10, 0x9F, 0xFA, 0x09, 0x77, 0x50, 0x20, 0xCF, 0xFC, 0x0C,
  0x02, 0x77, 0x20, 0x50, 0xEF, 0xFE, 0x0E, 0x05, 0x77, 0x09, 0xFF, 0xFB, 0x09, 0x74, 0x02, 0x0C,
  0xFF, 0xC8, 0x2B, 0x63, 0x22, 0x81, 0x13, 0x47, 0x20, 0x50, 0xEF, 0xFA, 0x0D, 0x06, 0x77, 0x5F,
  0xFB, 0x07, 0x77, 0x7F, 0xF9, 0x0D, 0x03, 0x48, 0x90, 0x27, 0xBD, 0xEE, 0xDB, 0x72, 0x71, 0xFF,
  0x0C, 0x01, 0x30, 0x30, 0xBF, 0xB0, 0xB0, 0x36, 0xFE, 0x0D, 0x01, 0x30, 0x8F, 0xF0, 0x85, 0xFE,
  0x03, 0x20, 0x10, 0xBC, 0x81, 0xA5, 0x22, 0x81, 0x25, 0xAC, 0x0B, 0x01, 0x3F, 0xD0, 0x73, 0x0B,
  0xB0, 0xA0, 0x27, 0x10, 0x20, 0xAB, 0x0B, 0x3F, 0xC0, 0xD3, 0x08, 0xB0, 0x72, 0x86, 0x28, 0xCE,
  0xEC, 0x82, 0x20, 0x7B, 0x08, 0x2F, 0xC0, 0x62, 0x03, 0xB0, 0x72, 0x09, 0xF9, 0x09, 0x20, 0x7B,
  0x03, 0x1F, 0xC3, 0x0B, 0xA0, 0xA2, 0x0B, 0xFB, 0x0B, 0x20, 0xAA, 0x0B, 0x1F, 0xB0, 0xB2, 0x02,
  0xB8, 0x12, 0x09, 0xB0, 0xA0, 0x32, 0x03, 0x0A, 0xB8, 0x19, 0x02, 0xB0, 0x2F, 0xB0, 0x62, 0x07,
  0xA8, 0x1A, 0x02, 0xB0, 0x76, 0x07, 0xB8, 0x12, 0x0A, 0xA0, 0x7F, 0xB0, 0x32, 0x0B, 0xA8, 0x15,
  0x08, 0xA0, 0xA3, 0x00, 0x63, 0x0A, 0xA8, 0x18, 0x05, 0xA0, 0xBF, 0xB0, 0x22, 0x0D, 0xA8, 0x12,
  0x0C, 0xA0, 0x32, 0x0D, 0xA0, 0xD2, 0x03, 0xA8, 0x1C, 0x02, 0xA0, 0xDF, 0xB3, 0x0E, 0xA2, 0x0E,
  0xA2, 0x06, 0xC0, 0x62, 0xA0, 0xE2, 0xA0, 0xEF, 0xB3, 0x0E, 0xA2, 0x0E, 0xA2, 0x05, 0xC0, 0x52,
  0xA0, 0xE2, 0xA0, 0xEF, 0xB0, 0x22, 0x0D, 0xA8, 0x12, 0x0C, 0xA0, 0x32, 0x0C, 0xA0, 0xC2, 0x03,
  0xA8, 0x1C, 0x02, 0xA0, 0xDF, 0xB0, 0x32, 0x0B, 0xA8, 0x15, 0x08, 0xA0, 0xA2, 0x07, 0xA0, 0x72,
  0x0A, 0xA8, 0x18, 0x05, 0xA0, 0xBF, 0xB0, 0x62, 0x07, 0xA8, 0x1A, 0x02, 0xB8, 0x13, 0x07, 0xA8,
  0x17, 0x03, 0xB8, 0x12, 0x0A, 0xA0, 0x7F, 0xB0, 0xA2, 0x02, 0xB8, 0x32, 0x08, 0xF7, 0x20, 0x7A,
  0x07, 0x28, 0x37, 0xF8, 0x02, 0xB0, 0x2F, 0xB0, 0xE3, 0x0B, 0xA0, 0xA2, 0x05, 0x30, 0x7A, 0x07,
  0x30, 0x52, 0x0A, 0xA0, 0xB1, 0xFC, 0x06, 0x20, 0x3B, 0x06, 0x50, 0x7A, 0x07, 0x50, 0x7B, 0x03,
  0x1F, 0xC0, 0xD3, 0x09, 0xA0, 0x75, 0x07, 0xA0, 0x75, 0x07, 0xA0, 0x82, 0xFD, 0x07, 0x30, 0xB0,
  0x76, 0x07, 0xA0, 0x76, 0x06, 0x0B, 0x3F, 0xE0, 0x37, 0x30, 0x7A, 0x07, 0x77, 0x77, 0x70, 0x7A,
  0x07, 0x77, 0x77, 0x70, 0x7A, 0x07, 0x74,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_broadcast_on_personal() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(8, 6, 46, 43), Box(0, 0, 47, 47),
      ic_sharp_48_home_broadcast_on_personal_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_curtains_closed 48x48, 4-bit Alpha,  RLE, 115 bytes.
static const uint8_t ic_sharp_48_home_curtains_closed_data[] PROGMEM = {
  0x4F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xF4,
  0xFF, 0x71, 0xFF, 0x4F, 0xF7, 0x1F, 0xF4, 0xFF, 0x71, 0xFF, 0x4F, 0xF7, 0x1F, 0xF4, 0xFF, 0x71,
  0xFF, 0x4F, 0xF7, 0x1F, 0xF4, 0xFF, 0x71, 0xFF, 0x4F, 0xF7, 0x1F, 0xF4, 0xFF, 0x71, 0xFF, 0x4F,
  0xF7, 0x1F, 0xF4, 0xFF, 0x71, 0xFF, 0x4F, 0xF7, 0x1F, 0xF4, 0xFF, 0x71, 0xFF, 0x4F, 0xF7, 0x1F,
  0xF4, 0xFF, 0x71, 0xFF, 0x4F, 0xF7, 0x1F, 0xF4, 0xFF, 0x71, 0xFF, 0x4F, 0xF7, 0x1F, 0xF4, 0xFF,
  0x71, 0xFF, 0x4F, 0xF7, 0x1F, 0xF4, 0xFF, 0x71, 0xFF, 0x4F, 0xF7, 0x1F, 0xF4, 0xFF, 0x71, 0xFF,
  0x4F, 0xF7, 0x1F, 0xF4, 0xFF, 0x71, 0xFF, 0x4F, 0xF7, 0x1F, 0xF4, 0xFF, 0x71, 0xFF, 0x4F, 0xF4,
  0x80, 0xAB, 0x4F,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_curtains_closed() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(4, 6, 43, 41), Box(0, 0, 47, 47),
      ic_sharp_48_home_curtains_closed_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_curtains 48x48, 4-bit Alpha,  RLE, 190 bytes.
static const uint8_t ic_sharp_48_home_curtains_data[] PROGMEM = {
  0x4F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xF9,
  0x0C, 0x0D, 0xFF, 0x97, 0x1F, 0xF9, 0x0A, 0x0B, 0xFF, 0x97, 0x1F, 0xF9, 0x00, 0x8F, 0xF9, 0x71,
  0xFF, 0x90, 0x04, 0xFF, 0x97, 0x1F, 0xF9, 0x10, 0x1F, 0xF9, 0x71, 0xFF, 0x0A, 0x20, 0xAF, 0xF7,
  0x1F, 0xF0, 0x42, 0x05, 0xFF, 0x71, 0xFE, 0x0D, 0x40, 0xDF, 0xE7, 0x1F, 0xE0, 0x54, 0x05, 0xFE,
  0x71, 0xFD, 0x0B, 0x60, 0xBF, 0xD7, 0x1F, 0xC0, 0xE0, 0x16, 0x01, 0x0E, 0xFC, 0x71, 0xFB, 0x0E,
  0x03, 0x71, 0x03, 0xFC, 0x71, 0xFA, 0x0E, 0x04, 0x73, 0x04, 0x0E, 0xFA, 0x71, 0xF9, 0x0D, 0x02,
  0x75, 0x02, 0x0D, 0xF9, 0x71, 0xF9, 0x0D, 0x02, 0x75, 0x02, 0x0D, 0xF9, 0x71, 0xFA, 0x0E, 0x04,
  0x73, 0x04, 0x0E, 0xFA, 0x71, 0xFB, 0x0E, 0x03, 0x71, 0x03, 0xFC, 0x71, 0xFC, 0x0E, 0x01, 0x60,
  0x10, 0xEF, 0xC7, 0x1F, 0xD0, 0xB6, 0x0B, 0xFD, 0x71, 0xFE, 0x05, 0x40, 0x5F, 0xE7, 0x1F, 0xE0,
  0xD4, 0x0D, 0xFE, 0x71, 0xFF, 0x04, 0x20, 0x5F, 0xF7, 0x1F, 0xF0, 0xA2, 0x0A, 0xFF, 0x71, 0xFF,
  0x91, 0x01, 0xFF, 0x97, 0x1F, 0xF9, 0x00, 0x4F, 0xF9, 0x71, 0xFF, 0x90, 0x08, 0xFF, 0x97, 0x1F,
  0xF9, 0x0A, 0x0B, 0xFF, 0x97, 0x1F, 0xF9, 0x0C, 0x0D, 0xFF, 0x94, 0x80, 0xAB, 0x4F,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_curtains() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(4, 6, 43, 41), Box(0, 0, 47, 47),
      ic_sharp_48_home_curtains_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_electric_bolt 48x48, 4-bit Alpha,  RLE, 243 bytes.
static const uint8_t ic_sharp_48_home_electric_bolt_data[] PROGMEM = {
  0x77, 0x73, 0x08, 0x07, 0x77, 0x77, 0x70, 0xAA, 0x07, 0x77, 0x77, 0x40, 0x10, 0xBB, 0x09, 0x77,
  0x77, 0x30, 0x20, 0xDB, 0x0D, 0x77, 0x77, 0x30, 0x30, 0xEC, 0x03, 0x77, 0x77, 0x20, 0x40, 0xEC,
  0x07, 0x77, 0x77, 0x20, 0x6D, 0x0B, 0x77, 0x77, 0x20, 0x8D, 0x0E, 0x01, 0x77, 0x77, 0x10, 0x9E,
  0x05, 0x77, 0x77, 0x10, 0xBE, 0x09, 0x77, 0x77, 0x01, 0x0C, 0xE0, 0xD7, 0x77, 0x70, 0x20, 0xDF,
  0x03, 0x77, 0x76, 0x04, 0x0E, 0xF0, 0x77, 0x77, 0x60, 0x5F, 0x90, 0xB7, 0x77, 0x60, 0x7F, 0x90,
  0xE0, 0x17, 0x77, 0x50, 0x9F, 0xA0, 0x57, 0x77, 0x50, 0xAF, 0xB8, 0x90, 0xED, 0xBA, 0x87, 0x54,
  0x31, 0x77, 0x10, 0x10, 0xCF, 0xFF, 0x98, 0x7D, 0xCB, 0x97, 0x65, 0x32, 0x40, 0x20, 0xDF, 0xFF,
  0xFC, 0x06, 0x20, 0x30, 0xEF, 0xFF, 0xFB, 0x0E, 0x05, 0x20, 0x50, 0xEF, 0xFF, 0xFB, 0x0E, 0x03,
  0x20, 0x6F, 0xFF, 0xFC, 0x0D, 0x02, 0x48, 0x72, 0x35, 0x67, 0x9B, 0xCD, 0xFF, 0xF9, 0x0C, 0x01,
  0x77, 0x18, 0x90, 0x13, 0x45, 0x78, 0xAB, 0xDE, 0xFB, 0x0A, 0x77, 0x75, 0x05, 0xFA, 0x09, 0x77,
  0x75, 0x01, 0x0E, 0xF9, 0x07, 0x77, 0x76, 0x0B, 0xF9, 0x05, 0x77, 0x76, 0x07, 0xF0, 0xE0, 0x47,
  0x77, 0x60, 0x3F, 0x0D, 0x02, 0x77, 0x77, 0x0D, 0xE0, 0xC0, 0x17, 0x77, 0x70, 0x9E, 0x0B, 0x77,
  0x77, 0x10, 0x5E, 0x09, 0x77, 0x77, 0x10, 0x10, 0xED, 0x08, 0x77, 0x77, 0x20, 0xBD, 0x06, 0x77,
  0x77, 0x20, 0x7C, 0x0E, 0x04, 0x77, 0x77, 0x20, 0x3C, 0x0E, 0x03, 0x77, 0x77, 0x30, 0xDB, 0x0D,
  0x02, 0x77, 0x77, 0x30, 0x9B, 0x0B, 0x01, 0x77, 0x77, 0x40, 0x7A, 0x0A, 0x77, 0x77, 0x70, 0x70,
  0x87, 0x77, 0x30,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_electric_bolt() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(5, 4, 42, 43), Box(0, 0, 47, 47),
      ic_sharp_48_home_electric_bolt_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_electric_meter 48x48, 4-bit Alpha,  RLE, 255 bytes.
static const uint8_t ic_sharp_48_home_electric_meter_data[] PROGMEM = {
  0x75, 0x89, 0x21, 0x59, 0xBD, 0xEE, 0xDB, 0x95, 0x17, 0x77, 0x10, 0x40, 0xBF, 0xD0, 0xB0, 0x47,
  0x74, 0x03, 0x0B, 0xFF, 0xA0, 0xB0, 0x37, 0x71, 0x08, 0xFF, 0xE0, 0x87, 0x60, 0xBF, 0xFF, 0x90,
  0xB7, 0x40, 0xCF, 0xFF, 0xB0, 0xC7, 0x20, 0xBF, 0xFF, 0xD0, 0xB7, 0x08, 0xFF, 0xFF, 0x08, 0x50,
  0x3F, 0xFF, 0xFA, 0x03, 0x40, 0xBF, 0xFF, 0xFA, 0x0B, 0x30, 0x4F, 0x97, 0x72, 0xF9, 0x04, 0x20,
  0xBF, 0x97, 0x72, 0xF9, 0x81, 0xB0, 0x1F, 0xA7, 0x72, 0xFA, 0x01, 0x05, 0xFA, 0x77, 0x2F, 0xA0,
  0x50, 0x9F, 0xFF, 0xFE, 0x09, 0x0B, 0xFF, 0xFF, 0xE0, 0xB0, 0xDF, 0xFB, 0x81, 0xD3, 0xDF, 0xF0,
  0xD0, 0xEF, 0xFA, 0x83, 0xD1, 0x01, 0xDF, 0xE0, 0x0E, 0xFF, 0x90, 0xD0, 0x13, 0x01, 0x0D, 0xFD,
  0x0E, 0x0D, 0xFF, 0x0D, 0x01, 0x40, 0x10, 0xDF, 0xD0, 0xD0, 0xCF, 0xE0, 0xD0, 0x14, 0x01, 0x0D,
  0xFE, 0x0C, 0x09, 0xFD, 0x0D, 0x01, 0x50, 0xBF, 0xF0, 0x90, 0x5F, 0xD0, 0xD0, 0x15, 0x01, 0x0D,
  0xFE, 0x05, 0x01, 0xFE, 0x0D, 0x01, 0x50, 0x10, 0xDF, 0xD8, 0x11, 0x0B, 0xFE, 0x0B, 0x50, 0x10,
  0xDF, 0xC0, 0xB2, 0x04, 0xFD, 0x0D, 0x01, 0x40, 0x10, 0xDF, 0xD0, 0x43, 0x0C, 0xFB, 0x0D, 0x01,
  0x40, 0x10, 0xDF, 0xD0, 0xC4, 0x03, 0xFB, 0x0D, 0x01, 0x30, 0x10, 0xDF, 0xE0, 0x35, 0x08, 0xFB,
  0x83, 0xD1, 0x01, 0xDF, 0xE0, 0x87, 0x0B, 0xFB, 0x81, 0xD3, 0xDF, 0xE0, 0xB7, 0x10, 0x10, 0xCF,
  0xFF, 0xB0, 0xC0, 0x17, 0x30, 0xBF, 0xFF, 0x90, 0xB7, 0x60, 0x8F, 0xFE, 0x08, 0x77, 0x10, 0x30,
  0xCF, 0xFA, 0x0C, 0x03, 0x77, 0x40, 0x40, 0xBF, 0xD0, 0xB0, 0x47, 0x77, 0x1C, 0x0D, 0xA0, 0xDC,
  0x77, 0x73, 0xC4, 0xC7, 0x77, 0x3C, 0x4C, 0x77, 0x73, 0xC4, 0xC7, 0x77, 0x3C, 0x4C, 0x75,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_electric_meter() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(6, 4, 41, 43), Box(0, 0, 47, 47),
      ic_sharp_48_home_electric_meter_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_energy_savings_leaf 48x48, 4-bit Alpha,  RLE, 242 bytes.
static const uint8_t ic_sharp_48_home_energy_savings_leaf_data[] PROGMEM = {
  0x75, 0x84, 0x15, 0x9B, 0xDE, 0xFF, 0xC7, 0x30, 0x40, 0xBF, 0xFF, 0xB7, 0x10, 0x30, 0xBF, 0xFF,
  0xD7, 0x08, 0xFF, 0xFF, 0x50, 0x10, 0xBF, 0xFF, 0xF9, 0x50, 0xCF, 0xFF, 0xFA, 0x40, 0xBF, 0xFF,
  0xFB, 0x30, 0x9F, 0xFF, 0xFC, 0x20, 0x3F, 0xFB, 0x00, 0x7F, 0xF2, 0x0C, 0xFF, 0xA8, 0x15, 0x05,
  0xFF, 0x10, 0x5F, 0xF9, 0x83, 0xE4, 0x01, 0xEF, 0xF1, 0x0C, 0xFF, 0x0E, 0x03, 0x20, 0xBF, 0xF9,
  0x02, 0xFF, 0x0E, 0x02, 0x20, 0x7F, 0xFA, 0x06, 0xFE, 0x0D, 0x02, 0x20, 0x3F, 0xFB, 0x0A, 0xFD,
  0x0C, 0x01, 0x30, 0xDF, 0xFB, 0x0C, 0xFC, 0x0B, 0x40, 0x9F, 0xFC, 0x0E, 0xFB, 0x0A, 0x68, 0x72,
  0x35, 0x78, 0x9B, 0xDE, 0xFF, 0xD0, 0x97, 0x71, 0x08, 0xFA, 0x0E, 0xF9, 0x08, 0x77, 0x10, 0x9F,
  0xA0, 0xE0, 0xDF, 0x98, 0x7E, 0xDB, 0x98, 0x75, 0x32, 0x60, 0xAF, 0xB0, 0xD0, 0xCF, 0xFB, 0x09,
  0x40, 0xBF, 0xC0, 0xB0, 0x9F, 0xFA, 0x0D, 0x30, 0x10, 0xCF, 0xD0, 0x90, 0x5F, 0xFA, 0x03, 0x20,
  0x20, 0xDF, 0xE0, 0x50, 0x1F, 0xF9, 0x07, 0x20, 0x20, 0xEF, 0xF8, 0x11, 0x0B, 0xFE, 0x0B, 0x20,
  0x30, 0xEF, 0xF0, 0xB2, 0x04, 0xFD, 0x83, 0xE1, 0x04, 0xEF, 0xF9, 0x04, 0x30, 0xCF, 0xC8, 0x15,
  0x05, 0xFF, 0xA0, 0xB4, 0x03, 0xFC, 0x00, 0x7F, 0xFB, 0x03, 0x50, 0x8F, 0xFF, 0xF0, 0x86, 0x05,
  0xFF, 0xFE, 0x0B, 0x60, 0x5F, 0xFF, 0xE0, 0xC6, 0x05, 0xFF, 0xFE, 0x0C, 0x01, 0x50, 0x5D, 0x05,
  0x08, 0xFF, 0xE0, 0x97, 0x0A, 0xC0, 0x52, 0x03, 0x0C, 0xFF, 0xA0, 0xB0, 0x37, 0x20, 0xAA, 0x05,
  0x50, 0x40, 0xBF, 0xD0, 0xB0, 0x47, 0x50, 0xA0, 0x57, 0x18, 0x92, 0x15, 0x9B, 0xDE, 0xED, 0xB9,
  0x51, 0x75,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_energy_savings_leaf() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_home_energy_savings_leaf_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_gas_meter 48x48, 4-bit Alpha,  RLE, 92 bytes.
static const uint8_t ic_sharp_48_home_gas_meter_data[] PROGMEM = {
  0x73, 0xC4, 0xC7, 0x76, 0xC4, 0xC7, 0x76, 0xC4, 0xC7, 0x76, 0xC4, 0xC7, 0x38, 0x0C, 0x84, 0xF7,
  0x72, 0xFF, 0xA7, 0x72, 0xFF, 0xA7, 0x72, 0xFF, 0xA7, 0x72, 0x80, 0x9E, 0x3F, 0x00, 0xDF, 0xFF,
  0xF9, 0x82, 0xE2, 0x2E, 0xFF, 0xFF, 0x04, 0x20, 0x4F, 0xFF, 0xE0, 0x64, 0x06, 0xFF, 0xFC, 0x08,
  0x60, 0x8F, 0xFF, 0xA0, 0xC7, 0x10, 0xCF, 0xFF, 0x90, 0x47, 0x10, 0x4F, 0xFF, 0x90, 0x17, 0x10,
  0x1F, 0xFF, 0x97, 0x3F, 0xFF, 0x90, 0x37, 0x10, 0x3F, 0xFF, 0x90, 0xA7, 0x10, 0xAF, 0xFF, 0xA0,
  0x76, 0x07, 0xFF, 0xFC, 0x0A, 0x03, 0x20, 0x30, 0xA8, 0x0C, 0x91, 0xF0,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_gas_meter() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(8, 4, 39, 43), Box(0, 0, 47, 47),
      ic_sharp_48_home_gas_meter_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_heat_pump 48x48, 4-bit Alpha,  RLE, 187 bytes.
static const uint8_t ic_sharp_48_home_heat_pump_data[] PROGMEM = {
  0x80, 0xCD, 0x2F, 0x81, 0xA5, 0x9A, 0x81, 0x95, 0xAF, 0xFF, 0xD0, 0xB0, 0x22, 0x07, 0xA0, 0x72,
  0x02, 0x0B, 0xFF, 0xFB, 0x09, 0x30, 0x7A, 0x07, 0x30, 0x9F, 0xFF, 0xC0, 0x92, 0x07, 0xA0, 0x72,
  0x09, 0xFF, 0xF9, 0x0B, 0x09, 0xB8, 0x19, 0x07, 0xA8, 0x17, 0x09, 0xB0, 0x90, 0xBF, 0xFC, 0x81,
  0x20, 0x9B, 0x09, 0x07, 0xA0, 0x70, 0x9B, 0x81, 0x90, 0x3F, 0xFB, 0x0A, 0x30, 0x9B, 0x0E, 0xA0,
  0xEB, 0x09, 0x30, 0xBF, 0xFA, 0x05, 0x40, 0x9F, 0x90, 0x94, 0x06, 0xFF, 0xA0, 0x98, 0x01, 0x78,
  0x6E, 0xFB, 0x11, 0xBF, 0xE8, 0x01, 0x70, 0x9F, 0xFF, 0xB0, 0x12, 0x01, 0xFF, 0xFF, 0xC0, 0x12,
  0x01, 0xFF, 0xFB, 0x09, 0x80, 0x17, 0x86, 0xEF, 0xB1, 0x1B, 0xFE, 0x80, 0x17, 0x09, 0xFF, 0xA0,
  0x54, 0x09, 0xF9, 0x09, 0x40, 0x5F, 0xFA, 0x0A, 0x30, 0x9B, 0x0E, 0xA0, 0xEB, 0x09, 0x30, 0xAF,
  0xFB, 0x81, 0x20, 0x9B, 0x09, 0x07, 0xA0, 0x70, 0x9B, 0x81, 0x90, 0x2F, 0xFC, 0x0B, 0x09, 0xB8,
  0x19, 0x07, 0xA8, 0x17, 0x09, 0xB0, 0x90, 0xBF, 0xFF, 0x90, 0x92, 0x07, 0xA0, 0x72, 0x09, 0xFF,
  0xFC, 0x09, 0x30, 0x7A, 0x07, 0x30, 0x9F, 0xFF, 0xB0, 0xB0, 0x22, 0x07, 0xA0, 0x72, 0x02, 0x0B,
  0xFF, 0xFD, 0x81, 0xA5, 0x9A, 0x81, 0x95, 0xA8, 0x0C, 0xD2, 0xF0,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_heat_pump() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_home_heat_pump_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_mode_fan_off 48x48, 4-bit Alpha,  RLE, 334 bytes.
static const uint8_t ic_sharp_48_home_mode_fan_off_data[] PROGMEM = {
  0x77, 0x48, 0x71, 0x6A, 0xCE, 0xFE, 0xB3, 0x77, 0x20, 0x27, 0x60, 0x10, 0x9F, 0xA0, 0x77, 0x78,
  0x14, 0xF7, 0x74, 0x04, 0x0E, 0xFC, 0x04, 0x75, 0x04, 0xB0, 0x77, 0x20, 0x4F, 0xE0, 0xA7, 0x50,
  0xEC, 0x07, 0x70, 0x10, 0xEF, 0xE0, 0xD7, 0x50, 0x30, 0xEC, 0x07, 0x60, 0x7F, 0xF0, 0xE7, 0x60,
  0x30, 0xEC, 0x07, 0x50, 0xAF, 0xF0, 0xC7, 0x70, 0x30, 0xEC, 0x07, 0x50, 0xCF, 0xE0, 0x67, 0x71,
  0x03, 0x0E, 0xC0, 0x75, 0x0C, 0xFC, 0x0B, 0x77, 0x30, 0x30, 0xEC, 0x07, 0x50, 0xCF, 0xA0, 0xA7,
  0x75, 0x03, 0x0E, 0xC0, 0x75, 0x0C, 0xF0, 0x97, 0x77, 0x03, 0x0E, 0xC0, 0x75, 0x0C, 0xD0, 0xC7,
  0x75, 0x04, 0x0B, 0x0F, 0xED, 0x07, 0x50, 0xCC, 0x04, 0x48, 0x53, 0x8C, 0xDE, 0xB7, 0x70, 0x7F,
  0xC0, 0x75, 0x0C, 0xB8, 0x31, 0x02, 0x7D, 0xF0, 0xD0, 0x44, 0x04, 0xFE, 0x07, 0x50, 0xCA, 0x0E,
  0x0C, 0xFD, 0x04, 0x30, 0xBF, 0xF0, 0x75, 0x0C, 0xFF, 0x90, 0xE0, 0x12, 0x0E, 0xFF, 0x90, 0x75,
  0x0C, 0xFF, 0x90, 0x92, 0xFF, 0xB0, 0x75, 0x0C, 0xFF, 0x98, 0x11, 0x0D, 0xFF, 0xB0, 0x75, 0x0C,
  0xFF, 0x81, 0x50, 0xCF, 0xFC, 0x07, 0x50, 0xCF, 0xE8, 0x1A, 0x0A, 0xFF, 0xD0, 0x75, 0x0C, 0xFD,
  0x81, 0xC0, 0x5F, 0xFE, 0x07, 0x50, 0xCF, 0xC8, 0x1D, 0x01, 0xFF, 0xF0, 0x75, 0x0C, 0xFC, 0x20,
  0x9F, 0xFF, 0x07, 0x50, 0xCF, 0xA0, 0xE2, 0x01, 0x0E, 0xFF, 0xF0, 0x75, 0x0C, 0xF9, 0x0B, 0x30,
  0x4F, 0xD0, 0xC0, 0xEF, 0x90, 0x75, 0x0C, 0xF0, 0x44, 0x04, 0x0D, 0xF8, 0x3D, 0x72, 0x01, 0xFA,
  0x07, 0x50, 0xCD, 0x07, 0x78, 0x57, 0xBF, 0xDC, 0x83, 0x40, 0x4F, 0xB0, 0x75, 0x83, 0xBE, 0xDA,
  0x47, 0x75, 0x0C, 0xFC, 0x07, 0x77, 0x76, 0x09, 0xFE, 0x07, 0x77, 0x74, 0x0A, 0xFF, 0x90, 0x77,
  0x77, 0x20, 0xBF, 0xFB, 0x07, 0x77, 0x70, 0x6F, 0xFD, 0x07, 0x77, 0x60, 0xCF, 0xF0, 0xD0, 0xEC,
  0x07, 0x77, 0x50, 0xEF, 0xF8, 0x17, 0x3E, 0xC0, 0x77, 0x74, 0x0D, 0xFE, 0x83, 0xE1, 0x03, 0xEC,
  0x07, 0x77, 0x30, 0xAF, 0xE0, 0x43, 0x03, 0x0E, 0xC0, 0x77, 0x72, 0x04, 0xFC, 0x0E, 0x04, 0x50,
  0x30, 0xEC, 0x07, 0x77, 0x20, 0x7F, 0xA0, 0x90, 0x17, 0x03, 0x0E, 0xC0, 0x27, 0x72, 0x87, 0x3B,
  0xEF, 0xEC, 0xA6, 0x17, 0x30, 0x30, 0xEA, 0x04, 0x80, 0xC1, 0x08, 0x13, 0xE4, 0x30,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_mode_fan_off() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(3, 4, 43, 44), Box(0, 0, 47, 47),
      ic_sharp_48_home_mode_fan_off_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_nest_cam_wired_stand 48x48, 4-bit Alpha,  RLE, 170 bytes.
static const uint8_t ic_sharp_48_home_nest_cam_wired_stand_data[] PROGMEM = {
  0x77, 0x78, 0x11, 0x23, 0x74, 0x87, 0x13, 0x56, 0x79, 0xBC, 0xDC, 0x71, 0x81, 0x5A, 0xEF, 0xE6,
  0x06, 0x0E, 0xFF, 0xA4, 0x01, 0x0C, 0xFF, 0xC3, 0x02, 0x0E, 0xFF, 0xD2, 0x01, 0x0D, 0xFF, 0xE2,
  0x0C, 0xFF, 0xF1, 0x06, 0xFF, 0xF9, 0x10, 0xDF, 0xFF, 0x90, 0x4F, 0xFF, 0xA0, 0x9F, 0xFF, 0xA0,
  0xCF, 0xFF, 0xA0, 0xEF, 0xFF, 0xA0, 0xEF, 0xFF, 0xA0, 0xEF, 0xFF, 0xA0, 0xCF, 0xFF, 0xA0, 0x9F,
  0xFF, 0xA0, 0x4F, 0xFF, 0xA1, 0x0D, 0xFF, 0xF9, 0x10, 0x7F, 0xFF, 0x92, 0x0C, 0xFF, 0xF2, 0x02,
  0x0E, 0xFF, 0xE3, 0x03, 0x0E, 0xFF, 0xD4, 0x03, 0x0D, 0xFF, 0xC6, 0x08, 0x0E, 0xFF, 0xA7, 0x82,
  0x16, 0xBE, 0xFE, 0x74, 0x83, 0x13, 0x57, 0xEF, 0x97, 0x70, 0x6C, 0x83, 0x60, 0x24, 0x57, 0x18,
  0x14, 0x9D, 0xA0, 0xD0, 0xEB, 0x0B, 0x74, 0x03, 0x0C, 0xFA, 0x0E, 0x01, 0x73, 0x05, 0xFD, 0x07,
  0x72, 0x05, 0xFF, 0x08, 0x70, 0x20, 0xEF, 0xF9, 0x04, 0x60, 0xAF, 0xFA, 0x0D, 0x50, 0x2F, 0xFC,
  0x04, 0x40, 0x7F, 0xFC, 0x0A, 0x40, 0xBF, 0xFC, 0x0C, 0x40, 0xDF, 0xFC, 0x0E, 0x4F, 0xFE, 0x4F,
  0xFE, 0x4F, 0xFE, 0x4F, 0xFE, 0x4F, 0xFE, 0x4F, 0xFE, 0x20,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_nest_cam_wired_stand() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(12, 1, 35, 45), Box(0, 0, 47, 47),
      ic_sharp_48_home_nest_cam_wired_stand_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_oil_barrel 48x48, 4-bit Alpha,  RLE, 134 bytes.
static const uint8_t ic_sharp_48_home_oil_barrel_data[] PROGMEM = {
  0x80, 0xA9, 0x4F, 0x4F, 0xFF, 0xF7, 0x1F, 0xFF, 0xF7, 0x1F, 0xFF, 0xF7, 0x1F, 0xFF, 0xF7, 0x1F,
  0xFF, 0xF7, 0x1F, 0xFF, 0xF7, 0x1F, 0xFF, 0xF7, 0x1F, 0xE0, 0x08, 0xFE, 0x71, 0xFD, 0x0A, 0x20,
  0xAF, 0xD7, 0x1F, 0xC0, 0xC4, 0x0C, 0xFC, 0x71, 0xFB, 0x0D, 0x01, 0x40, 0x10, 0xDF, 0xB7, 0x1F,
  0xA0, 0xE0, 0x26, 0x02, 0x0E, 0xFA, 0x4F, 0xE0, 0x57, 0x10, 0x4F, 0xFF, 0xC0, 0xA7, 0x30, 0xAF,
  0xFF, 0xB0, 0x37, 0x30, 0x3F, 0xFF, 0xB0, 0x17, 0x4F, 0xD4, 0xF9, 0x75, 0xF9, 0x71, 0xF9, 0x03,
  0x73, 0x03, 0xF9, 0x71, 0xF9, 0x08, 0x73, 0x08, 0xF9, 0x71, 0xF9, 0x0E, 0x02, 0x71, 0x02, 0x0E,
  0xF9, 0x71, 0xFA, 0x0D, 0x02, 0x60, 0x20, 0xDF, 0xA7, 0x1F, 0xC0, 0x80, 0x32, 0x03, 0x08, 0xFC,
  0x71, 0xFF, 0xFF, 0x71, 0xFF, 0xFF, 0x71, 0xFF, 0xFF, 0x71, 0xFF, 0xFF, 0x71, 0xFF, 0xFF, 0x71,
  0xFF, 0xFF, 0x48, 0x0A, 0x94, 0xF0,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_oil_barrel() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(6, 6, 41, 41), Box(0, 0, 47, 47),
      ic_sharp_48_home_oil_barrel_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_propane 48x48, 4-bit Alpha,  RLE, 185 bytes.
static const uint8_t ic_sharp_48_home_propane_data[] PROGMEM = {
  0x77, 0xFF, 0xA7, 0x77, 0x7F, 0xFA, 0x77, 0x77, 0xFF, 0xA7, 0x77, 0x7F, 0xFA, 0x77, 0x77, 0xC7,
  0x1C, 0x77, 0x77, 0xC7, 0x1C, 0x77, 0x71, 0x82, 0x49, 0xCD, 0xFF, 0xE8, 0x2D, 0xC9, 0x47, 0x70,
  0x60, 0xEF, 0xFF, 0xF0, 0xE0, 0x67, 0x30, 0x20, 0xDF, 0xFF, 0xFC, 0x0D, 0x02, 0x70, 0x40, 0xEF,
  0xFF, 0xFE, 0x0E, 0x04, 0x50, 0x30, 0xE8, 0x0C, 0x0F, 0x0E, 0x03, 0x40, 0xD8, 0x0C, 0x2F, 0x0D,
  0x30, 0x88, 0x0C, 0x4F, 0x81, 0x80, 0x18, 0x0C, 0x6F, 0x01, 0x06, 0x80, 0xC6, 0xF0, 0x60, 0xA8,
  0x0C, 0x6F, 0x0A, 0x0D, 0x80, 0xC6, 0xF0, 0xD0, 0xE8, 0x0C, 0x6F, 0x00, 0xE8, 0x0C, 0x6F, 0x0E,
  0x0D, 0x80, 0xC6, 0xF0, 0xD0, 0xA8, 0x0C, 0x6F, 0x0A, 0x06, 0x80, 0xC6, 0xF0, 0x60, 0x18, 0x0C,
  0x6F, 0x81, 0x10, 0x98, 0x0C, 0x4F, 0x09, 0x20, 0x10, 0xE8, 0x0C, 0x2F, 0x0E, 0x01, 0x30, 0x48,
  0x0C, 0x2F, 0x04, 0x50, 0x68, 0x0C, 0x0F, 0x06, 0x70, 0x40, 0xEF, 0xFF, 0xFC, 0x0E, 0x04, 0x72,
  0x01, 0x09, 0xFF, 0xFF, 0xA0, 0x90, 0x17, 0x58, 0x31, 0x6A, 0xDE, 0xFF, 0xE8, 0x3E, 0xDA, 0x61,
  0x77, 0x5C, 0x75, 0xC7, 0x77, 0x3C, 0x75, 0xC7, 0x77, 0x3C, 0x75, 0xC7, 0x77, 0x3C, 0x75, 0xC7,
  0x77, 0x3C, 0x75, 0xC7, 0x77, 0x3C, 0x75, 0xC7, 0x50,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_propane() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(2, 6, 45, 41), Box(0, 0, 47, 47),
      ic_sharp_48_home_propane_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_propane_tank 48x48, 4-bit Alpha,  RLE, 110 bytes.
static const uint8_t ic_sharp_48_home_propane_tank_data[] PROGMEM = {
  0x6F, 0xFE, 0x75, 0xFF, 0xE7, 0x5F, 0xFE, 0x75, 0xFF, 0xE7, 0x5C, 0x75, 0xC7, 0x5C, 0x75, 0xC7,
  0x5C, 0x4C, 0x4C, 0x75, 0xC4, 0xC4, 0xC7, 0x30, 0x20, 0x8F, 0xFE, 0x08, 0x02, 0x70, 0x8F, 0xFF,
  0xB0, 0x85, 0x0B, 0xFF, 0xFD, 0x0B, 0x30, 0x8F, 0xFF, 0xF8, 0x18, 0x02, 0xFF, 0xFF, 0xA0, 0x20,
  0x8F, 0xFF, 0xFA, 0x08, 0x0C, 0xFF, 0xFF, 0xA0, 0xC0, 0xEF, 0xFF, 0xFA, 0x0E, 0x80, 0xAF, 0x4F,
  0x80, 0x9F, 0x40, 0x80, 0xAF, 0x4F, 0x0E, 0xFF, 0xFF, 0xA0, 0xE0, 0xCF, 0xFF, 0xFA, 0x0C, 0x08,
  0xFF, 0xFF, 0xA0, 0x80, 0x2F, 0xFF, 0xFA, 0x81, 0x20, 0x9F, 0xFF, 0xF0, 0x93, 0x0B, 0xFF, 0xFD,
  0x0B, 0x50, 0x9F, 0xFF, 0xB0, 0x97, 0x82, 0x28, 0xCE, 0xFF, 0xA8, 0x2E, 0xC8, 0x24,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_propane_tank() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(8, 4, 39, 43), Box(0, 0, 47, 47),
      ic_sharp_48_home_propane_tank_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_roller_shades_closed 48x48, 4-bit Alpha,  RLE, 140 bytes.
static const uint8_t ic_sharp_48_home_roller_shades_closed_data[] PROGMEM = {
  0x4F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF,
  0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71,
  0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF,
  0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F,
  0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC,
  0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF,
  0xFF, 0xC7, 0x1C, 0x73, 0xC7, 0x3C, 0x71, 0xC7, 0x3C, 0x73, 0xC7, 0x1C, 0x73, 0xC7, 0x3C, 0x71,
  0xC7, 0x3C, 0x73, 0xC4, 0x80, 0xAB, 0x4F, 0x77, 0x20, 0x6E, 0x06, 0x77, 0x77, 0x40, 0x2E, 0x02,
  0x77, 0x77, 0x50, 0x5C, 0x05, 0x77, 0x77, 0x78, 0x22, 0x66, 0x27, 0x74,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_roller_shades_closed() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(4, 6, 43, 45), Box(0, 0, 47, 47),
      ic_sharp_48_home_roller_shades_closed_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_roller_shades 48x48, 4-bit Alpha,  RLE, 143 bytes.
static const uint8_t ic_sharp_48_home_roller_shades_data[] PROGMEM = {
  0x4F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF,
  0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71,
  0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF,
  0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F,
  0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1C, 0x73, 0xC7, 0x3C, 0x71, 0xC7, 0x3C, 0x73, 0xC7, 0x1C,
  0x73, 0xC7, 0x3C, 0x71, 0xC7, 0x20, 0x1C, 0x01, 0x72, 0xC7, 0x1C, 0x72, 0x0C, 0xC0, 0xD0, 0x17,
  0x1C, 0x71, 0xC7, 0x10, 0x6E, 0x06, 0x71, 0xC7, 0x1C, 0x71, 0x08, 0xE0, 0x87, 0x1C, 0x71, 0xC7,
  0x10, 0x5E, 0x05, 0x71, 0xC7, 0x1C, 0x72, 0x0C, 0xC0, 0xC7, 0x2C, 0x71, 0xC7, 0x28, 0x41, 0x9E,
  0xE9, 0x17, 0x2C, 0x71, 0xC7, 0x77, 0x3C, 0x71, 0xC7, 0x77, 0x3C, 0x48, 0x0A, 0xB4, 0xF0,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_roller_shades() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(4, 6, 43, 41), Box(0, 0, 47, 47),
      ic_sharp_48_home_roller_shades_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_sensor_door 48x48, 4-bit Alpha,  RLE, 33 bytes.
static const uint8_t ic_sharp_48_home_sensor_door_data[] PROGMEM = {
  0x80, 0x98, 0xE1, 0xF8, 0x27, 0x11, 0x7F, 0xFF, 0xE0, 0x74, 0x07, 0xFF, 0xFD, 0x01, 0x40, 0x1F,
  0xFF, 0xD0, 0x14, 0x01, 0xFF, 0xFD, 0x07, 0x40, 0x7F, 0xFF, 0xE8, 0x27, 0x11, 0x78, 0x09, 0x8C,
  0x3F,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_sensor_door() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(8, 4, 39, 43), Box(0, 0, 47, 47),
      ic_sharp_48_home_sensor_door_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_sensor_occupied 48x48, 4-bit Alpha,  RLE, 361 bytes.
static const uint8_t ic_sharp_48_home_sensor_occupied_data[] PROGMEM = {
  0x73, 0x82, 0x18, 0xE1, 0x77, 0x28, 0x21, 0xE8, 0x17, 0x75, 0x07, 0x0E, 0xA0, 0x77, 0x72, 0x07,
  0xA0, 0xE0, 0x77, 0x72, 0x02, 0x0C, 0xC0, 0xD7, 0x72, 0x0D, 0xC0, 0xC0, 0x27, 0x60, 0x40, 0xED,
  0x0D, 0x01, 0x77, 0x01, 0x0D, 0xD0, 0xE0, 0x47, 0x40, 0x6D, 0x0E, 0x06, 0x77, 0x40, 0x60, 0xED,
  0x06, 0x72, 0x06, 0xD0, 0xA0, 0x17, 0x76, 0x01, 0x0A, 0xD0, 0x67, 0x04, 0xD0, 0x67, 0x77, 0x30,
  0x6D, 0x04, 0x50, 0x20, 0xEC, 0x04, 0x77, 0x75, 0x04, 0xC0, 0xE0, 0x24, 0x0C, 0xC0, 0x47, 0x48,
  0x46, 0xCE, 0xEC, 0x67, 0x40, 0x4C, 0x0C, 0x30, 0x7C, 0x06, 0x73, 0x01, 0x0C, 0xE0, 0xC0, 0x17,
  0x30, 0x6C, 0x82, 0x70, 0x1E, 0xB0, 0xA7, 0x40, 0xCF, 0x90, 0xC7, 0x40, 0xAB, 0x81, 0xE1, 0x8B,
  0x0E, 0x01, 0x73, 0x06, 0xFB, 0x06, 0x73, 0x01, 0x0E, 0xB0, 0x80, 0xEB, 0x06, 0x74, 0x0C, 0xFB,
  0x0C, 0x74, 0x06, 0xB8, 0x3E, 0x16, 0xDD, 0x75, 0x0E, 0xFB, 0x0E, 0x75, 0x82, 0xDD, 0x61, 0x30,
  0x17, 0x50, 0xEF, 0xB0, 0xE7, 0x50, 0x17, 0x75, 0x0C, 0xFB, 0x0C, 0x77, 0x77, 0x40, 0x6F, 0xB0,
  0x67, 0x77, 0x75, 0x0C, 0xF9, 0x0C, 0x77, 0x77, 0x60, 0x10, 0xCE, 0x0C, 0x01, 0x80, 0xC0, 0x08,
  0x46, 0xCE, 0xEC, 0x68, 0x09, 0xE7, 0x08, 0x33, 0x6A, 0xDD, 0xA8, 0x3D, 0xDA, 0x63, 0x77, 0x77,
  0x18, 0x11, 0x7D, 0xFD, 0x81, 0xD7, 0x17, 0x77, 0x40, 0x80, 0xEF, 0xFA, 0x0E, 0x08, 0x77, 0x71,
  0x01, 0x0D, 0xFF, 0xE0, 0xD0, 0x17, 0x76, 0x09, 0xFF, 0xF9, 0x09, 0x77, 0x60, 0xEF, 0xFF, 0x90,
  0xE7, 0x76, 0xFF, 0xFB, 0x76, 0x01, 0x6F, 0xFF, 0xB6, 0x01, 0x38, 0x21, 0x6D, 0xD6, 0xFF, 0xFB,
  0x68, 0x3D, 0xD6, 0x1E, 0xB0, 0x65, 0xFF, 0xFB, 0x50, 0x6B, 0x0E, 0x08, 0xB0, 0xE0, 0x17, 0x77,
  0x74, 0x01, 0x0E, 0xB8, 0x18, 0x1E, 0xB0, 0xA7, 0x77, 0x74, 0x0A, 0xB8, 0x2E, 0x10, 0x7C, 0x06,
  0x77, 0x77, 0x20, 0x6C, 0x07, 0x30, 0xCC, 0x04, 0x77, 0x77, 0x04, 0xC0, 0xC4, 0x02, 0x0E, 0xC0,
  0x47, 0x77, 0x50, 0x4C, 0x0E, 0x02, 0x50, 0x4D, 0x06, 0x77, 0x73, 0x06, 0xD0, 0x47, 0x06, 0xD0,
  0xA0, 0x17, 0x76, 0x01, 0x0A, 0xD0, 0x67, 0x20, 0x6D, 0x0E, 0x06, 0x77, 0x40, 0x60, 0xED, 0x06,
  0x74, 0x04, 0x0E, 0xD0, 0xD0, 0x17, 0x70, 0x10, 0xDD, 0x0E, 0x04, 0x76, 0x02, 0x0C, 0xC0, 0xD7,
  0x72, 0x0D, 0xC0, 0xC0, 0x27, 0x72, 0x07, 0x0E, 0xA0, 0x77, 0x72, 0x07, 0xA0, 0xE0, 0x77, 0x75,
  0x82, 0x18, 0xE1, 0x77, 0x28, 0x21, 0xE8, 0x17, 0x30,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_sensor_occupied() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(2, 2, 45, 45), Box(0, 0, 47, 47),
      ic_sharp_48_home_sensor_occupied_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_sensor_window 48x48, 4-bit Alpha,  RLE, 114 bytes.
static const uint8_t ic_sharp_48_home_sensor_window_data[] PROGMEM = {
  0x80, 0xA8, 0x0F, 0x77, 0x73, 0xF9, 0x77, 0x73, 0xF9, 0x2F, 0xFE, 0x2F, 0x92, 0xFF, 0xE2, 0xF9,
  0x2F, 0xFE, 0x2F, 0x92, 0xFF, 0xE2, 0xF9, 0x2F, 0xFE, 0x2F, 0x92, 0xFF, 0xE2, 0xF9, 0x2F, 0xFE,
  0x2F, 0x92, 0xFF, 0xE2, 0xF9, 0x2F, 0xFE, 0x2F, 0x92, 0xFF, 0xE2, 0xF9, 0x2E, 0x71, 0xE2, 0xF9,
  0x2E, 0x71, 0xE2, 0xF9, 0x77, 0x73, 0xF9, 0x77, 0x73, 0xF9, 0x77, 0x73, 0xF9, 0x77, 0x73, 0xF9,
  0x2F, 0xFE, 0x2F, 0x92, 0xFF, 0xE2, 0xF9, 0x2F, 0xFE, 0x2F, 0x92, 0xFF, 0xE2, 0xF9, 0x2F, 0xFE,
  0x2F, 0x92, 0xFF, 0xE2, 0xF9, 0x2F, 0xFE, 0x2F, 0x92, 0xFF, 0xE2, 0xF9, 0x2F, 0xFE, 0x2F, 0x92,
  0xFF, 0xE2, 0xF9, 0x2F, 0xFE, 0x2F, 0x92, 0xFF, 0xE2, 0xF9, 0x77, 0x73, 0xF9, 0x77, 0x73, 0x80,
  0xA8, 0x0F,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_sensor_window() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(8, 4, 39, 43), Box(0, 0, 47, 47),
      ic_sharp_48_home_sensor_window_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_shield_moon 48x48, 4-bit Alpha,  RLE, 217 bytes.
static const uint8_t ic_sharp_48_home_shield_moon_data[] PROGMEM = {
  0x76, 0x84, 0x16, 0xCC, 0x61, 0x77, 0x73, 0x04, 0x0A, 0xE0, 0xA0, 0x47, 0x75, 0x81, 0x28, 0xEF,
  0xB8, 0x1E, 0x82, 0x76, 0x81, 0x16, 0xCF, 0xFA, 0x81, 0xC6, 0x17, 0x10, 0x40, 0xAF, 0xFF, 0x90,
  0xA0, 0x43, 0x81, 0x28, 0xEF, 0xFF, 0xD8, 0x1E, 0x82, 0x80, 0xA9, 0x1F, 0x82, 0x94, 0x0B, 0xFF,
  0xFD, 0x0C, 0x02, 0x30, 0xAF, 0xFF, 0xC0, 0xB5, 0x0E, 0xFF, 0xFB, 0x0C, 0x50, 0x1F, 0xFF, 0xC0,
  0x35, 0x01, 0xFF, 0xFB, 0x0B, 0x7F, 0xFF, 0xB0, 0x67, 0x0D, 0xFF, 0xFA, 0x02, 0x70, 0x8F, 0xFF,
  0xA7, 0x10, 0x2F, 0xF9, 0x0D, 0xF7, 0x20, 0x8F, 0xE0, 0xD0, 0xCF, 0x02, 0x72, 0x0B, 0xFD, 0x0C,
  0x0B, 0xF0, 0x67, 0x30, 0x9F, 0xC0, 0xB0, 0x8F, 0x0B, 0x74, 0x04, 0x0B, 0xFA, 0x08, 0x04, 0xF9,
  0x04, 0x75, 0x01, 0x06, 0xF0, 0x41, 0xF9, 0x0D, 0x77, 0x0E, 0xE2, 0x0C, 0xF9, 0x0C, 0x01, 0x74,
  0x0B, 0xE0, 0xC2, 0x05, 0xFA, 0x0D, 0x03, 0x71, 0x03, 0x0C, 0xF0, 0x53, 0x0E, 0xFB, 0x81, 0xB6,
  0x22, 0x81, 0x25, 0xAF, 0x90, 0xE4, 0x08, 0xFF, 0xFD, 0x08, 0x40, 0x10, 0xEF, 0xFF, 0xB0, 0xE0,
  0x15, 0x05, 0xFF, 0xFB, 0x05, 0x70, 0xBF, 0xFF, 0x90, 0xB7, 0x10, 0x10, 0xEF, 0xFE, 0x0E, 0x01,
  0x72, 0x03, 0x0E, 0xFF, 0xC0, 0xE0, 0x37, 0x40, 0x4F, 0xFC, 0x04, 0x76, 0x04, 0x0E, 0xFF, 0x0E,
  0x04, 0x77, 0x10, 0x20, 0xDF, 0xD0, 0xD0, 0x27, 0x74, 0x08, 0xFB, 0x08, 0x77, 0x70, 0x20, 0xAE,
  0x0A, 0x02, 0x77, 0x73, 0x84, 0x17, 0xCC, 0x71, 0x76,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_shield_moon() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(8, 4, 39, 43), Box(0, 0, 47, 47),
      ic_sharp_48_home_shield_moon_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_solar_power 48x48, 4-bit Alpha,  RLE, 201 bytes.
static const uint8_t ic_sharp_48_home_solar_power_data[] PROGMEM = {
  0x2E, 0x20, 0xEF, 0xFC, 0x0E, 0x2E, 0x4E, 0x20, 0xDF, 0xFC, 0x0D, 0x2E, 0x4E, 0x20, 0x9F, 0xFC,
  0x09, 0x2E, 0x4E, 0x20, 0x5F, 0xFC, 0x05, 0x2E, 0x76, 0x0D, 0xFF, 0xA0, 0xD7, 0x77, 0x10, 0x4F,
  0xFA, 0x04, 0x77, 0x72, 0x08, 0xFF, 0x08, 0x77, 0x70, 0x23, 0x08, 0xFD, 0x08, 0x30, 0x27, 0x73,
  0x81, 0x4F, 0x83, 0x04, 0x0D, 0xF9, 0x0D, 0x04, 0x38, 0x18, 0xF4, 0x77, 0x10, 0x4B, 0x08, 0x48,
  0x65, 0x9D, 0xEE, 0xD9, 0x54, 0x08, 0xB0, 0x47, 0x60, 0x4D, 0x03, 0x77, 0x03, 0xD0, 0x47, 0x40,
  0x4D, 0x06, 0x77, 0x20, 0x6D, 0x04, 0x73, 0x01, 0x0C, 0xB0, 0x67, 0xC7, 0x06, 0xB0, 0xC0, 0x17,
  0x48, 0x21, 0xCF, 0x67, 0x1C, 0x71, 0x82, 0x6F, 0xC1, 0x76, 0x01, 0x05, 0x72, 0xC7, 0x20, 0x50,
  0x17, 0x77, 0x4C, 0x80, 0xC0, 0x0C, 0x80, 0xC0, 0x0C, 0x80, 0xAE, 0x10, 0x01, 0xFF, 0x4F, 0xF0,
  0x16, 0x05, 0xFF, 0x4F, 0xF0, 0x56, 0x08, 0xFF, 0x4F, 0xF0, 0x86, 0x0C, 0xFF, 0x4F, 0xF0, 0xC6,
  0xFF, 0x94, 0xFF, 0x95, 0x03, 0xFF, 0x94, 0xFF, 0x90, 0x38, 0x0A, 0xB7, 0x00, 0x5F, 0xFA, 0x4F,
  0xFA, 0x05, 0x20, 0x8F, 0xFA, 0x4F, 0xFA, 0x08, 0x20, 0xCF, 0xFA, 0x4F, 0xFA, 0x0C, 0x2F, 0xFB,
  0x4F, 0xFB, 0x10, 0x3F, 0xFB, 0x4F, 0xFB, 0x03, 0x06, 0xFF, 0xB4, 0xFF, 0xB0, 0x60, 0xAF, 0xFB,
  0x4F, 0xFB, 0x0A, 0x0D, 0xFF, 0xB4, 0xFF, 0xB0, 0xD0,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_solar_power() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(4, 4, 43, 43), Box(0, 0, 47, 47),
      ic_sharp_48_home_solar_power_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_vertical_shades_closed 48x48, 4-bit Alpha,  RLE, 171 bytes.
static const uint8_t ic_sharp_48_home_vertical_shades_closed_data[] PROGMEM = {
  0x4F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1C, 0x3C,
  0x3C, 0x3C, 0x3C, 0x71, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7, 0x1C, 0x3C, 0x3C, 0x3C, 0x3C, 0x71, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC7, 0x1C, 0x3C, 0x3C, 0x3C, 0x3C, 0x71, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7, 0x1C,
  0x3C, 0x3C, 0x3C, 0x3C, 0x71, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7, 0x1C, 0x3C, 0x3C, 0x3C, 0x3C, 0x71,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC7, 0x1C, 0x3C, 0x3C, 0x3C, 0x3C, 0x71, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7,
  0x1C, 0x3C, 0x3C, 0x3C, 0x3C, 0x71, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7, 0x1C, 0x3C, 0x3C, 0x3C, 0x3C,
  0x71, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7, 0x1C, 0x3C, 0x3C, 0x3C, 0x3C, 0x71, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC7, 0x1C, 0x3C, 0x3C, 0x3C, 0x3C, 0x71, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7, 0x1C, 0x3C, 0x3C, 0x3C,
  0x3C, 0x71, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7, 0x1C, 0x3C, 0x3C, 0x3C, 0x3C, 0x71, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC7, 0x1C, 0x3C, 0x3C, 0x3C, 0x3C, 0x71, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7, 0x1C, 0x3C, 0x3C,
  0x3C, 0x3C, 0x71, 0xC3, 0xC3, 0xC3, 0xC3, 0xC4, 0x80, 0xAB, 0x4F,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_vertical_shades_closed() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(4, 6, 43, 41), Box(0, 0, 47, 47),
      ic_sharp_48_home_vertical_shades_closed_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_vertical_shades 48x48, 4-bit Alpha,  RLE, 129 bytes.
static const uint8_t ic_sharp_48_home_vertical_shades_data[] PROGMEM = {
  0x4F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xFF, 0xFC, 0x71, 0xFF, 0xFF, 0xC7, 0x1F, 0xD7,
  0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7,
  0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7,
  0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7,
  0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7,
  0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7,
  0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7,
  0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD7, 0x1F, 0xD4, 0x80, 0xAB,
  0x4F,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_vertical_shades() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(4, 6, 43, 41), Box(0, 0, 47, 47),
      ic_sharp_48_home_vertical_shades_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_48_home_wind_power 48x48, 4-bit Alpha,  RLE, 317 bytes.
static const uint8_t ic_sharp_48_home_wind_power_data[] PROGMEM = {
  0x77, 0x77, 0x38, 0x11, 0xB7, 0x80, 0xC4, 0x00, 0x10, 0xDA, 0x0D, 0x04, 0x80, 0xC1, 0x00, 0x20,
  0xDD, 0x0A, 0x01, 0x77, 0x77, 0x60, 0x30, 0xEF, 0x0E, 0x07, 0x74, 0xFD, 0x72, 0x03, 0x0E, 0xFB,
  0x03, 0x73, 0xFD, 0x71, 0x04, 0x0E, 0xFB, 0x09, 0x74, 0xFD, 0x70, 0x5F, 0xC0, 0xE0, 0x17, 0x4F,
  0xD6, 0x06, 0xFD, 0x06, 0x77, 0x77, 0x10, 0x7F, 0xD0, 0xC7, 0x77, 0x71, 0x08, 0xFE, 0x03, 0x77,
  0x77, 0x1F, 0xE0, 0x97, 0x77, 0x72, 0xFD, 0x0E, 0x01, 0x71, 0xFB, 0x75, 0xFD, 0x06, 0x72, 0xFB,
  0x75, 0xFC, 0x0C, 0x73, 0xFB, 0x75, 0xFC, 0x03, 0x73, 0xFB, 0x75, 0xFB, 0x09, 0x77, 0x77, 0x5F,
  0xA0, 0xE0, 0x17, 0x77, 0x75, 0xFA, 0x06, 0x77, 0x77, 0x6F, 0x90, 0xC7, 0x77, 0x77, 0x83, 0x30,
  0x14, 0xBB, 0x03, 0x76, 0xFF, 0xE0, 0x76, 0x81, 0x7F, 0xA7, 0x7F, 0xFD, 0x0B, 0x28, 0x28, 0xDD,
  0x82, 0x0A, 0x01, 0x77, 0xFF, 0xD8, 0x14, 0x08, 0xC0, 0x87, 0x73, 0xFF, 0xD2, 0x0D, 0xC0, 0xD2,
  0x03, 0x77, 0xFF, 0xD2, 0x0D, 0xC0, 0xD2, 0x98, 0x2E, 0xB7, 0x37, 0x3F, 0xFD, 0x81, 0x40, 0x8C,
  0x81, 0x80, 0x3D, 0x81, 0xEB, 0x77, 0xFF, 0xD0, 0xB2, 0x82, 0x8D, 0xD8, 0x20, 0xAF, 0x90, 0x66,
  0xFF, 0xE0, 0x76, 0x07, 0xFA, 0x0E, 0x68, 0x22, 0x6B, 0xEF, 0xF9, 0x82, 0xA2, 0x03, 0x20, 0x30,
  0xAF, 0xC0, 0x87, 0x28, 0x14, 0x8D, 0xFB, 0x0D, 0x04, 0x3F, 0xFA, 0x0E, 0x01, 0x74, 0x82, 0x26,
  0xBE, 0xD0, 0x75, 0xFF, 0xB0, 0x97, 0x71, 0x83, 0x48, 0xDA, 0x26, 0xC0, 0xEF, 0xE0, 0x37, 0x77,
  0x4C, 0x03, 0x0E, 0xFD, 0x0B, 0x77, 0x74, 0xC1, 0x03, 0x0E, 0xFD, 0x04, 0x77, 0x73, 0xC2, 0x03,
  0x0E, 0xFC, 0x0D, 0x77, 0x73, 0xC3, 0x03, 0x0E, 0xFC, 0x06, 0x5F, 0xB7, 0x1C, 0x40, 0x30, 0xEF,
  0xB0, 0xE5, 0xFB, 0x71, 0xC5, 0x03, 0x0E, 0xFB, 0x08, 0x4F, 0xB7, 0x1C, 0x60, 0x30, 0xEF, 0xA0,
  0xB4, 0xFB, 0x71, 0xC7, 0x03, 0x0E, 0xF0, 0xC7, 0x76, 0x81, 0x1A, 0xDC, 0x81, 0xDA, 0x15, 0x03,
  0x0E, 0xD0, 0xC7, 0x76, 0x01, 0x0E, 0xF9, 0x0E, 0x01, 0x50, 0x30, 0xEB, 0x0C, 0x77, 0x70, 0xAF,
  0xB0, 0xA6, 0x82, 0x3E, 0xFC, 0x77, 0x71, 0x0D, 0xFB, 0x0D, 0x70, 0x30, 0xB5,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_48_home_wind_power() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      Box(2, 2, 45, 45), Box(0, 0, 47, 47),
      ic_sharp_48_home_wind_power_data, Alpha4(color::Black));
  return value;
}
