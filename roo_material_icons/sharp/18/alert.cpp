#include "alert.h"

using namespace roo_display;

// Image file ic_sharp_18_alert_add_alert 18x18, 4-bit Alpha,  RLE, 80 bytes.
static const uint8_t ic_sharp_18_alert_add_alert_data[] PROGMEM = {
  0x77, 0x74, 0x82, 0x1D, 0xD1, 0x77, 0x01, 0xA0, 0x17, 0x60, 0x40, 0xAA, 0x0A, 0x03, 0x74, 0x08,
  0xE0, 0x67, 0x20, 0x6F, 0x90, 0x47, 0x10, 0xEB, 0x00, 0x3B, 0x0C, 0x70, 0x2C, 0x00, 0x3C, 0x70,
  0x3A, 0x84, 0x33, 0x11, 0x33, 0xA0, 0x36, 0x03, 0xA0, 0x01, 0x20, 0x01, 0xA0, 0x36, 0x03, 0xC0,
  0x03, 0xC0, 0x36, 0x03, 0xC0, 0x03, 0xC0, 0x36, 0x04, 0xC0, 0x0E, 0xC0, 0x45, 0x01, 0x0D, 0xFB,
  0x0D, 0x01, 0x40, 0xAF, 0xD0, 0xA7, 0x20, 0xF1, 0x77, 0x10, 0x4A, 0x02, 0x77, 0x10, 0x01, 0x71,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_18_alert_add_alert() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_sharp_18_alert_add_alert_data, Alpha4(color::Black));
  return value;
}
// Image file ic_sharp_18_alert_auto_delete 18x18, 4-bit Alpha,  RLE, 81 bytes.
static const uint8_t ic_sharp_18_alert_auto_delete_data[] PROGMEM = {
  0x80, 0xC5, 0x08, 0x00, 0x37, 0x48, 0x11, 0x57, 0xC8, 0x1B, 0x54, 0x71, 0x02, 0x80, 0x47, 0x05,
  0x72, 0x03, 0x80, 0x29, 0x07, 0x73, 0x06, 0xE0, 0xC7, 0x30, 0x6E, 0x82, 0xEB, 0x81, 0x70, 0x6D,
  0x84, 0xA3, 0x26, 0xD3, 0x60, 0x6C, 0x85, 0xA0, 0x3A, 0x03, 0xC6, 0x06, 0xC8, 0x23, 0x03, 0xA2,
  0x0B, 0x02, 0x50, 0x6C, 0x86, 0x20, 0x2D, 0x50, 0xA3, 0x50, 0x6C, 0x06, 0x28, 0x22, 0xA6, 0xD6,
  0x85, 0x37, 0x77, 0x7D, 0x33, 0x09, 0x08, 0x74, 0x84, 0x3D, 0xBA, 0xD8, 0x77, 0x00, 0x38, 0x0C,
  0x60,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_18_alert_auto_delete() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_sharp_18_alert_auto_delete_data, Alpha4(color::Black));
  return value;
}
// Image file ic_sharp_18_alert_error_outline 18x18, 4-bit Alpha,  RLE, 108 bytes.
static const uint8_t ic_sharp_18_alert_error_outline_data[] PROGMEM = {
  0x77, 0x74, 0x82, 0x57, 0x75, 0x74, 0x01, 0x09, 0xE0, 0x90, 0x17, 0x83, 0x2D, 0xF8, 0x32, 0x83,
  0x38, 0xFD, 0x25, 0x82, 0x1D, 0xD2, 0x68, 0x22, 0xDD, 0x14, 0x81, 0x9F, 0x23, 0x00, 0x83, 0x81,
  0x2F, 0x93, 0x81, 0x1F, 0x84, 0x00, 0xB4, 0x08, 0x93, 0x81, 0x5F, 0x34, 0x00, 0xB4, 0x81, 0x3F,
  0x52, 0x06, 0x95, 0x00, 0xB5, 0x90, 0x62, 0x06, 0x95, 0x00, 0x85, 0x90, 0x62, 0x81, 0x5F, 0x37,
  0x38, 0x13, 0xF5, 0x28, 0x11, 0xF8, 0x40, 0x08, 0x40, 0x89, 0x48, 0x19, 0xF2, 0x30, 0x08, 0x38,
  0x12, 0xF9, 0x48, 0x21, 0xDD, 0x26, 0x82, 0x2D, 0xD1, 0x58, 0x32, 0xDF, 0x83, 0x28, 0x33, 0x8F,
  0xD2, 0x70, 0x10, 0x9E, 0x09, 0x01, 0x74, 0x82, 0x57, 0x75, 0x77, 0x74,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_18_alert_error_outline() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_sharp_18_alert_error_outline_data, Alpha4(color::Black));
  return value;
}
// Image file ic_sharp_18_alert_error 18x18, 4-bit Alpha,  RLE, 78 bytes.
static const uint8_t ic_sharp_18_alert_error_data[] PROGMEM = {
  0x77, 0x74, 0x82, 0x57, 0x75, 0x74, 0x01, 0x09, 0xE0, 0x90, 0x17, 0x02, 0x0D, 0xF9, 0x0D, 0x02,
  0x50, 0x10, 0xDF, 0xB0, 0xD0, 0x14, 0x09, 0xD0, 0x06, 0xD0, 0x94, 0xE0, 0x03, 0xE3, 0x05, 0xE0,
  0x03, 0xE0, 0x52, 0x06, 0xE0, 0x03, 0xE0, 0x62, 0x06, 0xE0, 0x06, 0xE0, 0x62, 0x05, 0xFF, 0x05,
  0x3E, 0x00, 0x6E, 0x40, 0x9D, 0x00, 0x6D, 0x09, 0x40, 0x10, 0xDF, 0xB0, 0xD0, 0x15, 0x02, 0x0D,
  0xF9, 0x0D, 0x02, 0x70, 0x10, 0x9E, 0x09, 0x01, 0x74, 0x82, 0x57, 0x75, 0x77, 0x74,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_18_alert_error() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_sharp_18_alert_error_data, Alpha4(color::Black));
  return value;
}
// Image file ic_sharp_18_alert_notification_important 18x18, 4-bit Alpha,  RLE, 75 bytes.
static const uint8_t ic_sharp_18_alert_notification_important_data[] PROGMEM = {
  0x77, 0x74, 0x82, 0x1D, 0xD1, 0x77, 0x01, 0xA0, 0x17, 0x60, 0x40, 0xBA, 0x0B, 0x04, 0x74, 0x08,
  0xE0, 0x87, 0x20, 0x6F, 0x90, 0x67, 0x10, 0xDB, 0x00, 0x3B, 0x0D, 0x70, 0x1C, 0x00, 0x3C, 0x01,
  0x60, 0x3C, 0x00, 0x3C, 0x03, 0x60, 0x3F, 0xB0, 0x36, 0x03, 0xC0, 0x09, 0xC0, 0x36, 0x03, 0xC0,
  0x03, 0xC0, 0x36, 0x04, 0xFB, 0x04, 0x50, 0x10, 0xDF, 0xB0, 0xD0, 0x14, 0x0B, 0xFD, 0x0B, 0x72,
  0x82, 0x13, 0x31, 0x77, 0x03, 0xA0, 0x37, 0x71, 0x00, 0x17, 0x10,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_18_alert_notification_important() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_sharp_18_alert_notification_important_data, Alpha4(color::Black));
  return value;
}
// Image file ic_sharp_18_alert_warning_amber 18x18, 4-bit Alpha,  RLE, 88 bytes.
static const uint8_t ic_sharp_18_alert_warning_amber_data[] PROGMEM = {
  0x77, 0x75, 0x00, 0x17, 0x72, 0x00, 0x87, 0x71, 0x02, 0xA0, 0x27, 0x78, 0x2B, 0xEE, 0xB7, 0x68,
  0x44, 0xF6, 0x6F, 0x47, 0x50, 0xD0, 0xC2, 0x0C, 0x0D, 0x74, 0x86, 0x7F, 0x45, 0x54, 0xF7, 0x72,
  0x89, 0x01, 0xEA, 0x0B, 0xB0, 0xAE, 0x17, 0x18, 0x90, 0x9F, 0x20, 0xBB, 0x02, 0xF9, 0x78, 0x13,
  0xF8, 0x20, 0x05, 0x28, 0x18, 0xF3, 0x60, 0xC0, 0xD7, 0x10, 0xD0, 0xC5, 0x81, 0x5F, 0x53, 0x00,
  0xB3, 0x81, 0x5F, 0x54, 0x0D, 0x0C, 0x40, 0x05, 0x40, 0xC0, 0xD3, 0x81, 0x8F, 0xD8, 0x06, 0xB8,
  0x1D, 0xF8, 0x28, 0x09, 0x4B, 0x80, 0xC1, 0x00,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_18_alert_warning_amber() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_sharp_18_alert_warning_amber_data, Alpha4(color::Black));
  return value;
}
// Image file ic_sharp_18_alert_warning 18x18, 4-bit Alpha,  RLE, 67 bytes.
static const uint8_t ic_sharp_18_alert_warning_data[] PROGMEM = {
  0x77, 0x75, 0x00, 0x17, 0x72, 0x00, 0x87, 0x71, 0x02, 0xA0, 0x27, 0x70, 0xBA, 0x0B, 0x76, 0x04,
  0xC0, 0x47, 0x50, 0xDC, 0x0D, 0x74, 0x07, 0xA0, 0x09, 0xA0, 0x77, 0x20, 0x10, 0xEA, 0x00, 0x3A,
  0x0E, 0x01, 0x71, 0x09, 0xB0, 0x03, 0xB0, 0x97, 0x03, 0xC0, 0x09, 0xC0, 0x36, 0x0C, 0xFB, 0x0C,
  0x50, 0x5D, 0x00, 0x3D, 0x05, 0x40, 0xDD, 0x00, 0x9D, 0x0D, 0x30, 0x8F, 0xF0, 0x82, 0x80, 0x94,
  0xB8, 0x0C, 0x10,
};

const RleImage4bppxBiased<Alpha4, PrgMemResource>& ic_sharp_18_alert_warning() {
  static RleImage4bppxBiased<Alpha4, PrgMemResource> value(
      18, 18, ic_sharp_18_alert_warning_data, Alpha4(color::Black));
  return value;
}
