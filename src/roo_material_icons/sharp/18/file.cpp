#include "file.h"

using namespace roo_display;

// Image file ic_sharp_18_file_approval 18x18, 4-bit Alpha,  RLE, 63 bytes.
static const uint8_t ic_sharp_18_file_approval_data[] PROGMEM = {
  0x50, 0x01, 0x71, 0x03, 0x0C, 0xA0, 0xC0, 0x35, 0x01, 0x0E, 0xC0, 0xE0, 0x14, 0x08, 0xE0, 0x84,
  0x0A, 0xE0, 0xA4, 0x02, 0x0E, 0xC0, 0xE0, 0x25, 0x06, 0xC0, 0x67, 0x0A, 0xA0, 0xA7, 0x18, 0x21,
  0xDD, 0x14, 0x89, 0x31, 0x33, 0x33, 0x66, 0x33, 0x33, 0x16, 0xFB, 0x81, 0x66, 0xE8, 0x04, 0x18,
  0x1E, 0x66, 0x98, 0x04, 0x79, 0x00, 0x6F, 0xB0, 0x06, 0xFB, 0x06, 0x01, 0x80, 0x63, 0x01,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_approval() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 1, 14, 16), Box(0, 0, 17, 17),
      ic_sharp_18_file_approval_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_attach_email 18x18, 4-bit Alpha,  RLE, 88 bytes.
static const uint8_t ic_sharp_18_file_attach_email_data[] PROGMEM = {
  0x18, 0x09, 0x03, 0x01, 0x28, 0x13, 0xEE, 0xFA, 0x0D, 0x06, 0x28, 0x23, 0xB2, 0xBE, 0x82, 0xC3,
  0x96, 0x28, 0x43, 0xFC, 0x35, 0xEA, 0x84, 0xE7, 0x2B, 0xF6, 0x20, 0x3B, 0x85, 0x91, 0x9B, 0x27,
  0xEA, 0x06, 0x20, 0x3C, 0x87, 0xD5, 0x3C, 0xFA, 0x33, 0x12, 0x03, 0xF9, 0x83, 0xE0, 0xBB, 0x12,
  0x03, 0xF9, 0x86, 0xC4, 0xA8, 0x51, 0x03, 0xF9, 0x86, 0xC4, 0x97, 0x6A, 0x33, 0xF9, 0x86, 0xC4,
  0x97, 0x6A, 0x33, 0xF9, 0x86, 0xC4, 0x94, 0x3A, 0x31, 0x80, 0x47, 0x81, 0x63, 0xB2, 0x0C, 0x01,
  0x74, 0x82, 0xAB, 0xB9, 0x76, 0x03, 0x02, 0x20,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_attach_email() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 2, 16, 15), Box(0, 0, 17, 17),
      ic_sharp_18_file_attach_email_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_attachment 18x18, 4-bit Alpha,  RLE, 59 bytes.
static const uint8_t ic_sharp_18_file_attachment_data[] PROGMEM = {
  0x48, 0x06, 0x14, 0x81, 0x1A, 0xEF, 0xB0, 0xE0, 0x62, 0x81, 0xD9, 0x27, 0x38, 0x34, 0xE3, 0x8B,
  0x20, 0x50, 0xC8, 0x02, 0xD0, 0xB2, 0x82, 0x98, 0xB5, 0x29, 0x06, 0x80, 0x33, 0x28, 0x2A, 0x7B,
  0x52, 0x90, 0x68, 0x03, 0x38, 0x44, 0x8E, 0x28, 0xB2, 0x05, 0x0C, 0x80, 0x4D, 0x0A, 0x02, 0x28,
  0x1D, 0x92, 0x77, 0x81, 0x1A, 0xEF, 0x90, 0xD7, 0x18, 0x05, 0x14,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_attachment() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 4, 17, 13), Box(0, 0, 17, 17),
      ic_sharp_18_file_attachment_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_cloud_circle 18x18, 4-bit Alpha,  RLE, 84 bytes.
static const uint8_t ic_sharp_18_file_cloud_circle_data[] PROGMEM = {
  0x68, 0x25, 0x77, 0x57, 0x20, 0x10, 0x9E, 0x09, 0x01, 0x50, 0x20, 0xDF, 0x90, 0xD0, 0x23, 0x01,
  0x0D, 0xFB, 0x0D, 0x01, 0x20, 0x9C, 0x82, 0xA5, 0x5B, 0xC0, 0x92, 0xC0, 0x94, 0x09, 0xC1, 0x05,
  0xA8, 0x1E, 0x91, 0x40, 0x2C, 0x05, 0x06, 0xA0, 0x37, 0x04, 0x0A, 0xA8, 0x26, 0x6F, 0xC7, 0x38,
  0x4D, 0xF6, 0x5F, 0xE7, 0x38, 0x1C, 0xF5, 0x1A, 0x09, 0x01, 0x70, 0x7A, 0x20, 0x9F, 0xD0, 0x92,
  0x01, 0x0D, 0xFB, 0x0D, 0x01, 0x30, 0x20, 0xDF, 0x90, 0xD0, 0x25, 0x01, 0x09, 0xE0, 0x90, 0x17,
  0x28, 0x25, 0x77, 0x56,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_cloud_circle() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 1, 16, 16), Box(0, 0, 17, 17),
      ic_sharp_18_file_cloud_circle_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_cloud_done 18x18, 4-bit Alpha,  RLE, 66 bytes.
static const uint8_t ic_sharp_18_file_cloud_done_data[] PROGMEM = {
  0x68, 0x45, 0xBE, 0xEB, 0x57, 0x40, 0xAE, 0x0A, 0x72, 0x09, 0xF9, 0x09, 0x60, 0x70, 0xCF, 0x0E,
  0xA0, 0x14, 0x0B, 0xF9, 0x84, 0x91, 0xCF, 0xA3, 0x20, 0x7F, 0x98, 0x19, 0x04, 0xC8, 0x1A, 0x0C,
  0xC8, 0x47, 0x9F, 0x90, 0x4E, 0x07, 0x0E, 0xC8, 0x34, 0x05, 0x04, 0xF0, 0xD0, 0xCD, 0x81, 0x40,
  0x4F, 0x90, 0xE0, 0x7E, 0x07, 0xFA, 0x81, 0xB0, 0xBF, 0xF9, 0x03, 0x20, 0x70, 0xCF, 0xB8, 0x1E,
  0xB3, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_cloud_done() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(0, 3, 17, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_cloud_done_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_cloud_download 18x18, 4-bit Alpha,  RLE, 74 bytes.
static const uint8_t ic_sharp_18_file_cloud_download_data[] PROGMEM = {
  0x68, 0x45, 0xBE, 0xEB, 0x57, 0x40, 0xAE, 0x0A, 0x72, 0x09, 0xF9, 0x09, 0x60, 0x70, 0xCB, 0x82,
  0xDB, 0xBD, 0xB0, 0x14, 0x0B, 0xD0, 0x72, 0x07, 0xB0, 0xA0, 0x32, 0x07, 0xE0, 0x72, 0x07, 0xD8,
  0x1A, 0x0C, 0xC8, 0x1D, 0xB5, 0x28, 0x15, 0xBD, 0xC0, 0x70, 0xEC, 0x0D, 0x01, 0x40, 0x10, 0xDC,
  0x0D, 0x0C, 0xD0, 0xD0, 0x12, 0x01, 0x0D, 0xD0, 0xE0, 0x7E, 0x82, 0xD1, 0x1D, 0xE8, 0x1B, 0x0B,
  0xE0, 0x0D, 0xF0, 0x32, 0x07, 0x0C, 0xFB, 0x81, 0xEB, 0x31,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_cloud_download() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(0, 3, 17, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_cloud_download_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_cloud_off 18x18, 4-bit Alpha,  RLE, 100 bytes.
static const uint8_t ic_sharp_18_file_cloud_off_data[] PROGMEM = {
  0x28, 0x90, 0x4C, 0x10, 0x4B, 0xEE, 0xB5, 0x71, 0x89, 0x13, 0xEC, 0x11, 0xB8, 0x9C, 0xFA, 0x71,
  0x82, 0x3E, 0xC1, 0x48, 0x16, 0xF9, 0x60, 0x70, 0xCA, 0x0C, 0x01, 0x48, 0x18, 0xF1, 0x48, 0x6B,
  0xFB, 0x88, 0xEC, 0x13, 0x82, 0x1F, 0xA3, 0x28, 0x17, 0xF5, 0x38, 0x23, 0xEC, 0x13, 0x0E, 0xA8,
  0x2A, 0x0C, 0xB5, 0x82, 0x3E, 0xC1, 0x48, 0x36, 0xF7, 0xE8, 0x68, 0x23, 0xEC, 0x14, 0x82, 0xAD,
  0xCB, 0x78, 0x23, 0xEC, 0x13, 0x83, 0x8E, 0x7F, 0x57, 0x89, 0x33, 0xEC, 0x10, 0x1D, 0xB0, 0xBF,
  0xB8, 0x80, 0x27, 0x85, 0xBF, 0xC1, 0x1C, 0x32, 0x07, 0x0C, 0xFB, 0x0C, 0x01, 0x77, 0x18, 0x13,
  0xE9, 0x77, 0x20, 0x33,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_cloud_off() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(0, 3, 17, 16), Box(0, 0, 17, 17),
      ic_sharp_18_file_cloud_off_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_cloud 18x18, 4-bit Alpha,  RLE, 50 bytes.
static const uint8_t ic_sharp_18_file_cloud_data[] PROGMEM = {
  0x68, 0x45, 0xBE, 0xEB, 0x57, 0x40, 0xAE, 0x0A, 0x72, 0x09, 0xF9, 0x09, 0x60, 0x70, 0xCF, 0xB0,
  0x14, 0x0B, 0xFD, 0x0A, 0x03, 0x20, 0x7F, 0xF9, 0x81, 0xA0, 0xCF, 0xFA, 0x07, 0x0E, 0xFF, 0xA0,
  0xD0, 0xCF, 0xFA, 0x0E, 0x07, 0xFF, 0xA8, 0x1B, 0x0B, 0xFF, 0x90, 0x32, 0x07, 0x0C, 0xFB, 0x81,
  0xEB, 0x31,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_cloud() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(0, 3, 17, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_cloud_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_cloud_queue 18x18, 4-bit Alpha,  RLE, 70 bytes.
static const uint8_t ic_sharp_18_file_cloud_queue_data[] PROGMEM = {
  0x68, 0x45, 0xBE, 0xEB, 0x57, 0x48, 0x6A, 0xFC, 0x89, 0xCF, 0xA7, 0x28, 0x19, 0xF6, 0x48, 0x16,
  0xF9, 0x68, 0x27, 0xCF, 0x86, 0x81, 0x8F, 0x14, 0x83, 0xBF, 0xB8, 0x16, 0x82, 0x1F, 0xA3, 0x28,
  0x17, 0xF5, 0x73, 0x0E, 0xA8, 0x2A, 0x0C, 0xB7, 0x68, 0x36, 0xF7, 0xE8, 0x77, 0x82, 0xAD, 0xCB,
  0x77, 0x83, 0x8E, 0x7F, 0x57, 0x68, 0x5D, 0xB0, 0xBF, 0xB8, 0x80, 0x57, 0x82, 0x8D, 0xF3, 0x20,
  0x70, 0xCF, 0xB8, 0x1E, 0xB3, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_cloud_queue() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(0, 3, 17, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_cloud_queue_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_cloud_sync 18x18, 4-bit Alpha,  RLE, 72 bytes.
static const uint8_t ic_sharp_18_file_cloud_sync_data[] PROGMEM = {
  0x70, 0x30, 0xF5, 0x68, 0x11, 0xBA, 0x20, 0xAA, 0x0E, 0x58, 0x22, 0xDC, 0x32, 0x82, 0xAF, 0xE2,
  0x58, 0x1A, 0xC1, 0x38, 0x2A, 0xBD, 0xB4, 0x81, 0x2F, 0x44, 0x83, 0x22, 0x4F, 0x23, 0x04, 0x97,
  0x10, 0x14, 0x05, 0x97, 0x82, 0x5D, 0xE6, 0x28, 0x32, 0xF4, 0x22, 0x20, 0x10, 0x8C, 0x02, 0x28,
  0x2B, 0xCB, 0xA2, 0x0D, 0xD8, 0x5E, 0x60, 0x2E, 0xFA, 0x2F, 0x81, 0xE0, 0xEA, 0x0A, 0x20, 0xAE,
  0x84, 0xB0, 0x55, 0x53, 0x30, 0x48, 0x01, 0x51,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_cloud_sync() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 17, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_cloud_sync_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_cloud_upload 18x18, 4-bit Alpha,  RLE, 68 bytes.
static const uint8_t ic_sharp_18_file_cloud_upload_data[] PROGMEM = {
  0x68, 0x45, 0xBE, 0xEB, 0x57, 0x40, 0xAE, 0x0A, 0x72, 0x09, 0xF9, 0x09, 0x60, 0x70, 0xCC, 0x00,
  0x7C, 0x01, 0x40, 0xBD, 0x07, 0x20, 0x7B, 0x0A, 0x03, 0x20, 0x7D, 0x07, 0x40, 0x7C, 0x81, 0xA0,
  0xCC, 0x81, 0xB3, 0x12, 0x81, 0x13, 0xBC, 0x07, 0x0E, 0xE0, 0x72, 0x07, 0xE0, 0xD0, 0xCE, 0x07,
  0x20, 0x7E, 0x0E, 0x07, 0xE8, 0x29, 0x33, 0x9E, 0x81, 0xB0, 0xBF, 0xF9, 0x03, 0x20, 0x70, 0xCF,
  0xB8, 0x1E, 0xB3, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_cloud_upload() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(0, 3, 17, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_cloud_upload_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_create_new_folder 18x18, 4-bit Alpha,  RLE, 54 bytes.
static const uint8_t ic_sharp_18_file_create_new_folder_data[] PROGMEM = {
  0x07, 0xD0, 0xD0, 0x17, 0x10, 0x7E, 0x0D, 0x80, 0x37, 0x03, 0x07, 0xFF, 0x00, 0x7F, 0x90, 0xD0,
  0xBC, 0x00, 0x7F, 0x90, 0x71, 0xC0, 0x07, 0xF9, 0x07, 0x1C, 0x00, 0x7E, 0x03, 0x58, 0x2B, 0xF7,
  0x7E, 0x89, 0x09, 0x73, 0x07, 0x7D, 0xF7, 0x7F, 0x90, 0x71, 0xC0, 0x07, 0xF9, 0x09, 0x03, 0xC0,
  0x07, 0xFF, 0x00, 0x7F, 0xF0, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_create_new_folder() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_create_new_folder_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_difference 18x18, 4-bit Alpha,  RLE, 93 bytes.
static const uint8_t ic_sharp_18_file_difference_data[] PROGMEM = {
  0x38, 0x04, 0x17, 0x07, 0xF0, 0x46, 0x07, 0xF9, 0x04, 0x50, 0x7F, 0xA0, 0x44, 0x07, 0xC0, 0x90,
  0xBC, 0x83, 0x31, 0x91, 0x7B, 0x82, 0xD3, 0x5D, 0xB8, 0x34, 0x3F, 0x27, 0xA0, 0xD3, 0x01, 0xB8,
  0x34, 0x3F, 0x27, 0xB8, 0x2B, 0x24, 0xBB, 0x83, 0x43, 0xF2, 0x7C, 0x09, 0x0B, 0xC8, 0x34, 0x3F,
  0x27, 0xB8, 0x00, 0xDB, 0x83, 0x43, 0xF2, 0x7A, 0x0D, 0x30, 0x1B, 0x83, 0x43, 0xF2, 0x7B, 0x80,
  0x0B, 0xB8, 0x34, 0x3F, 0x27, 0xFB, 0x83, 0x43, 0xF2, 0x7F, 0xB8, 0x34, 0x3F, 0x22, 0x80, 0x65,
  0x82, 0x13, 0xF5, 0x80, 0x33, 0x02, 0x40, 0x3F, 0xA0, 0xA5, 0x80, 0x61, 0x40,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_difference() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 0, 15, 17), Box(0, 0, 17, 17),
      ic_sharp_18_file_difference_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_download_done 18x18, 4-bit Alpha,  RLE, 44 bytes.
static const uint8_t ic_sharp_18_file_download_done_data[] PROGMEM = {
  0x72, 0x0A, 0x04, 0x72, 0x82, 0xBF, 0xE1, 0x78, 0x2B, 0xFE, 0x43, 0x02, 0x38, 0x2B, 0xFE, 0x43,
  0x86, 0xAE, 0x30, 0xBF, 0xE4, 0x48, 0x5B, 0xFE, 0xBF, 0xE3, 0x60, 0xBA, 0x0E, 0x03, 0x71, 0x81,
  0xBE, 0x37, 0x30, 0x27, 0x75, 0x01, 0x80, 0x67, 0x01, 0x03, 0xFB, 0x03,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_download_done() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 14, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_download_done_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_download_for_offline 18x18, 4-bit Alpha,  RLE, 77 bytes.
static const uint8_t ic_sharp_18_file_download_for_offline_data[] PROGMEM = {
  0x70, 0x02, 0x74, 0x03, 0x0B, 0xC0, 0xB0, 0x37, 0x09, 0xF9, 0x09, 0x50, 0x9F, 0xB0, 0x93, 0x03,
  0xD0, 0x05, 0xD0, 0x32, 0x0B, 0xD0, 0x05, 0xD0, 0xB2, 0xC8, 0x4C, 0x93, 0x39, 0xCC, 0x10, 0x2C,
  0x0E, 0x03, 0x20, 0x30, 0xEC, 0x00, 0x2D, 0x82, 0xE3, 0x3E, 0xD0, 0x21, 0xE0, 0x0E, 0xE2, 0x0B,
  0xA0, 0x88, 0x02, 0x30, 0x8A, 0x0B, 0x20, 0x3A, 0x09, 0x80, 0x25, 0x09, 0xA0, 0x33, 0x09, 0xFB,
  0x09, 0x50, 0x9F, 0x90, 0x97, 0x03, 0x0B, 0xC0, 0xB0, 0x37, 0x40, 0x02, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_download_for_offline() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 1, 16, 16), Box(0, 0, 17, 17),
      ic_sharp_18_file_download_for_offline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_downloading 18x18, 4-bit Alpha,  RLE, 94 bytes.
static const uint8_t ic_sharp_18_file_downloading_data[] PROGMEM = {
  0x48, 0x64, 0xBF, 0x55, 0xFB, 0x46, 0x89, 0x08, 0xFB, 0x51, 0x16, 0xBF, 0x44, 0x81, 0x8F, 0x56,
  0x81, 0x30, 0x42, 0x81, 0x3F, 0x53, 0x00, 0x63, 0x84, 0x3F, 0x40, 0xBB, 0x40, 0x0A, 0x48, 0x3B,
  0xB0, 0xF5, 0x40, 0x0A, 0x48, 0x36, 0xF2, 0xF3, 0x40, 0x0A, 0x48, 0x61, 0x52, 0xF3, 0x02, 0xEC,
  0x86, 0xE2, 0x01, 0x50, 0xF5, 0x20, 0x20, 0xEA, 0x0E, 0x02, 0x28, 0x36, 0xF0, 0xBB, 0x38, 0x22,
  0xEE, 0x23, 0x84, 0xBB, 0x03, 0xF5, 0x30, 0x02, 0x38, 0x13, 0xF3, 0x28, 0x18, 0xF5, 0x68, 0x13,
  0x04, 0x48, 0x90, 0x8F, 0xB6, 0x11, 0x6C, 0xF4, 0x68, 0x63, 0xAF, 0x55, 0xFB, 0x33,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_downloading() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 2, 15, 15), Box(0, 0, 17, 17),
      ic_sharp_18_file_downloading_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_download 18x18, 4-bit Alpha,  RLE, 43 bytes.
static const uint8_t ic_sharp_18_file_download_data[] PROGMEM = {
  0x38, 0x42, 0xBB, 0xBB, 0x26, 0x03, 0xC0, 0x36, 0x03, 0xC0, 0x36, 0x03, 0xC0, 0x34, 0x81, 0x33,
  0x6C, 0x81, 0x63, 0x32, 0x07, 0xF9, 0x07, 0x30, 0x7E, 0x07, 0x50, 0x7C, 0x07, 0x70, 0x7A, 0x07,
  0x72, 0x00, 0x77, 0x73, 0x01, 0x80, 0x67, 0x01, 0x03, 0xFB, 0x03,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_download() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 2, 14, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_download_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_drive_file_move 18x18, 4-bit Alpha,  RLE, 54 bytes.
static const uint8_t ic_sharp_18_file_drive_file_move_data[] PROGMEM = {
  0x01, 0x80, 0x15, 0x02, 0x72, 0x03, 0xD0, 0xE0, 0x27, 0x10, 0x3E, 0x0E, 0x80, 0x39, 0x01, 0x03,
  0xFF, 0x00, 0x3F, 0x0A, 0xE0, 0x03, 0xF1, 0x0A, 0xD0, 0x03, 0xC8, 0x17, 0x33, 0x20, 0xAC, 0x00,
  0x3C, 0x84, 0x85, 0x50, 0x1C, 0xC0, 0x03, 0xF0, 0x10, 0xCD, 0x00, 0x3F, 0x0C, 0xE0, 0x03, 0xFF,
  0x03, 0x01, 0x80, 0x92, 0x50, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_drive_file_move() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_drive_file_move_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_drive_file_move_rtl 18x18, 4-bit Alpha,  RLE, 54 bytes.
static const uint8_t ic_sharp_18_file_drive_file_move_rtl_data[] PROGMEM = {
  0x01, 0x80, 0x15, 0x02, 0x72, 0x03, 0xD0, 0xE0, 0x27, 0x10, 0x3E, 0x0E, 0x80, 0x39, 0x01, 0x03,
  0xFF, 0x00, 0x3E, 0x0A, 0xF0, 0x03, 0xD0, 0xA1, 0xF0, 0x03, 0xC0, 0xA2, 0x81, 0x33, 0x7C, 0x00,
  0x3C, 0x84, 0xC1, 0x05, 0x58, 0xC0, 0x03, 0xD0, 0xC0, 0x1F, 0x00, 0x3E, 0x0C, 0xF0, 0x03, 0xFF,
  0x03, 0x01, 0x80, 0x92, 0x50, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_drive_file_move_rtl() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_drive_file_move_rtl_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_drive_file_rename_outline 18x18, 4-bit Alpha,  RLE, 61 bytes.
static const uint8_t ic_sharp_18_file_drive_file_rename_outline_data[] PROGMEM = {
  0x71, 0x02, 0x06, 0x74, 0x82, 0x2E, 0xF6, 0x72, 0x81, 0x10, 0xAA, 0x06, 0x78, 0x52, 0xE6, 0x0A,
  0xF4, 0x60, 0x20, 0xEA, 0x81, 0x60, 0x36, 0x02, 0x0E, 0xC0, 0x26, 0x02, 0x0E, 0xC0, 0x46, 0x02,
  0x0E, 0xC0, 0x46, 0x02, 0x0E, 0xC8, 0x74, 0x01, 0x33, 0x33, 0x14, 0xC8, 0x24, 0x01, 0xDC, 0x00,
  0x4B, 0x82, 0x40, 0x1D, 0xD8, 0x34, 0x15, 0x53, 0x20, 0x38, 0x02, 0x50, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_drive_file_rename_outline() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 3, 15, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_drive_file_rename_outline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_drive_folder_upload 18x18, 4-bit Alpha,  RLE, 53 bytes.
static const uint8_t ic_sharp_18_file_drive_folder_upload_data[] PROGMEM = {
  0x01, 0x80, 0x15, 0x02, 0x72, 0x03, 0xD0, 0xE0, 0x27, 0x10, 0x3E, 0x0E, 0x80, 0x39, 0x01, 0x03,
  0xFF, 0x00, 0x3E, 0x00, 0xAE, 0x00, 0x3D, 0x0A, 0x20, 0xAD, 0x00, 0x3C, 0x0B, 0x02, 0x20, 0x20,
  0xBC, 0x00, 0x3E, 0x00, 0x5E, 0x00, 0x3E, 0x00, 0x5E, 0x00, 0x3E, 0x00, 0x8E, 0x00, 0x3F, 0xF0,
  0x30, 0x18, 0x09, 0x25, 0x01,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_drive_folder_upload() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_drive_folder_upload_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_file_download_done 18x18, 4-bit Alpha,  RLE, 45 bytes.
static const uint8_t ic_sharp_18_file_file_download_done_data[] PROGMEM = {
  0x73, 0x02, 0x73, 0x81, 0x7F, 0x27, 0x18, 0x17, 0xF7, 0x71, 0x81, 0x7F, 0x73, 0x08, 0x01, 0x38,
  0x17, 0xF7, 0x38, 0x62, 0xDC, 0x10, 0x7F, 0x75, 0x84, 0x2D, 0xC7, 0xF7, 0x78, 0x22, 0xDF, 0x77,
  0x20, 0x20, 0x67, 0x76, 0x03, 0x80, 0x47, 0x03, 0x20, 0x68, 0x04, 0xD0, 0x61,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_file_download_done() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 3, 14, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_file_download_done_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_file_download_off 18x18, 4-bit Alpha,  RLE, 72 bytes.
static const uint8_t ic_sharp_18_file_file_download_off_data[] PROGMEM = {
  0x10, 0x24, 0x80, 0x03, 0x58, 0x11, 0xE7, 0x30, 0xCA, 0x0C, 0x68, 0x16, 0xF7, 0x20, 0xCA, 0x0C,
  0x78, 0x36, 0xF7, 0x08, 0xA0, 0xC7, 0x18, 0x56, 0xF7, 0x09, 0xFC, 0x71, 0x89, 0x01, 0xDF, 0x70,
  0x9E, 0xBA, 0x16, 0x86, 0x3E, 0xF7, 0x09, 0xE3, 0x71, 0x84, 0x3E, 0xF7, 0x02, 0x73, 0x82, 0x3E,
  0xF7, 0x75, 0x82, 0x38, 0xF7, 0x76, 0x81, 0x6F, 0x76, 0x07, 0xF9, 0x07, 0x50, 0x28, 0x03, 0x58,
  0x17, 0xF7, 0x76, 0x81, 0x6E, 0x27, 0x60, 0x11,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_file_download_off() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 2, 15, 16), Box(0, 0, 17, 17),
      ic_sharp_18_file_file_download_off_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_file_download 18x18, 4-bit Alpha,  RLE, 45 bytes.
static const uint8_t ic_sharp_18_file_file_download_data[] PROGMEM = {
  0x38, 0x00, 0x36, 0x0C, 0xA0, 0xC6, 0x0C, 0xA0, 0xC6, 0x0C, 0xA0, 0xC6, 0x0C, 0xA0, 0xC3, 0x82,
  0x1A, 0xBE, 0xA8, 0x5E, 0xBA, 0x10, 0x3E, 0xC0, 0xE0, 0x33, 0x03, 0x0E, 0xA0, 0xE0, 0x35, 0x82,
  0x3E, 0xE3, 0x70, 0x03, 0x77, 0x07, 0x80, 0x4E, 0x07, 0x03, 0x80, 0x46, 0x03,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_file_download() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 2, 13, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_file_download_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_file_open 18x18, 4-bit Alpha,  RLE, 74 bytes.
static const uint8_t ic_sharp_18_file_file_open_data[] PROGMEM = {
  0x01, 0x80, 0x33, 0x60, 0x6F, 0x07, 0x50, 0x6D, 0x82, 0xD4, 0xF7, 0x40, 0x6D, 0x83, 0xD0, 0x4F,
  0x73, 0x06, 0xD0, 0xD2, 0x81, 0x4F, 0x42, 0x06, 0xE0, 0xFB, 0x0E, 0x06, 0x20, 0x6F, 0xB0, 0x62,
  0x06, 0xFB, 0x06, 0x20, 0x6F, 0xB0, 0x62, 0x06, 0xF8, 0x2C, 0xBB, 0x42, 0x06, 0xF0, 0x35, 0x06,
  0xF8, 0x53, 0x5D, 0xDD, 0x56, 0xF0, 0x30, 0x6A, 0x81, 0x93, 0x6F, 0x85, 0x36, 0xFD, 0xC1, 0x6F,
  0x85, 0x36, 0xE1, 0xD9, 0x18, 0x03, 0x30, 0x13, 0x00, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_file_open() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 1, 16, 16), Box(0, 0, 17, 17),
      ic_sharp_18_file_file_open_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_file_upload 18x18, 4-bit Alpha,  RLE, 39 bytes.
static const uint8_t ic_sharp_18_file_file_upload_data[] PROGMEM = {
  0x40, 0x0B, 0x70, 0xBA, 0x0B, 0x50, 0xBC, 0x0B, 0x30, 0xBE, 0x84, 0xB0, 0x13, 0x3D, 0xA8, 0x2D,
  0x33, 0x13, 0x0C, 0xA0, 0xC6, 0x0C, 0xA0, 0xC6, 0x0C, 0xA0, 0xC6, 0x82, 0x9B, 0xB9, 0x76, 0x07,
  0x80, 0x4E, 0x07, 0x03, 0x80, 0x46, 0x03,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_file_upload() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 3, 13, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_file_upload_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_folder_copy 18x18, 4-bit Alpha,  RLE, 65 bytes.
static const uint8_t ic_sharp_18_file_folder_copy_data[] PROGMEM = {
  0x30, 0x18, 0x00, 0x37, 0x50, 0x6C, 0x0B, 0x74, 0x06, 0xD0, 0xB8, 0x02, 0x58, 0x31, 0x07, 0x16,
  0xFD, 0x83, 0x31, 0xF3, 0x6F, 0xD8, 0x33, 0x1F, 0x36, 0xFD, 0x83, 0x31, 0xF3, 0x6F, 0xD8, 0x33,
  0x1F, 0x36, 0xFD, 0x83, 0x31, 0xF3, 0x6F, 0xD8, 0x33, 0x1F, 0x36, 0xFD, 0x83, 0x31, 0xF3, 0x6F,
  0xD8, 0x33, 0x1F, 0x33, 0x80, 0x90, 0x98, 0x21, 0x1F, 0x37, 0x70, 0x1F, 0xE0, 0x13, 0x80, 0x91,
  0x33,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_folder_copy() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(0, 1, 16, 15), Box(0, 0, 17, 17),
      ic_sharp_18_file_folder_copy_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_folder_delete 18x18, 4-bit Alpha,  RLE, 60 bytes.
static const uint8_t ic_sharp_18_file_folder_delete_data[] PROGMEM = {
  0x01, 0x80, 0x15, 0x02, 0x72, 0x03, 0xD0, 0xE0, 0x27, 0x10, 0x3E, 0x0E, 0x80, 0x39, 0x01, 0x03,
  0xFF, 0x00, 0x3F, 0xA0, 0x0B, 0xB0, 0x03, 0xF0, 0xE0, 0x12, 0x02, 0xA0, 0x03, 0xF9, 0x82, 0x5B,
  0x97, 0xA0, 0x03, 0xF9, 0x82, 0x5B, 0x97, 0xA0, 0x03, 0xF9, 0x82, 0x52, 0x27, 0xA0, 0x03, 0xF9,
  0x82, 0xED, 0xDE, 0xA0, 0x03, 0xFF, 0x03, 0x01, 0x80, 0x92, 0x50, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_folder_delete() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_folder_delete_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_folder_off 18x18, 4-bit Alpha,  RLE, 75 bytes.
static const uint8_t ic_sharp_18_file_folder_off_data[] PROGMEM = {
  0x00, 0x77, 0x78, 0x56, 0xF7, 0x01, 0x52, 0x72, 0x03, 0xA8, 0x37, 0x09, 0xE2, 0x71, 0x03, 0xB8,
  0x27, 0x09, 0xE8, 0x03, 0x90, 0x10, 0x3C, 0x81, 0x70, 0x9F, 0x00, 0x3D, 0x81, 0x70, 0x9E, 0x00,
  0x3E, 0x81, 0x70, 0x9D, 0x00, 0x3F, 0x81, 0x70, 0x9C, 0x00, 0x3F, 0x98, 0x17, 0x09, 0xB0, 0x03,
  0xFA, 0x81, 0x70, 0x9A, 0x00, 0x3F, 0xB8, 0x47, 0x09, 0xF3, 0x3F, 0xC8, 0x37, 0x09, 0x31, 0x80,
  0x65, 0x81, 0x7F, 0x77, 0x78, 0x16, 0xF7, 0x77, 0x06, 0x07, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_folder_off() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 2, 16, 16), Box(0, 0, 17, 17),
      ic_sharp_18_file_folder_off_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_folder_open 18x18, 4-bit Alpha,  RLE, 45 bytes.
static const uint8_t ic_sharp_18_file_folder_open_data[] PROGMEM = {
  0x07, 0xD0, 0xD0, 0x17, 0x10, 0x7E, 0x0D, 0x80, 0x37, 0x03, 0x07, 0xFF, 0x00, 0x79, 0x75, 0x90,
  0x07, 0x97, 0x59, 0x00, 0x79, 0x75, 0x90, 0x07, 0x97, 0x59, 0x00, 0x79, 0x75, 0x90, 0x07, 0x97,
  0x59, 0x00, 0x79, 0x75, 0x90, 0x07, 0x98, 0x09, 0x07, 0x90, 0x07, 0xFF, 0x07,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_folder_open() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_folder_open_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_folder 18x18, 4-bit Alpha,  RLE, 36 bytes.
static const uint8_t ic_sharp_18_file_folder_data[] PROGMEM = {
  0x07, 0xD0, 0xD0, 0x17, 0x10, 0x7E, 0x0D, 0x80, 0x37, 0x03, 0x07, 0xFF, 0x00, 0x7F, 0xF0, 0x07,
  0xFF, 0x00, 0x7F, 0xF0, 0x07, 0xFF, 0x00, 0x7F, 0xF0, 0x07, 0xFF, 0x00, 0x7F, 0xF0, 0x07, 0xFF,
  0x00, 0x7F, 0xF0, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_folder() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_folder_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_folder_shared 18x18, 4-bit Alpha,  RLE, 57 bytes.
static const uint8_t ic_sharp_18_file_folder_shared_data[] PROGMEM = {
  0x07, 0xD0, 0xD0, 0x17, 0x10, 0x7E, 0x0D, 0x80, 0x37, 0x03, 0x07, 0xFF, 0x00, 0x7F, 0x90, 0xE0,
  0xCC, 0x00, 0x7F, 0x82, 0xE1, 0x08, 0xB0, 0x07, 0xF0, 0xC2, 0x04, 0xB0, 0x07, 0xF9, 0x81, 0x84,
  0xDB, 0x00, 0x7F, 0x82, 0xD9, 0x8A, 0xB0, 0x07, 0xE0, 0x84, 0x83, 0x2E, 0xF7, 0x7E, 0x06, 0x80,
  0x13, 0x82, 0xCF, 0x77, 0xFF, 0x00, 0x7F, 0xF0, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_folder_shared() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_folder_shared_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_folder_zip 18x18, 4-bit Alpha,  RLE, 60 bytes.
static const uint8_t ic_sharp_18_file_folder_zip_data[] PROGMEM = {
  0x01, 0x80, 0x15, 0x02, 0x72, 0x03, 0xD0, 0xE0, 0x27, 0x10, 0x3E, 0x0E, 0x80, 0x39, 0x01, 0x03,
  0xFB, 0x0C, 0x0D, 0xA0, 0x03, 0xFB, 0x02, 0x07, 0xA0, 0x03, 0xF9, 0x82, 0xC1, 0xBE, 0xA0, 0x03,
  0xF9, 0x82, 0xD7, 0x7B, 0xA0, 0x03, 0xF9, 0x82, 0xEB, 0x59, 0xA0, 0x03, 0xF9, 0x81, 0xC0, 0xDB,
  0x00, 0x3F, 0xA0, 0xDC, 0x00, 0x3F, 0xF0, 0x30, 0x18, 0x09, 0x25, 0x01,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_folder_zip() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_folder_zip_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_format_overline 18x18, 4-bit Alpha,  RLE, 53 bytes.
static const uint8_t ic_sharp_18_file_format_overline_data[] PROGMEM = {
  0x01, 0x80, 0x43, 0x01, 0x07, 0xF9, 0x07, 0x76, 0x82, 0x58, 0x85, 0x40, 0x20, 0xDC, 0x89, 0x6D,
  0x20, 0x1E, 0xF9, 0x44, 0x9F, 0xE1, 0x8F, 0x84, 0x82, 0x8F, 0x8D, 0x96, 0x98, 0x1D, 0xEE, 0x68,
  0x3E, 0xEC, 0xF1, 0x48, 0x41, 0xFC, 0x6F, 0xB4, 0x89, 0x2B, 0xF6, 0x0B, 0xFD, 0x99, 0xDF, 0xB3,
  0x09, 0xC0, 0x96, 0x00, 0x34,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_format_overline() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(4, 2, 13, 15), Box(0, 0, 17, 17),
      ic_sharp_18_file_format_overline_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_grid_view 18x18, 4-bit Alpha,  RLE, 65 bytes.
static const uint8_t ic_sharp_18_file_grid_view_data[] PROGMEM = {
  0x01, 0x80, 0x14, 0x28, 0x01, 0x40, 0x10, 0x4D, 0x00, 0x1D, 0x00, 0x4D, 0x00, 0x1D, 0x00, 0x4D,
  0x00, 0x1D, 0x00, 0x4D, 0x00, 0x1D, 0x00, 0x4D, 0x00, 0x1D, 0x04, 0x18, 0x01, 0x12, 0x80, 0x11,
  0x28, 0x01, 0x12, 0x80, 0x11, 0x10, 0x4D, 0x00, 0x1D, 0x00, 0x4D, 0x00, 0x1D, 0x00, 0x4D, 0x00,
  0x1D, 0x00, 0x4D, 0x00, 0x1D, 0x00, 0x4D, 0x00, 0x1D, 0x04, 0x01, 0x80, 0x14, 0x28, 0x01, 0x40,
  0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_grid_view() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 2, 15, 15), Box(0, 0, 17, 17),
      ic_sharp_18_file_grid_view_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_newspaper 18x18, 4-bit Alpha,  RLE, 84 bytes.
static const uint8_t ic_sharp_18_file_newspaper_data[] PROGMEM = {
  0x38, 0x11, 0x01, 0x48, 0x11, 0x01, 0x38, 0x97, 0x39, 0x9D, 0x5E, 0x6B, 0xB6, 0xE5, 0xD9, 0x93,
  0x3F, 0xF0, 0x03, 0x98, 0x09, 0x0D, 0x98, 0x23, 0x3F, 0x27, 0x38, 0x42, 0xF3, 0x3F, 0x27, 0x38,
  0x42, 0xF3, 0x3F, 0x88, 0x06, 0x78, 0x28, 0xF3, 0x39, 0x80, 0x1D, 0x00, 0xE8, 0x01, 0xD9, 0x82,
  0x33, 0xF2, 0x40, 0x0A, 0x48, 0x42, 0xF3, 0x3F, 0x24, 0x89, 0x2A, 0xEB, 0xBB, 0xBC, 0xF3, 0x3F,
  0x24, 0x89, 0x2A, 0xD9, 0x99, 0x9A, 0xF3, 0x3F, 0x24, 0x00, 0xA4, 0x82, 0x2F, 0x33, 0xFF, 0x03,
  0x18, 0x09, 0x23, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_newspaper() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 2, 16, 15), Box(0, 0, 17, 17),
      ic_sharp_18_file_newspaper_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_request_quote 18x18, 4-bit Alpha,  RLE, 56 bytes.
static const uint8_t ic_sharp_18_file_request_quote_data[] PROGMEM = {
  0x80, 0x37, 0x05, 0x4E, 0x81, 0xEF, 0x73, 0xE8, 0x2B, 0x5F, 0x72, 0xE8, 0x3B, 0x05, 0xF7, 0x1E,
  0x0B, 0x28, 0x15, 0xF7, 0xD0, 0x0C, 0xF9, 0x84, 0xD7, 0x11, 0x7D, 0xE0, 0xB4, 0x0B, 0xE8, 0x4B,
  0x08, 0xBB, 0xEE, 0x0B, 0x40, 0xBE, 0x84, 0xEB, 0xB8, 0x0B, 0xE0, 0xB4, 0x0B, 0xE8, 0x4D, 0x71,
  0x17, 0xDF, 0x90, 0x0C, 0xFF, 0xB8, 0x09, 0x07,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_request_quote() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 1, 14, 16), Box(0, 0, 17, 17),
      ic_sharp_18_file_request_quote_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_rule_folder 18x18, 4-bit Alpha,  RLE, 63 bytes.
static const uint8_t ic_sharp_18_file_rule_folder_data[] PROGMEM = {
  0x07, 0xD0, 0xD0, 0x17, 0x10, 0x7E, 0x0D, 0x80, 0x37, 0x03, 0x07, 0xFF, 0x00, 0x7F, 0xF0, 0x07,
  0xD8, 0x5E, 0x7E, 0xCE, 0xEC, 0xA0, 0x07, 0xC8, 0xA3, 0xE4, 0x0A, 0x13, 0x31, 0xEF, 0x77, 0xFE,
  0x37, 0x40, 0x9F, 0x92, 0x09, 0xA0, 0x07, 0xA0, 0x52, 0x82, 0x9F, 0xE3, 0x28, 0x33, 0xEF, 0x77,
  0xB0, 0x60, 0x9B, 0x82, 0x5A, 0xA5, 0xA0, 0x07, 0xFF, 0x00, 0x7F, 0xF0, 0x07, 0xFF, 0x07,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_rule_folder() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_rule_folder_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_snippet_folder 18x18, 4-bit Alpha,  RLE, 61 bytes.
static const uint8_t ic_sharp_18_file_snippet_folder_data[] PROGMEM = {
  0x07, 0xD0, 0xD0, 0x17, 0x10, 0x7E, 0x0D, 0x80, 0x37, 0x03, 0x07, 0xFF, 0x00, 0x7F, 0x82, 0xEB,
  0xBD, 0xB0, 0x07, 0xF8, 0x3B, 0x01, 0x1C, 0xA0, 0x07, 0xF8, 0x7B, 0x1F, 0x81, 0xDF, 0x77, 0xF0,
  0xB0, 0x1A, 0x83, 0x1B, 0xF7, 0x7F, 0x0B, 0x01, 0xA8, 0x31, 0xBF, 0x77, 0xF8, 0x7B, 0x19, 0x91,
  0xBF, 0x77, 0xF8, 0x7C, 0x33, 0x33, 0xCF, 0x77, 0xFF, 0x00, 0x7F, 0xF0, 0x70,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_snippet_folder() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_snippet_folder_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_text_snippet 18x18, 4-bit Alpha,  RLE, 67 bytes.
static const uint8_t ic_sharp_18_file_text_snippet_data[] PROGMEM = {
  0x08, 0x80, 0x4B, 0x07, 0x40, 0xBF, 0xA0, 0x73, 0x0B, 0xFB, 0x07, 0x20, 0xBA, 0x84, 0x63, 0x33,
  0x39, 0xB8, 0x17, 0x0B, 0xA8, 0x46, 0x33, 0x33, 0x9C, 0x07, 0x0B, 0xFD, 0x00, 0xBA, 0x06, 0x80,
  0x23, 0x06, 0xA0, 0x0B, 0xA0, 0x68, 0x02, 0x30, 0x6A, 0x00, 0xBF, 0xD0, 0x0B, 0xA0, 0x68, 0x02,
  0x30, 0x6A, 0x00, 0xBA, 0x06, 0x80, 0x23, 0x06, 0xA0, 0x0B, 0xFD, 0x00, 0xBF, 0xD0, 0xB0, 0x88,
  0x09, 0x0B, 0x08,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_text_snippet() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(2, 2, 15, 15), Box(0, 0, 17, 17),
      ic_sharp_18_file_text_snippet_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_topic 18x18, 4-bit Alpha,  RLE, 49 bytes.
static const uint8_t ic_sharp_18_file_topic_data[] PROGMEM = {
  0x07, 0xD0, 0xD0, 0x17, 0x10, 0x7E, 0x0D, 0x80, 0x37, 0x03, 0x07, 0xFF, 0x00, 0x7F, 0xF0, 0x07,
  0xA0, 0xB8, 0x04, 0x70, 0xBA, 0x00, 0x7A, 0x07, 0x71, 0x07, 0xA0, 0x07, 0xFF, 0x00, 0x7A, 0x0B,
  0x80, 0x17, 0x0B, 0xD0, 0x07, 0xA0, 0x75, 0x07, 0xD0, 0x07, 0xFF, 0x00, 0x7F, 0xF0, 0x07, 0xFF,
  0x07,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_topic() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 3, 16, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_topic_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_upload_file 18x18, 4-bit Alpha,  RLE, 66 bytes.
static const uint8_t ic_sharp_18_file_upload_file_data[] PROGMEM = {
  0x01, 0x80, 0x33, 0x40, 0x6F, 0x07, 0x30, 0x6D, 0x82, 0xD4, 0xF7, 0x20, 0x6D, 0x85, 0xD0, 0x4F,
  0x70, 0x6D, 0x0D, 0x28, 0x24, 0xF4, 0x6E, 0x0F, 0xB8, 0x1E, 0x66, 0xFB, 0x00, 0x6C, 0x00, 0x9C,
  0x00, 0x6B, 0x09, 0x20, 0x9B, 0x00, 0x6A, 0x84, 0xC3, 0x11, 0x3C, 0xA0, 0x06, 0xC0, 0x05, 0xC0,
  0x06, 0xC0, 0x05, 0xC0, 0x06, 0xC0, 0x0A, 0xC0, 0x06, 0xFB, 0x00, 0x6F, 0xB0, 0x60, 0x18, 0x06,
  0x30, 0x10,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_upload_file() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 1, 14, 16), Box(0, 0, 17, 17),
      ic_sharp_18_file_upload_file_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_upload 18x18, 4-bit Alpha,  RLE, 42 bytes.
static const uint8_t ic_sharp_18_file_upload_data[] PROGMEM = {
  0x50, 0x04, 0x72, 0x04, 0xA0, 0x47, 0x04, 0xC0, 0x45, 0x04, 0xE0, 0x43, 0x04, 0xF9, 0x04, 0x28,
  0x17, 0x79, 0xC8, 0x19, 0x77, 0x40, 0x3C, 0x03, 0x60, 0x3C, 0x03, 0x60, 0x3C, 0x03, 0x60, 0x3C,
  0x03, 0x77, 0x10, 0x18, 0x06, 0x70, 0x10, 0x3F, 0xB0, 0x30,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_upload() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(3, 2, 14, 14), Box(0, 0, 17, 17),
      ic_sharp_18_file_upload_data, Alpha4(color::Black));
  return value;
}

// Image file ic_sharp_18_file_workspaces 18x18, 4-bit Alpha,  RLE, 62 bytes.
static const uint8_t ic_sharp_18_file_workspaces_data[] PROGMEM = {
  0x70, 0x03, 0x76, 0x0B, 0xA0, 0xB7, 0x40, 0x7C, 0x07, 0x73, 0x0A, 0xC0, 0xA7, 0x30, 0x6C, 0x06,
  0x74, 0x09, 0xA0, 0x98, 0x0C, 0x30, 0x83, 0x3D, 0xFD, 0x34, 0x83, 0x3D, 0xFD, 0x32, 0x0D, 0xB0,
  0xD4, 0x0D, 0xB8, 0x1D, 0x02, 0xD0, 0x22, 0x02, 0xD8, 0x12, 0x0E, 0xB0, 0xE4, 0x0E, 0xB0, 0xE2,
  0x83, 0x5E, 0xFE, 0x54, 0x83, 0x5E, 0xFE, 0x53, 0x81, 0x13, 0x16, 0x81, 0x13, 0x12,
};

const RleImage4bppxBiased<Alpha4, ProgMemPtr>& ic_sharp_18_file_workspaces() {
  static RleImage4bppxBiased<Alpha4, ProgMemPtr> value(
      Box(1, 2, 16, 15), Box(0, 0, 17, 17),
      ic_sharp_18_file_workspaces_data, Alpha4(color::Black));
  return value;
}
